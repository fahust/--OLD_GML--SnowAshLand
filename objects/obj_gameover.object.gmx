<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///livre de mort
i = 0
alphamort = 0
bullettirer = 0
enemitoucher = 0
enemituer = 0
tempsdejeu = 0
tempsingame = 0
mortpar = 0
coequipier = 0
joueurtoucher = 0
joueurtuer = 0
levelupinlife = 0

imagespeed2 = 0

colortext2 =  make_color_rgb(158,142,138)
print = "";
time[0] = 0;
time[1] = 0;
time[2] = 0;
time[3] = 0;
time[4] = 0;
time[5] = 0;
time[6] = 0;
time[7] = 0;
time[8] = 0;
time[9] = 0;
time[10] = 0;
time[11] = 0;
time[12] = 0;
time[13] = 0;
time[14] = 0;
time[15] = 0;
maxlength = 1300
font_size = 30
textprecedent = "1";
text = ""


//alarm[0] = 2200*global.varfpsmax
alarm[4] = 200*global.varfpsmax
alarm[5] = 500*global.varfpsmax



//Big game over
/*

ini_open("savefile.ini")
   ini_write_real("player","x",1336);
    ini_write_real("player","y",1666);
ini_close();


 ///DEchargement des items perso
   while obj_zombie.water1save &gt; 0  {
 obj_zombie.water1save -= 1
    scr_itemdrop(0);
    
    
    }
    

    while obj_zombie.food1save &gt; 0 {
    scr_itemdrop(1)
    obj_zombie.food1save -=1
    }
    
  
    while obj_zombie.food2save &gt; 0 {
    scr_itemdrop(2)
    obj_zombie.food2save -=1
    }
    

    while obj_zombie.bandagesave &gt; 0 {
    scr_itemdrop(3)
    obj_zombie.bandagesave -=1
    }

    
     while obj_zombie.pilesave &gt; 0 {
    scr_itemdrop(4)
    obj_zombie.pilesave -=1
    }
    
    while obj_zombie.piecedarmesave &gt; 0 {
    scr_itemdrop(5)
    obj_zombie.piecedarmesave -=1
    }
    
    while obj_zombie.piecedarmuresave &gt; 0 {
    scr_itemdrop(6)
    obj_zombie.piecedarmuresave -=1
    }
    
    
    obj_zombie.maxhunger = 100
    obj_zombie.maxthirst = 100
    obj_zombie.nowhunger = 100
    obj_zombie.nowthirst = 100
    obj_zombie.freeze = 100
    obj_zombie.pile = 100
    obj_zombie.duraarmure = 10
    global.nbrpart2 = 0
    global.windup = 0
    global.winddown = 0
    global.alarmwindsave = 50000
    global.alarmwindsave2 = 10000
    global.alphawind = 0.1
    global.temperature = -10
    
    global.duraarme = 10
    global.duraarme2 = 10
    global.duraarme3 = 10
    
    
    
   // obj_nightcycle.daysurvive = 0
    
 
    
ini_open("savefile.ini")
    //ini_write_real("player","daysurvive",obj_nightcycle.daysurvive);

    ini_write_real("player","maxhunger",obj_zombie.maxhunger);
    ini_write_real("player","maxthirst",obj_zombie.maxthirst);
    ini_write_real("player","nowhunger",obj_zombie.nowhunger);
    ini_write_real("player","nowthirst",obj_zombie.nowthirst);
    ini_write_real("player","freeze",obj_zombie.freeze);
    ini_write_real("player","pile",obj_zombie.pile);

    
    ini_write_real("player","duraarmure",obj_zombie.duraarmure);
    ini_write_real("player","water1save",obj_zombie.water1save);
    ini_write_real("player","food1save",obj_zombie.food1save);
    ini_write_real("player","food2save",obj_zombie.food2save);
    ini_write_real("player","bandagesave",obj_zombie.bandagesave);
    ini_write_real("player","pilesave",obj_zombie.pilesave);
    ini_write_real("player","piecedarmesave",obj_zombie.piecedarmesave);
    ini_write_real("player","piecedarmuresave",obj_zombie.piecedarmuresave);  
    ini_write_real("player","wind",global.nbrpart2);
    ini_write_real("player","windup",global.windup);
    ini_write_real("player","winddown",global.winddown);
    ini_write_real("player","alarmwind",global.alarmwindsave);
    ini_write_real("player","alarmwind2",global.alarmwindsave2);
    ini_write_real("player","alarmalpha",global.alphawind);
    ini_write_real("player","temperature",global.temperature);
    ini_write_real("player","interieur",global.interieur);
    ini_write_real("player","freezehour",obj_zombie.freezehour);
    ini_write_real("player","time",0);
       
    ini_close();

    
    room_goto(room2);
    obj_zombie.x = 1334;
    obj_zombie.y = 1664;
    
    obj_zombie.hp = obj_zombie.maxhp


global.sl_time = 0
scr_savegame();

    obj_nightcycle.daysurvive = 0
    if instance_exists(obj_engine){
    obj_engine.alarm[0] = 2
    obj_engine.alarm[1] = 10
    }else{
    alarm[1] = 10
    }
    alarm[0] = 4
     
    



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHOICE DIE
alarm[0] = 2200*global.varfpsmax;alarm[6] = -1
i = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if i &lt; 16 {i += 1
alarm[5] = 80}else{

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_zombie.hp &lt;= 0  {}else{
 
   obj_zombie.nameplaybullet = ""
   }
 
 alarm[4] = 200*global.varfpsmax
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reequilibre temperature
global.temperature += 24

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if global.savehdc = 1 {
    obj_zombie.x = 2784;
    obj_zombie.y = 9792;
    obj_controllerplayer.x = 2784;
    obj_controllerplayer.y = 9792;}
    
     if global.savehdc = 2 {
    obj_zombie.x = 832;
    obj_zombie.y = 608;
    obj_controllerplayer.x = 832;
    obj_controllerplayer.y = 608;}
    
    
    //global.temperature -= 22
    
         with(obj_zombie){
    scr_savegame();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reequilibre temp si engine is off

//global.temperature -= 16
ini_open("savefile.ini")
    ini_write_real("player","temperature",global.temperature);
ini_close();
//global.temperature += 16


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 
  
   
     obj_zombie.mortskin = 0

 if i = 16 {
 i = 0
   obj_zombie.mortskin = choose(spr_playerdead1,spr_playerdead2)

  
    if global.interieur = 1 {//reequilibre temperature
alarm[3] = 20
}


       
    obj_zombie.x = -500;
    obj_zombie.y = -500;
    if global.savehdc = 1 {room_goto(room133);}
    if global.savehdc = 2 {room_goto(room93);}
    obj_zombie.x = -500;
    obj_controllerplayer.x = -500
    obj_controllerplayer.y = -500
    obj_zombie.y = -500;
    obj_zombie.hp = obj_zombie.maxhp
    alarm[2] = 20
//Big game over
obj_bigstats.diestats += 1
obj_bigstats.nombredejourstats = 0

if obj_zombie.prime &gt; 0 {
if obj_zombie.karma &gt; 0 {
if obj_zombie.karma &lt; floor(obj_zombie.prime) {
obj_zombie.karma = 0
}else{
obj_zombie.karma -= floor(obj_zombie.prime)
}
}

if obj_zombie.karmaneg &gt; 0 {
if obj_zombie.karmaneg &lt; floor(obj_zombie.prime) {
obj_zombie.karmaneg = 0
}else{
obj_zombie.karmaneg -= floor(obj_zombie.prime)
}
}


}//prime

obj_zombie.prime = 0


 ///DEchargement des items perso
 
    
    
    obj_zombie.maxhunger = 100
    obj_zombie.maxthirst = 100
    obj_zombie.nowhunger = 100
    obj_zombie.nowthirst = 100
    obj_zombie.freeze = 100
    obj_zombie.pile = 100
    obj_zombie.duraarmure = 10
    global.nbrpart2 = 0
    global.windup = 0
    global.winddown = 0
    global.alarmwindsave = 50000
    global.alarmwindsave2 = 10000
    global.alphawind = 0.1
    global.temperature = 12
    //karma perte
    if obj_zombie.karma &gt; 1000 {
    obj_zombie.karma -= 100
    }
    if obj_zombie.karma &gt; 10000 {
    obj_zombie.karma -= 400
    }
    if obj_zombie.karma &gt; 20000 {
    obj_zombie.karma -= 500
    }
    if obj_zombie.karma &gt; 50000 {
    obj_zombie.karma -= 1000
    }
    if obj_zombie.karma &gt; 100000 {
    obj_zombie.karma -= 3000
    }
    //karma neg
    
    if obj_zombie.karmaneg &gt; 1000 {
    obj_zombie.karmaneg -= 100
    }
    if obj_zombie.karmaneg &gt; 10000 {
    obj_zombie.karmaneg -= 400
    }
    if obj_zombie.karmaneg &gt; 20000 {
    obj_zombie.karmaneg -= 500
    }
    if obj_zombie.karmaneg &gt; 50000 {
    obj_zombie.karmaneg -= 1000
    }
    if obj_zombie.karmaneg &gt; 100000 {
    obj_zombie.karmaneg -= 3000
    }
    
    
    if obj_crafting.cuivre &gt; 10 {
    obj_crafting.cuivre -= -10
    obj_crafting.cuivre = round(obj_crafting.cuivre)
    }
    if obj_crafting.fer &gt; 10 {
    obj_crafting.fer -= -10
    obj_crafting.fer = round(obj_crafting.fer)
    }
    if obj_crafting.acier &gt; 10 {
    obj_crafting.acier  -= -10
    obj_crafting.acier = round(obj_crafting.acier)
    }
    if obj_crafting.bois &gt; 10 {
    obj_crafting.bois  -= -10
    obj_crafting.bois = round(obj_crafting.bois)
    }
    if obj_crafting.tissu &gt; 10 {
    obj_crafting.tissu  -= -10
    obj_crafting.tissu = round(obj_crafting.tissu)
    }
    if obj_crafting.adhesif &gt; 10 {
    obj_crafting.adhesif  -= -10
    obj_crafting.adhesif = round(obj_crafting.adhesif)
    }
    if obj_crafting.cablage &gt; 10 {
    obj_crafting.cablage  -= -10
    obj_crafting.cablage = round(obj_crafting.cablage)
    }
    if obj_crafting.vis &gt; 10 {
    obj_crafting.vis  -= -10
    obj_crafting.vis = round(obj_crafting.vis)
    }
    if obj_crafting.engrenage &gt; 10 {
    obj_crafting.engrenage  -= -10
    obj_crafting.engrenage = round(obj_crafting.engrenage)
    }
    if obj_crafting.aluminium &gt; 10 {
    obj_crafting.aluminium  -= -10
    obj_crafting.aluminium = round(obj_crafting.aluminium)
    }
    if obj_crafting.kevlar &gt; 10 {
    obj_crafting.kevlar  -= -10
    obj_crafting.kevlar = round(obj_crafting.kevlar)
    }
    if obj_crafting.gunpowder &gt; 10 {
    obj_crafting.gunpowder  -= -10
    obj_crafting.gunpowder = round(obj_crafting.gunpowder)
    }
    
    
    
    
   // obj_nightcycle.daysurvive = 0
    

global.temperature = 2 //12
global.sl_time = 8


    obj_nightcycle.daysurvive = 0
     if instance_exists(obj_engine){
    obj_engine.alarm[0] = 2
    obj_engine.alarm[1] = 10
    }else{
    alarm[1] = 10
    }
    //alarm[0] = 4
    obj_controllerplayer.alarm[3] = 10
    
    /*
    var file;
file = file_text_open_write(working_directory + "\level.txt");
file_text_write_string(file, "room2");
file_text_close(file);
     
    */
    
    obj_cuisine.butter = 0
obj_cuisine.flour = 0
obj_cuisine.salt = 0
obj_cuisine.blackpepper = 0
obj_cuisine.milk = 0
obj_cuisine.cheddarcheese = 0
obj_cuisine.oliveoil = 0
obj_cuisine.lemonjuice = 0
obj_cuisine.redwinevinegar = 0
obj_cuisine.garliccloves = 0
obj_cuisine.oregano = 0
obj_cuisine.tomatoes = 0
obj_cuisine.whiteonion = 0
obj_cuisine.jalapenos = 0
obj_cuisine.whiterice  = 0
obj_cuisine.canolaoil = 0
obj_cuisine.chicken  = 0
obj_cuisine.cilantro  = 0
obj_cuisine.Italiansausage = 0
obj_cuisine.basil  = 0
obj_cuisine.driedparsleyflakes  = 0
obj_cuisine.brownsugar  = 0
obj_cuisine.crushedredpepperflakes  = 0
obj_cuisine.spaghetti  = 0
obj_cuisine.parmesancheese  = 0
obj_cuisine.beef  = 0
obj_cuisine.Worcestershiresauce  = 0
obj_cuisine.yeast  = 0
obj_cuisine.longgrainrice  = 0
obj_cuisine.breadflour  = 0
obj_cuisine.plainyogurt  = 0
obj_cuisine.whippingcream  = 0
obj_cuisine.cinnamon  = 0
obj_cuisine.groundcumin  = 0
obj_cuisine.garammasala  = 0
obj_cuisine.groundcoriander  = 0
obj_cuisine.groundredpepper  = 0
obj_cuisine.flatironsteak  = 0
obj_cuisine.zestyItaliandressing  = 0
obj_cuisine.sourcream  = 0
obj_cuisine.whitewine  = 0
obj_cuisine.driedtarragon  = 0
obj_cuisine.heavycream  = 0
obj_cuisine.chickenbroth  = 0
obj_cuisine.Velveetacheese  = 0
obj_cuisine.skinlesssmokedsausage  = 0
obj_cuisine.paprika  = 0
obj_cuisine.greenonions  = 0
obj_cuisine.driedchilies  = 0
obj_cuisine.Cornstarch  = 0
obj_cuisine.soysauce  = 0
obj_cuisine.egg  = 0
obj_cuisine.sugar  = 0
obj_cuisine.sherrywine  = 0
obj_cuisine.parsley  = 0
obj_cuisine.Potatoes  = 0
obj_cuisine.mayonnaise  = 0
obj_cuisine.cidervinegar  = 0
obj_cuisine.yellowmustard  = 0
obj_cuisine.celeryribs  = 0
obj_cuisine.rumproast  = 0
obj_cuisine.navybeans  = 0
obj_cuisine.whitecorn  = 0
obj_cuisine.envelopetaco  = 0
obj_cuisine.greenchilies = 0
obj_cuisine.creamofchickensoup  = 0
obj_cuisine.packageItaliansaladdressingmix = 0
obj_cuisine.condensedgoldenmushroomsoup  = 0
obj_cuisine.creamcheese = 0
obj_cuisine.Bisquickbakingmix = 0
obj_cuisine.garlicpowder  = 0
obj_cuisine.italianseasoning  = 0
obj_cuisine.crushedredpepperflakes  = 0
obj_cuisine.applejuice  = 0
obj_cuisine.ketchup  = 0
obj_cuisine.groundbeef  = 0
obj_cuisine.sage = 0
obj_cuisine.jarpizzasauce = 0
obj_cuisine.pepperoni = 0
obj_cuisine.precookedbacon = 0
obj_cuisine.mozzarellacheese = 0
obj_cuisine.jarchargrilledredcapsicums = 0
obj_cuisine.blackolives = 0
obj_cuisine.Frenchbaguettes = 0
    
obj_bar.vodka = 0
obj_bar.cafe = 0
obj_bar.cognac = 0
obj_bar.whisky = 0
obj_bar.sucre = 0
obj_bar.citron = 0
obj_bar.rhum = 0
obj_bar.beer = 0
obj_bar.menthe = 0
obj_bar.ananas = 0
obj_bar.coco = 0
obj_bar.melon = 0
obj_bar.chambord = 0
obj_bar.cranberry  = 0
obj_bar.orange  = 0




with(obj_invbutton){
var item = global.inventory[slot];
if obj_inventory.idobj[slot+1] = obj_weapon.idweaponnow1 or obj_inventory.idobj[slot+1] = obj_weapon.idweaponnow2 or obj_inventory.idobj[slot+1] = obj_weapon.idweaponnow3 
or obj_inventory.idobj[slot+1] = obj_armorloot.bodyid or obj_inventory.idobj[slot+1] = obj_armorloot.gloveid 
    or obj_inventory.idobj[slot+1] = obj_armorloot.headid or obj_inventory.idobj[slot+1] = obj_armorloot.legsid or item = 9.3{}else{

    

    
    
    
     global.inventory[slot] = -1;
         
        obj_inventory.objtype[slot+1] = 0;
        obj_inventory.idobj[slot+1] = 0;
        obj_inventory.poidsobj[slot+1] = 0;
        obj_inventory.stat1[slot+1] = 0;
        obj_inventory.stat2[slot+1] = 0;


     }
}

    obj_team.alarm[11] = 10//ARRETER D ENVOYER LES OBJET SI IL DEVIENS ALLIE ENSUITE


if obj_intro.i &gt; 0 {
obj_intro.demaragedial = 1
obj_intro.i = 0//52
obj_intro.stopintro = 0
global.debutconvers = 1 ; 
global.finconvers = 0;
global.converstir = 1;}else{
with(obj_zombie){
scr_savegame();
}}

i = 0
alphamort = 0
bullettirer = 0
enemitoucher = 0
enemituer = 0
tempsdejeu = 0
tempsingame = 0
mortpar = 0
coequipier = 0
joueurtoucher = 0
joueurtuer = 0
levelupinlife = 0

colortext2 =  make_color_rgb(158,142,138)
print = "";
time[0] = 0;
time[1] = 0;
time[2] = 0;
time[3] = 0;
time[4] = 0;
time[5] = 0;
time[6] = 0;
time[7] = 0;
time[8] = 0;
time[9] = 0;
time[10] = 0;
time[11] = 0;
time[12] = 0;
time[13] = 0;
time[14] = 0;
time[15] = 0;
i = 0
maxlength = 1300
font_size = 30
textprecedent = "1";
text = ""

}else{alarm[0] = 90}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] &gt; 0 or alarm[6] &gt; 0  {
obj_zombie.hp = -1 }

if alarm[0] &gt; 0 or alarm[6] &gt; 0 {
showinv = true;
obj_inventory.showinv3 = true}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[6] &gt; 0 &amp;&amp; alarm[0] &lt; 0 {
//draw_rectangle(view_xview,view_yview,view_xview+1368,view_yview+768,false)
if obj_zombie.hp &gt; 0  {if alphamort &gt; 0 {alphamort -= 0.01;}}
if obj_zombie.hp &lt;= 0{if alphamort &lt; 1 {alphamort += 0.01}}
draw_set_alpha(alphamort)
draw_set_color(c_black);
if alphamort &gt; 0 {draw_rectangle(view_xview,view_yview,view_xview+1368,view_yview+768,false)}
draw_set_color(obj_nightcycle.colortext3);
draw_set_alpha(1)
coloryes = c_black
colorno = c_black
draw_set_font(fnt_sfoldrepublicbig);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if global.language = 1 {
draw_text_outlinebig(view_xview+680,view_yview+250,"Appuie sur 'R' pour une reconstruction organique immédiate 
en échange de 10 % de votre karma",coloryes)
}else{
draw_text_outlinebig(view_xview+680,view_yview+250,"Press'R' for immediate organic reconstruction 
in exchange for 10% of your karma",coloryes)
}
draw_text_outlinebig(view_xview+680,view_yview+480,alarm[6]/60,coloryes)
//if point_distance(view_xview+484,view_yview+650,mouse_x,mouse_y) &lt; 100 {
coloryes = c_white

if keyboard_check_pressed(ord("R")) {okkarma = 0;
obj_zombie.prime = 0
if obj_zombie.karma &gt; 500 {obj_zombie.karma -= floor(obj_zombie.karma/10);okkarma = 1}
if obj_zombie.karmaneg &gt; 500 {obj_zombie.karmaneg -= floor(obj_zombie.karmaneg/10);okkarma = 1}
if okkarma = 1 {
room_restart();
obj_zombie.x = obj_zombie.dernierx//teleportdebug.x
obj_zombie.y = obj_zombie.derniery//teleportdebug.y//obj_zombie


obj_controllerplayer.alarm[10] = 5;obj_zombie.hp = obj_zombie.maxhp;
obj_zombie.maxhunger = 100
obj_zombie.maxthirst = 100
obj_zombie.nowhunger = 100
obj_zombie.nowthirst = 100
obj_zombie.freeze = 100
obj_zombie.pile = 100
obj_zombie.duraarmure = 10
alarm[6] = -1;obj_zombie.hp = obj_zombie.maxhp}else{alarm[6] = 1}}//}
/*if point_distance(view_xview+884,view_yview+650,mouse_x,mouse_y) &lt; 100 {colorno = c_white
if keyboard_check_pressed(ord("E")) or mouse_check_button(mb_left){alarm[0] = 2200*global.varfpsmax;alarm[5] = -1 }}
if global.language = 1 {
draw_text_outlinebig(view_xview+484,view_yview+650,"OUI",coloryes)
draw_text_outlinebig(view_xview+884,view_yview+650,"NON",colorno)}else{
draw_text_outlinebig(view_xview+484,view_yview+650,"YES",coloryes)
draw_text_outlinebig(view_xview+884,view_yview+650,"NO",colorno)
}*/

}else{

if obj_zombie.hp &gt; 0  {if alphamort &gt; 0 {alphamort -= 0.01;}}
draw_set_alpha(alphamort)
draw_set_color(c_black);
if alphamort &gt; 0 {draw_rectangle(view_xview,view_yview,view_xview+1368,view_yview+768,false)}
draw_set_alpha(1)


if obj_zombie.hp &lt;= 0{if alphamort &lt; 1 {alphamort += 0.01}}
if obj_zombie.hp &lt;= 0 &amp;&amp; alphamort &gt; 0 {

if imagespeed2 &lt; 22 {imagespeed2 += 0.5}
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+266, view_yview+395, 1.33, 1.8, 90, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+681, view_yview+163, 0.70, 1.1, 0, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+1066, view_yview+163, 0.70, 1.1, 0, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+681, view_yview+527, 0.85, 1.65, 90, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+1066, view_yview+527, 0.85,1.65, 90, c_white, 1 );



draw_set_alpha(alphamort)
draw_set_halign(fa_left);
//draw_set_valign(fa_middle);
if alphamort = 1 {if alarm[5] &lt; 0 {alarm[5] = 90}}
//draw_set_font(fnt_little16);

draw_set_font(fnt_digitiallitl);
draw_set_color(obj_nightcycle.colortext2);

//STATS DU BIGSTATS
with(obj_bigstats){
if global.language = 1 {
//info d'armure
if other.i &gt; 5 {
draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 525,view_yview + 320,"PROTECTION")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
draw_text(view_xview + 525,view_yview + 370,"CAPACITÉ PROTECTIVE : "+string(obj_armorloot.armortotalgear*obj_zombie.armorarmouring*obj_zombie.duraarmure*obj_zombie.maxhp/100/obj_zombie.talentbonusarmure*obj_bar.nowalchivie))
draw_text(view_xview+525 ,view_yview + 390,"Totalité de la défense  = "+string(obj_armorloot.armortotalgear))    //total de defence de l'armure
draw_text(view_xview+525 ,view_yview + 410,"Totalité des dégats  = "+string(obj_armorloot.armortotalgeardps))    //total de defence de l'armure

//draw_text(view_xview + 550,view_yview + 480,"Durability : "+string(obj_zombie.duraarmure))
draw_text(view_xview + 525,view_yview + 430,"Bonus de durabilité : X "+string(obj_zombie.armordurability))
draw_text(view_xview + 525,view_yview + 450,"Bonus de défense : X "+string(obj_zombie.armorarmouring))
}
if other.i &gt; 6 {
//INFO DPS
draw_text(view_xview + 950,view_yview + 630,"Balle perdue : "+string(missbulletstats))
draw_text(view_xview + 950,view_yview + 650,"Balle utile : "+string(touchbulletstats))
draw_text(view_xview + 950,view_yview + 670,"Précision : "+string(precisionstats))

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 320,"DÉGATS")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
if obj_zombie.shootgun = 1 {

if obj_weapon.val2 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Commun] "}else
if obj_weapon.val2 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Inhabituel] "}else
if obj_weapon.val2 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val2 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Épique] "}else
if obj_weapon.val2 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Légendaire] "}
draw_text(view_xview + 950,view_yview + 490,"ARME : "+string(obj_weapon.infoweapon))
draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val2*100)+" %")
draw_set_color(colortext2);
draw_text(view_xview + 950,view_yview + 370,"Totalité des dégats : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon2dmg*obj_zombie.weapon2bpm*obj_weapon.shootdamage*(1/obj_weapon.shootbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))


draw_text(view_xview + 950,view_yview + 410,"Bonus de cadence de tir : X "+string(obj_zombie.weapon2bpm ))
draw_text(view_xview + 950,view_yview + 430,"Bonus Capacité du chargeur : + "+string(obj_zombie.weapon2bullet))
draw_text(view_xview + 950,view_yview + 450,"Bonus vitesse rechargement : X "+string(obj_zombie.weapon2reload))
draw_text(view_xview + 950,view_yview + 390,"Bonus de dégats d'arme : X "+string(obj_zombie.weapon2dmg))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Précision de l'arme : "+string(obj_weapon.shootprecision))
draw_text(view_xview + 950,view_yview + 530,"Dégats de l'arme : X "+string(obj_weapon.shootdamage))
draw_text(view_xview + 950,view_yview + 550,"Vitesse de rechargement : X "+string(obj_weapon.shootreload))
draw_text(view_xview + 950,view_yview + 570,"Cadence de tir : X "+string(1/obj_weapon.shootbpm))
draw_text(view_xview + 950,view_yview + 590,"Capacité du chargeur : "+string(obj_weapon.shootchg))
//draw_text(view_xview + 950,view_yview + 610,"Durabilité : "+string(global.duraarme2*10))

}
if obj_zombie.assaut = 1 {
if obj_weapon.val3 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Commun] "}else
if obj_weapon.val3 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Inhabituel] "}else
if obj_weapon.val3 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val3 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Épique] "}else
if obj_weapon.val3 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Légendaire] "}
draw_text(view_xview + 950,view_yview + 490,"ARME : "+string(obj_weapon.infoweapon))
draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val3*100)+" %")
draw_set_color(colortext2);

draw_text(view_xview + 950,view_yview + 370,"Totalité des dégats : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon3dmg*obj_zombie.weapon3bpm*obj_weapon.assautdamage*(1/obj_weapon.assautbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text(view_xview + 950,view_yview + 390,"Bonus de dégats d'arme : X "+string(obj_zombie.weapon3dmg))
draw_text(view_xview + 950,view_yview + 410,"Bonus de cadence de tir : X "+string(obj_zombie.weapon3bpm ))
draw_text(view_xview + 950,view_yview + 430,"Bonus Capacité du chargeur : + "+string(obj_zombie.weapon3bullet))
draw_text(view_xview + 950,view_yview + 450,"Bonus vitesse rechargement : X "+string(obj_zombie.weapon3reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Précision de l'arme : "+string(obj_weapon.assautprecision))
draw_text(view_xview + 950,view_yview + 530,"Dégats de l'arme : X "+string(obj_weapon.assautdamage))
draw_text(view_xview + 950,view_yview + 550,"Vitesse de rechargement : X "+string(obj_weapon.assautreload))
draw_text(view_xview + 950,view_yview + 570,"Cadence de tir : X "+string(1/obj_weapon.assautbpm))
draw_text(view_xview + 950,view_yview + 590,"Capacité du chargeur : "+string(obj_weapon.assautchg))
//draw_text(view_xview + 950,view_yview + 610,"Weapon durability : "+string(global.duraarme3*10))
}

if obj_zombie.fusil = 1 {

if obj_weapon.val1 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Commun] "}else
if obj_weapon.val1 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Inhabituel] "}else
if obj_weapon.val1 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val1 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Épique] "}else
if obj_weapon.val1 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Légendaire] "}
draw_text(view_xview + 950,view_yview + 490,"ARME : "+string(obj_weapon.infoweapon))

draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val1*100)+" %")
draw_set_color(colortext2);
draw_text(view_xview + 950,view_yview + 370,"Totalité des dégats : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon1dmg*obj_zombie.weapon1bpm*obj_weapon.gundamage*(1/obj_weapon.gunbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text(view_xview + 950,view_yview + 390,"Bonus de dégats d'arme : X "+string(obj_zombie.weapon1dmg))
draw_text(view_xview + 950,view_yview + 410,"Bonus de cadence de tir : X "+string(obj_zombie.weapon1bpm ))
draw_text(view_xview + 950,view_yview + 430,"Bonus Capacité du chargeur : + "+string(obj_zombie.weapon1bullet))
draw_text(view_xview + 950,view_yview + 450,"Bonus vitesse rechargement : X "+string(obj_zombie.weapon1reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Précision de l'arme : "+string(obj_weapon.gunprecision))
draw_text(view_xview + 950,view_yview + 530,"Dégats de l'arme : X "+string(obj_weapon.gundamage))
draw_text(view_xview + 950,view_yview + 550,"Vitesse de rechargement : X "+string(obj_weapon.gunreload))
draw_text(view_xview + 950,view_yview + 570,"Cadence de tir : X "+string(1/obj_weapon.gunbpm))
draw_text(view_xview + 950,view_yview + 590,"Capacité du chargeur : "+string(obj_weapon.gunchg))
//draw_text(view_xview + 950,view_yview + 610,"Weapon durability : "+string(global.duraarme*10))

}

}

//GRADE ET STATS PLAYER
if other.i &gt; 4 {
draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 525,view_yview + 60,"charactéristique")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);

draw_text(view_xview + 525,view_yview + 120,"ID : "+string(obj_zombie.idfixe))
if obj_zombie.grademetier &gt; 0 {





draw_text(view_xview + 525,view_yview + 140,"MÉTIERS : "+string(gradestats))
}else{
draw_text(view_xview + 525,view_yview + 140,"GRADE : "+string(gradestats))
}
draw_text(view_xview  + 525 ,view_yview + 160,"Niveau : "+string(obj_zombie.level))
if obj_zombie.karma &gt; 0 {
draw_text(view_xview  + 525 ,view_yview + 180,"Karma : "+string(obj_zombie.karma))
}else{
if obj_zombie.karmaneg &gt; 0 {
draw_text(view_xview  + 525 ,view_yview + 180,"Karma negatif: "+string(obj_zombie.karmaneg))
}
}
draw_text(view_xview  + 525 ,view_yview + 200,"Nombre de mort : "+string(diestats))
if mode4 = 0 {
draw_text(view_xview  + 525,view_yview + 220,"Stalker tué : "+string(killstats))
}else{
draw_text(view_xview  + 525,view_yview + 220,"Prawlers tué : "+string(killnpcstats))
}
if mode4 = 0 {
if obj_guilde.guildenow = "" {
draw_text(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guilde))
}else{
draw_text(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guildenow))
}
}else{
draw_text(view_xview  + 525,view_yview + 240,"Guilde ID : "+string(obj_guilde.guildesend))
}


//draw_text(view_xview  + 525,view_yview + 260,"SCORE : "+string(obj_guilde.point))


//ECO-SYSTEME

draw_text(view_xview + 920,view_yview + 100,"Maladie : "+string(obj_maladie.namemaladie))
draw_text(view_xview + 920,view_yview + 120,"Distance traverssé : "+string(walkstats))
draw_text(view_xview + 920,view_yview + 80,"Jour survécu : "+string(nombredejourstats))

if obj_langue.languenowspeak = 0 {
draw_text(view_xview + 920,view_yview + 140,"Langue Commune : "+"100 "+"%")
}
if obj_langue.languenowspeak = 1 {
draw_text(view_xview + 920,view_yview + 140,"Mandarin : "+string(round(obj_langue.mandarin))+"%")
}
if obj_langue.languenowspeak = 2 {
draw_text(view_xview + 920,view_yview + 140,"Hindi : "+string(round(obj_langue.hindi))+"%")
}
if obj_langue.languenowspeak = 3 {
draw_text(view_xview + 920,view_yview + 140,"Anglais : "+string(round(obj_langue.anglais))+"%")
}
if obj_langue.languenowspeak = 4 {
draw_text(view_xview + 920,view_yview + 140,"Espagnol : "+string(round(obj_langue.espagnol))+"%")
}
if obj_langue.languenowspeak = 5 {
draw_text(view_xview + 920,view_yview + 140,"arabe : "+string(round(obj_langue.arabe))+"%")
}
if obj_langue.languenowspeak = 6 {
draw_text(view_xview + 920,view_yview + 140,"indonesien : "+string(round(obj_langue.indonesien))+"%")
}
if obj_langue.languenowspeak = 7 {
draw_text(view_xview + 920,view_yview + 140,"portugais : "+string(round(obj_langue.portugais))+"%")
}
if obj_langue.languenowspeak = 8 {
draw_text(view_xview + 920,view_yview + 140,"francais : "+string(round(obj_langue.francais))+"%")
}
if obj_langue.languenowspeak = 9 {
draw_text(view_xview + 920,view_yview + 140,"bengali : "+string(round(obj_langue.bengali))+"%")
}
if obj_langue.languenowspeak = 10 {
draw_text(view_xview + 920,view_yview + 140,"russe : "+string(round(obj_langue.russe))+"%")
}
if obj_langue.languenowspeak = 11 {
draw_text(view_xview + 920,view_yview + 140,"japonais : "+string(round(obj_langue.japonais))+"%")
}
if obj_langue.languenowspeak = 12 {
draw_text(view_xview + 920,view_yview + 140,"allemand : "+string(round(obj_langue.allemand))+"%")
}
if obj_langue.languenowspeak = 13 {
draw_text(view_xview + 920,view_yview + 140,"punjabi : "+string(round(obj_langue.punjabi))+"%")
}
if obj_langue.languenowspeak = 14 {
draw_text(view_xview + 920,view_yview + 140,"javanais : "+string(round(obj_langue.javanais))+"%")
}
if obj_langue.languenowspeak = 15 {
draw_text(view_xview + 920,view_yview + 140,"italien : "+string(round(obj_langue.italien))+"%")
}
draw_text(view_xview + 920,view_yview + 160,"Barman : "+string(obj_bar.levelalchimie2))
draw_text(view_xview + 920,view_yview + 180,"Forge : "+string(obj_forge.levelforge))
draw_text(view_xview + 920,view_yview + 200,"Mineur : "+string(levelmine))
draw_text(view_xview + 920,view_yview + 220,"Soin : "+string(obj_healgun.level))
draw_text(view_xview + 920,view_yview + 240,"Vitesse du joueur : "+string(100 - ((obj_armorloot.vitessepoids*100)-100)))
}

}else {
//info d'armure

if other.i &gt; 5 {
draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 525,view_yview + 320,"PROTECTION")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
draw_text(view_xview + 525,view_yview + 370,"TOTAL ARMOURING : "+string(obj_armorloot.armortotalgear*obj_zombie.armorarmouring*obj_zombie.duraarmure*obj_zombie.maxhp/100/obj_zombie.talentbonusarmure*obj_bar.nowalchivie))
draw_text(view_xview+525 ,view_yview + 390,"Total Gear Defence  = "+string(obj_armorloot.armortotalgear))    //total de defence de l'armure
draw_text(view_xview+525 ,view_yview + 410,"Total Gear Damage  = "+string(obj_armorloot.armortotalgeardps))    //total de defence de l'armure

//draw_text(view_xview + 550,view_yview + 480,"Durability : "+string(obj_zombie.duraarmure))
draw_text(view_xview + 525,view_yview + 430,"Durability bonus : X "+string(obj_zombie.armordurability))
draw_text(view_xview + 525,view_yview + 450,"Armouring bonus : X "+string(obj_zombie.armorarmouring))
}
if other.i &gt; 6 {
//INFO DPS
draw_text(view_xview + 950,view_yview + 630,"Bullet missed : "+string(missbulletstats))
draw_text(view_xview + 950,view_yview + 650,"Bullet contact : "+string(touchbulletstats))
draw_text(view_xview + 950,view_yview + 670,"Precision : "+string(precisionstats))

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 320,"DAMAGE")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
if obj_zombie.shootgun = 1 {

if obj_weapon.val2 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val2 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val2 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val2 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val2 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text(view_xview + 950,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))
draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val2*100)+" %")
draw_set_color(colortext2);
draw_text(view_xview + 950,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon2dmg*obj_zombie.weapon2bpm*obj_weapon.shootdamage*(1/obj_weapon.shootbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))


draw_text(view_xview + 950,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon2bpm ))
draw_text(view_xview + 950,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon2bullet))
draw_text(view_xview + 950,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon2reload))
draw_text(view_xview + 950,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon2dmg))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Weapon precision : "+string(obj_weapon.shootprecision))
draw_text(view_xview + 950,view_yview + 530,"Weapon damage : X "+string(obj_weapon.shootdamage))
draw_text(view_xview + 950,view_yview + 550,"Weapon reload : X "+string(obj_weapon.shootreload))
draw_text(view_xview + 950,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.shootbpm))
draw_text(view_xview + 950,view_yview + 590,"Weapon capacity : "+string(obj_weapon.shootchg))
draw_text(view_xview + 950,view_yview + 610,"Weapon durability : "+string(global.duraarme2*10))

}
if obj_zombie.assaut = 1 {
if obj_weapon.val3 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val3 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val3 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val3 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val3 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text(view_xview + 950,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))
draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val3*100)+" %")
draw_set_color(colortext2);

draw_text(view_xview + 950,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon3dmg*obj_zombie.weapon3bpm*obj_weapon.assautdamage*(1/obj_weapon.assautbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text(view_xview + 950,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon3dmg))
draw_text(view_xview + 950,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon3bpm ))
draw_text(view_xview + 950,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon3bullet))
draw_text(view_xview + 950,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon3reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Weapon precision : "+string(obj_weapon.assautprecision))
draw_text(view_xview + 950,view_yview + 530,"Weapon damage : X "+string(obj_weapon.assautdamage))
draw_text(view_xview + 950,view_yview + 550,"Weapon reload : X "+string(obj_weapon.assautreload))
draw_text(view_xview + 950,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.assautbpm))
draw_text(view_xview + 950,view_yview + 590,"Weapon capacity : "+string(obj_weapon.assautchg))
draw_text(view_xview + 950,view_yview + 610,"Weapon durability : "+string(global.duraarme3*10))
}

if obj_zombie.fusil = 1 {

if obj_weapon.val1 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val1 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val1 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val1 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val1 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text(view_xview + 950,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))

draw_text(view_xview + 950,view_yview + 470,string(valtitre)+string(obj_weapon.val1*100)+" %")
draw_set_color(colortext2);
draw_text(view_xview + 950,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon1dmg*obj_zombie.weapon1bpm*obj_weapon.gundamage*(1/obj_weapon.gunbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text(view_xview + 950,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon1dmg))
draw_text(view_xview + 950,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon1bpm ))
draw_text(view_xview + 950,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon1bullet))
draw_text(view_xview + 950,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon1reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text(view_xview + 950,view_yview + 510,"Weapon precision : "+string(obj_weapon.gunprecision))
draw_text(view_xview + 950,view_yview + 530,"Weapon damage : X "+string(obj_weapon.gundamage))
draw_text(view_xview + 950,view_yview + 550,"Weapon reload : X "+string(obj_weapon.gunreload))
draw_text(view_xview + 950,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.gunbpm))
draw_text(view_xview + 950,view_yview + 590,"Weapon capacity : "+string(obj_weapon.gunchg))
draw_text(view_xview + 950,view_yview + 610,"Weapon durability : "+string(global.duraarme*10))

}

}

//GRADE ET STATS PLAYER
if other.i &gt; 4 {
draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text(view_xview + 525,view_yview + 60,"characteristics")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);

draw_text(view_xview + 525,view_yview + 120,"ID : "+string(obj_zombie.idfixe))
if obj_zombie.grademetier &gt; 0 {



draw_text(view_xview + 525,view_yview + 140,"JOB : "+string(gradestats))
}else{
draw_text(view_xview + 525,view_yview + 140,"GRADE : "+string(gradestats))
}
draw_text(view_xview  + 525 ,view_yview + 160,"Level : "+string(obj_zombie.level))
if obj_zombie.karma &gt; 0 {
draw_text(view_xview  + 525 ,view_yview + 180,"Karma : "+string(obj_zombie.karma))
}else{
if obj_zombie.karmaneg &gt; 0 {
draw_text(view_xview  + 525 ,view_yview + 180,"Karma negative: "+string(obj_zombie.karmaneg))
}
}
draw_text(view_xview  + 525 ,view_yview + 200,"Dead : "+string(diestats))
if mode4 = 0 {
draw_text(view_xview  + 525,view_yview + 220,"Player kill : "+string(killstats))
}else{
draw_text(view_xview  + 525,view_yview + 220,"Npc kill : "+string(killnpcstats))
}
if mode4 = 0 {
if obj_guilde.guildenow = "" {
draw_text(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guilde))
}else{
draw_text(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guildenow))
}
}else{
draw_text(view_xview  + 525,view_yview + 240,"Guilde ID : "+string(obj_guilde.guildesend))
}


//draw_text(view_xview  + 525,view_yview + 260,"SCORE : "+string(obj_guilde.point))


//ECO-SYSTEME

draw_text(view_xview + 920,view_yview + 100,"Seekness : "+string(obj_maladie.namemaladie))
draw_text(view_xview + 920,view_yview + 120,"Distance travelled : "+string(walkstats))
draw_text(view_xview + 920,view_yview + 80,"Day Survived : "+string(nombredejourstats))

if obj_langue.languenowspeak = 0 {
draw_text(view_xview + 920,view_yview + 140,"Langue Commune : "+"100 "+"%")
}
if obj_langue.languenowspeak = 1 {
draw_text(view_xview + 920,view_yview + 140,"Mandarin : "+string(round(obj_langue.mandarin))+"%")
}
if obj_langue.languenowspeak = 2 {
draw_text(view_xview + 920,view_yview + 140,"Hindi : "+string(round(obj_langue.hindi))+"%")
}
if obj_langue.languenowspeak = 3 {
draw_text(view_xview + 920,view_yview + 140,"Anglais : "+string(round(obj_langue.anglais))+"%")
}
if obj_langue.languenowspeak = 4 {
draw_text(view_xview + 920,view_yview + 140,"Espagnol : "+string(round(obj_langue.espagnol))+"%")
}
if obj_langue.languenowspeak = 5 {
draw_text(view_xview + 920,view_yview + 140,"arabe : "+string(round(obj_langue.arabe))+"%")
}
if obj_langue.languenowspeak = 6 {
draw_text(view_xview + 920,view_yview + 140,"indonesien : "+string(round(obj_langue.indonesien))+"%")
}
if obj_langue.languenowspeak = 7 {
draw_text(view_xview + 920,view_yview + 140,"portugais : "+string(round(obj_langue.portugais))+"%")
}
if obj_langue.languenowspeak = 8 {
draw_text(view_xview + 920,view_yview + 140,"francais : "+string(round(obj_langue.francais))+"%")
}
if obj_langue.languenowspeak = 9 {
draw_text(view_xview + 920,view_yview + 140,"bengali : "+string(round(obj_langue.bengali))+"%")
}
if obj_langue.languenowspeak = 10 {
draw_text(view_xview + 920,view_yview + 140,"russe : "+string(round(obj_langue.russe))+"%")
}
if obj_langue.languenowspeak = 11 {
draw_text(view_xview + 920,view_yview + 140,"japonais : "+string(round(obj_langue.japonais))+"%")
}
if obj_langue.languenowspeak = 12 {
draw_text(view_xview + 920,view_yview + 140,"allemand : "+string(round(obj_langue.allemand))+"%")
}
if obj_langue.languenowspeak = 13 {
draw_text(view_xview + 920,view_yview + 140,"punjabi : "+string(round(obj_langue.punjabi))+"%")
}
if obj_langue.languenowspeak = 14 {
draw_text(view_xview + 920,view_yview + 140,"javanais : "+string(round(obj_langue.javanais))+"%")
}
if obj_langue.languenowspeak = 15 {
draw_text(view_xview + 920,view_yview + 140,"italien : "+string(round(obj_langue.italien))+"%")
}
draw_text(view_xview + 920,view_yview + 160,"Barman : "+string(obj_bar.levelalchimie2))
draw_text(view_xview + 920,view_yview + 180,"Forge: "+string(obj_forge.levelforge))
draw_text(view_xview + 920,view_yview + 200,"Minor : "+string(levelmine))
draw_text(view_xview + 920,view_yview + 220,"Medic : "+string(obj_healgun.level))
draw_text(view_xview + 920,view_yview + 240,"Speed player : "+string(100 - ((obj_armorloot.vitessepoids*100)-100)))
}
}}






//you have been terminated
xplus = 80
if i &gt; 0 {text = "Connected to Humanity Data Center";text_length = string_length(text);
if (time[0] &lt; text_length){time[0] += choose(0,1,1);};print[0] = string_copy(text,0,time[0]);
draw_text_ext(view_xview+20+xplus,view_yview+100, print[0], font_size+(font_size/2), maxlength);}

if i &gt; 1 {text = "Hour : "+string(global.sl_time);text_length = string_length(text);
if (time[1] &lt; text_length){time[1] += choose(0,1,1);};print[1] = string_copy(text,0,time[1]);
draw_text_ext(view_xview+20+xplus,view_yview+120, print[1], font_size+(font_size/2), maxlength);}

if i &gt; 2 {text = "Research memory data number ID."+string(obj_zombie.idfixe)+" ...";text_length = string_length(text);
if (time[2] &lt; text_length){time[2] += choose(0,1,1);};print[2] = string_copy(text,0,time[2]);
draw_text_ext(view_xview+20+xplus,view_yview+140, print[2], font_size+(font_size/2), maxlength);}

if i &gt; 3 {text = "Information retrieval ID."+string(obj_zombie.idfixe)+" ...";text_length = string_length(text);
if (time[3] &lt; text_length){time[3] += choose(0,1,1);};print[3] = string_copy(text,0,time[3]);
draw_text_ext(view_xview+20+xplus,view_yview+160, print[3], font_size+(font_size/2), maxlength);}

if i &gt; 4 {text = "Character information loaded ";text_length = string_length(text);
if (time[4] &lt; text_length){time[4] += choose(0,1,1);};print[4] = string_copy(text,0,time[4]);
draw_text_ext(view_xview+20+xplus,view_yview+180, print[4], font_size+(font_size/2), maxlength);}

if i &gt; 5 {text = "Armor's information loaded ";text_length = string_length(text);
if (time[5] &lt; text_length){time[5] += choose(0,1,1);};print[5] = string_copy(text,0,time[5]);
draw_text_ext(view_xview+20+xplus,view_yview+200, print[5], font_size+(font_size/2), maxlength);}

if i &gt; 6 {text = "Weapon's information loaded ";text_length = string_length(text);
if (time[6] &lt; text_length){time[6] += choose(0,1,1);};print[6] = string_copy(text,0,time[6]);
draw_text_ext(view_xview+20+xplus,view_yview+220, print[6], font_size+(font_size/2), maxlength);}

if i &gt; 7 {text = "Number of stalkers killed : "+string(obj_bigstats.killstats);text_length = string_length(text);
if (time[7] &lt; text_length){time[7] += choose(0,1,1);};print[7] = string_copy(text,0,time[7]);
draw_text_ext(view_xview+20+xplus,view_yview+240, print[7], font_size+(font_size/2), maxlength);}

if i &gt; 8 {text = "Number of prawlers killed : "+string(obj_bigstats.killnpcstats);text_length = string_length(text);
if (time[8] &lt; text_length){time[8] += choose(0,1,1);};print[8] = string_copy(text,0,time[8]);
draw_text_ext(view_xview+20+xplus,view_yview+260, print[8], font_size+(font_size/2), maxlength);}

if i &gt; 9 {text = "Guild : "+string(obj_guilde.guildenow);text_length = string_length(text);
if (time[9] &lt; text_length){time[9] += choose(0,1,1);};print[9] = string_copy(text,0,time[9]);
draw_text_ext(view_xview+20+xplus,view_yview+280, print[9], font_size+(font_size/2), maxlength);}

if i &gt; 10 {text = "Km travelled on the territory : "+string(obj_bigstats.walkstats/1000);text_length = string_length(text);
if (time[10] &lt; text_length){time[10] += choose(0,1,1);};print[10] = string_copy(text,0,time[10]);
draw_text_ext(view_xview+20+xplus,view_yview+300, print[10], font_size+(font_size/2), maxlength);}

if i &gt; 11 {text = "Days survived before the incident : "+string(obj_bigstats.nombredejourstats);text_length = string_length(text);
if (time[11] &lt; text_length){time[11] += choose(0,1,1);};print[11] = string_copy(text,0,time[11]);
draw_text_ext(view_xview+20+xplus,view_yview+320, print[11], font_size+(font_size/2), maxlength);}

if i &gt; 12 {text = "Add of characteristics in the DNA code";text_length = string_length(text);
if (time[12] &lt; text_length){time[12] += choose(0,1,1);};print[12] = string_copy(text,0,time[12]);
draw_text_ext(view_xview+20+xplus,view_yview+340, print[12], font_size+(font_size/2), maxlength);}

if i &gt; 13 {text = "Cell reconstruction in progress";text_length = string_length(text);
if (time[13] &lt; text_length){time[13] += choose(0,1,1);};print[13] = string_copy(text,0,time[13]);
draw_text_ext(view_xview+20+xplus,view_yview+360, print[13], font_size+(font_size/2), maxlength);}

if i &gt; 14 {text = "Adrenaline injection";text_length = string_length(text);
if (time[14] &lt; text_length){time[14] += choose(0,1,1);};print[14] = string_copy(text,0,time[14]);
draw_text_ext(view_xview+20+xplus,view_yview+380, print[14], font_size+(font_size/2), maxlength);}









draw_set_alpha(1)



obj_zombie.aterre = 0
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_large);
draw_set_color(c_white);
draw_set_font(fnt_little16);
//draw_text(view_xview+650,view_yview+250,"Game Over");
varalarm = "Revive in "+string(round(alarm[0]/60))




// draw_text(view_xview+650,view_yview+350,varalarm);
if obj_zombie.nameplaybullet = "" {}else{
//draw_text(view_xview+650,view_yview+300,string(obj_zombie.nameplaybullet)+"has kill you !");
 }


draw_set_font(fnt_small);
//draw_text(obj_zombie.x,obj_zombie.y + 100,"press R to restart!#day survive  "+string(obj_nightcycle.daysurvive));
 //instance_destroy () ; // PEUT ETRE A REMETRE CHANGER LE 27 01

}else{imagespeed2 = 0
print[0] = 0;
print[1] = 0;
print[2] = 0;
print[3] = 0;
print[4] = 0;
print[5] = 0;
print[6] = 0;
print[7] = 0;
print[8] = 0;
print[9] = 0;
print[10] = 0;
print[11] = 0;
print[12] = 0;
print[13] = 0;
print[14] = 0;
print[15] = 0;
time[0] = 0;
time[1] = 0;
time[2] = 0;
time[3] = 0;
time[4] = 0;
time[5] = 0;
time[6] = 0;
time[7] = 0;
time[8] = 0;
time[9] = 0;
time[10] = 0;
time[11] = 0;
time[12] = 0;
time[13] = 0;
time[14] = 0;
time[15] = 0;
}


}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
