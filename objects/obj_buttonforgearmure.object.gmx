<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_items</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000007</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item = 0
xx = 0
yy = 0
image_button = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview + xx
y = view_yview + yy

if  instance_exists(obj_armorpiece){instance_destroy();}
if  instance_exists(obj_buttonechap){instance_destroy();}
if  instance_exists(obj_medicament){instance_destroy();}
if  instance_exists(obj_buttonbar){instance_destroy();}//rajouter avec la creation de l o bjet
if  instance_exists(obj_invlootbutton){instance_destroy();}



    if (abs(mouse_x - x) &lt; 16) &amp;&amp; (abs(mouse_y - y) &lt; 16)
{/*//ds le draw
if (mouse_check_button_pressed(mb_left)) {


if obj_crafting.cuivre &gt; round((12 *(obj_forgearmure.levelforgearmure/2)))   &amp;&amp;
obj_crafting.fer &gt; round((16 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.acier &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.tissu &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.adhesif &gt; round((10 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp; 
obj_crafting.kevlar &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.vis &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.engrenage &gt; round((4 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.aluminium  &gt; round((8 *(obj_forgearmure.levelforgearmure/2))) 
{
ui = 0
for (i = 0; i &lt; maxitems; i += 1)
{
    if (global.inventory[i] == -1) // if slot "i" is empty
    { ui = 1
    
    }}

if ui = 1 {
vardrop = round((12 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(229)}
vardrop = round((16 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(230)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(231)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(233)}
vardrop = round((10 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(234)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(239)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(236)}
vardrop = round((4 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(237)}
vardrop = round((8 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(238)}


 randomize()
 var statarmor = (random_range(obj_zombie.level*0.8,obj_zombie.level*1))*(obj_forgearmure.levelforgearmure/40)
 scr_itempickup(item,item,round(random(99999)),5,choose(1,2),statarmor);//250 = talent 1 / piece 1 /// choose(1,2) = def ou atk /// stat
}

   

   
   
   
   
   
   
   
   }
}*/}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)

     if image_button &lt; 10 {image_button += 0.5}
draw_sprite_ext(spr_hudae3,image_button,view_xview + xx,view_yview + yy,1.3,1.3,0,c_white,1)

    if (abs(mouse_x - x) &lt; 16) &amp;&amp; (abs(mouse_y - y) &lt; 16)
{
    draw_set_colour(c_white);
        draw_rectangle(x-25,y-24,x+25,y+24,0);
        
        
        

//if (mouse_check_button_pressed(mb_left)) {
if keyboard_check_pressed(ord("E")){
if obj_crafting.cuivre &gt; round((12 *(obj_forgearmure.levelforgearmure/2)))   &amp;&amp;
obj_crafting.fer &gt; round((16 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.acier &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.tissu &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.adhesif &gt; round((10 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp; 
obj_crafting.kevlar &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.vis &gt; round((18 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.engrenage &gt; round((4 *(obj_forgearmure.levelforgearmure/2))) &amp;&amp;
obj_crafting.aluminium  &gt; round((8 *(obj_forgearmure.levelforgearmure/2))) 
{
ui = 0
for (i = 0; i &lt; maxitems; i += 1)
{
    if (global.inventory[i] == -1) // if slot "i" is empty
    { ui = 1
    
    }}

if ui = 1 {obj_zombie.EXP += 1
vardrop = round((12 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(229)}
vardrop = round((16 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(230)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(231)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(233)}
vardrop = round((10 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(234)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(239)}
vardrop = round((18 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(236)}
vardrop = round((4 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(237)}
vardrop = round((8 *(obj_forgearmure.levelforgearmure/2)))
repeat(vardrop){scr_itemdrop(238)}


 randomize()
 var statarmor = (random_range(obj_zombie.level*0.8,obj_zombie.level*1))*((obj_forgearmure.levelforgearmure/80)+(obj_forgearmure.levelforgearmure2/80))
 scr_itempickup(item,item,round(random(99999)),5,choose(1,2),statarmor);//250 = talent 1 / piece 1 /// choose(1,2) = def ou atk /// stat
}

   

   
   
   
   
   
   
   
   }
}}
    
            draw_sprite_ext(spr_items,item,x,y,1.2,1.2,0,-1,1);
    

    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
