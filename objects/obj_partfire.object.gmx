<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fire</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = room_width/2;
//y = room_height/2;

image_xscale = 1.32;
image_yscale = image_xscale;
image_angle  = -55;

global.varfpsmax = 1

//particle system
partfire_sys = part_system_create();
//part_system_position(partfire_sys,x,y)

//fire particle
partfire = part_type_create();
part_type_sprite(partfire,spr_partfire,0,0,0);
part_type_size(partfire,0.3,0.6,-.05,0);


part_type_colour3(partfire,c_red,c_orange,c_red);
part_type_alpha3(partfire,1,1,0);
part_type_speed(partfire,0.5/global.varfpsmax,1.5/global.varfpsmax,-.1,0);//part_type_speed(partfire,2,10,-.1,0);
part_type_direction(partfire,85,95,300,0);
part_type_orientation(partfire,0,360,2,0,0);
part_type_blend(partfire,1);
part_type_life(partfire,55,65);//part_type_life(partfire,25,35);


//cinder particle 

partcinder_sys = part_system_create();

partcinder = part_type_create();
part_type_shape(partcinder,pt_shape_flare);
part_type_size(partcinder,0.05,0.3,0,0);
part_type_colour3(partcinder,c_red,c_orange,c_orange);
part_type_alpha3(partcinder,1,1,1);
part_type_speed(partcinder,1/global.varfpsmax,2/global.varfpsmax,0,0);
part_type_direction(partcinder,-200,200,-2,0);
part_type_orientation(partcinder,-100,559,0,100,1);
part_type_blend(partcinder,1);
part_type_life(partcinder,240,320);



//particle emiter
partfire_emit = part_emitter_create(partfire_sys);
partcinder_emit = part_emitter_create(partcinder_sys);
part_emitter_region(partfire_sys,partfire_emit,x-13,x+13,y-13,y+13,ps_shape_ellipse,ps_distr_linear);
part_emitter_region(partcinder_sys,partcinder_emit,x-50,x+50,y-50,y+50,ps_shape_ellipse,ps_distr_linear);
part_system_depth(partfire,-900)
part_system_depth(partcinder,-900)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

part_type_destroy(partfire);
part_emitter_destroy(partfire_sys, partfire_emit);
part_system_destroy(partfire_sys);

part_type_destroy(partcinder);
part_emitter_destroy(partcinder_sys, partcinder_emit);
part_system_destroy(partcinder_sys);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//part_emitter_burst(partfire_sys,partfire_emit,partfire,7);
part_emitter_burst(partcinder_sys,partfire_emit,partcinder,-10);

//part_system_depth(partfire,0)
part_system_depth(partcinder,0)

//part_type_speed(partfire,0.5/global.varfpsmax,1.5/global.varfpsmax,-.1,0);//part_type_speed(partfire,2,10,-.1,0);
part_type_speed(partcinder,1/global.varfpsmax,2/global.varfpsmax,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_clear_alpha( c_white, 0);


part_type_destroy(partfire);
part_emitter_destroy(partfire_sys, partfire_emit);
part_system_destroy(partfire_sys);

part_type_destroy(partcinder);
part_emitter_destroy(partcinder_sys, partcinder_emit);
part_system_destroy(partcinder_sys);
//instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>conso = 0.8



if instance_exists(obj_chaleurflame){chalobj = instance_nearest(x,y,obj_chaleurflame)
if point_distance(x,y,chalobj.x,chalobj.y) &lt; 30 {
conso = chalobj.conso 

}}

if instance_exists(obj_light01){with(obj_light01){
if point_distance(x,y,other.x,other.y) &lt; 30 &amp;&amp; mode = 33 {
sl_light_power          = other.conso
consolarge = 2.66*(other.conso/2)

}}}

if instance_exists(obj_engine){
if obj_zombie.lowgpu2 = 3 {}else{
image_speed = 0.7*60/max(fps,1);

// Affiche la texture de base en bm_add
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,conso);
draw_set_blend_mode(bm_normal);

// Affiche la texture dans le buffer de lumi√®re
if instance_exists(obj_engine){
if obj_engine.stepengine &gt;= 30 {
SL_draw_sprite_light(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,conso);
}}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
