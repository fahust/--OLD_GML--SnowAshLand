<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mineur</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = 0.5+random(0.3)/global.varfpsmax
mode = 0
quest = 0
up = 1
animwalk = 4
headskin = choose(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)
mode2 = choose(1,2,3)
craft = 0

blablasplit[0] = ""
blablasplit[1] = ""
blablasplit[2] = ""
blablasplit[3] = ""
blablasplit[4] = ""
blablasplit[5] = ""
blablasplit[6] = ""
blablasplit[7] = ""
blablasplit[8] = ""
blablasplit[9] = ""
blablasplit[10] = ""
blablasplit[11] = ""
blablasplit[12] = ""
blablasplit[13] = ""
blablasplit[14] = ""
blablasplit[15] = ""
blablasplit[16] = ""
blablasplit[17] = ""
blablasplit[18] = ""
blablasplit[19] = ""
blablasplit[20] = ""
blablasplit[21] = ""
blablasplit[22] = ""
blablasplit[23] = ""
blablasplit[24] = ""
blablasplit[25] = ""
blablasplit[26] = ""
blablasplit[27] = ""
blablasplit[28] = ""
blablasplit[29] = ""
blablasplit[30] = ""
blablasplit[31] = ""
blablasplit[32] = ""
blablasplit[33] = ""
blablasplit[34] = ""
blablasplit[35] = ""
blablasplit[36] = ""
blablasplit[37] = ""
blablasplit[38] = ""
blablasplit[39] = ""
blablasplit[40] = ""
blablasplit[41] = ""
blablasplit[42] = ""
blablasplit[43] = ""
blablasplit[44] = ""
blablasplit[45] = ""
blablasplit[46] = ""
blablasplit[47] = ""
blablasplit[48] = ""
blablasplit[49] = ""
blablasplit[50] = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();


//image_speed = 0.5+random(0.3)/global.varfpsmax

//if mode = 1 {visible = false}//faire disparaitre si objet interaction



//if up = 1 {if animwalk &gt; 7 {up = 0}}
//if up = 0 {if animwalk &lt; 5 {up = 1}}


//if up = 1 {animwalk += 0.5}else{animwalk -= 0.5}

//if mode2 = 1 {sprite_index = spr_mineur}
//if mode2 = 2 {sprite_index = spr_mineur2}
//if mode2 = 3 {sprite_index = spr_mineur3}
image_xscale = 1
image_yscale = 1
image_index = animwalk/2
/*draw_sprite_ext(sprite_index,animwalk/2,x,y,1,1,image_angle,c_white,image_alpha)


if headskin = 1 {
draw_sprite_ext(spr_head1,animwalk,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 2 {
draw_sprite_ext(spr_head2,animwalk,x,y,0.8,0.8,image_angle,c_white,image_alpha)}
if headskin = 3 {
draw_sprite_ext(spr_head3,animwalk,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 4 {
draw_sprite_ext(spr_head4,animwalk,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 5 {
draw_sprite_ext(spr_head5,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 6 {
draw_sprite_ext(spr_head6,animwalk,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 7 {
draw_sprite_ext(spr_head7,animwalk,x,y,0.6,0.6,image_angle,c_white,image_alpha)}
if headskin = 8 {
draw_sprite_ext(spr_head8,animwalk,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 9 {
draw_sprite_ext(spr_head9,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 10 {
draw_sprite_ext(spr_head10,animwalk,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 11 {
draw_sprite_ext(spr_head11,animwalk,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 12 {
draw_sprite_ext(spr_head12,animwalk,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 13 {
draw_sprite_ext(spr_head13,animwalk,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 14 {
draw_sprite_ext(spr_head14,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 15 {
draw_sprite_ext(spr_head15,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 16 {
draw_sprite_ext(spr_head16,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 17 {
draw_sprite_ext(spr_head17,animwalk,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 18 {
draw_sprite_ext(spr_head18,animwalk,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
*/



//draw_circle_colour(x,y,130,c_red,c_red,false)

if ds_grid_get(obj_quest.questgrid, 10, quest) = 1 {//quete lancer et pas encore fini
if ds_grid_get(obj_quest.questgrid, 7, quest) &lt;= obj_zombie.level {
if obj_zombie.karma &gt; 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 1 {

//if ds_grid_get(obj_quest.questgrid, 10, quest) = 0 {draw_sprite(spr_exclaquest,0,x,y)}
//if ds_grid_get(obj_quest.questgrid, 10, quest) = 1 {draw_sprite(spr_interoquest,0,x,y)}
//if ds_grid_get(obj_quest.questgrid, 10, quest) = 2 {draw_sprite(spr_validerquest,0,x,y)}

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check(ord("E")){if craft &lt; 100 { craft += 1 }else{
//if instance_exists(obj_questinfo){}else{
splitquest = 0
questinfovar = ds_grid_get(obj_quest.questgrid,3,quest)
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
finished = 1
quest = other.quest
}
obj_zombie.karma += ds_grid_get(obj_quest.questgrid,5, quest)
if ds_grid_get(obj_quest.questgrid,32, quest) = "" {}else{
obj_nightcycle.walkienow = ds_grid_get(obj_quest.questgrid,32, quest)}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = ds_grid_get(obj_quest.questgrid,6, other.quest)}
ds_grid_set(obj_quest.questgrid, 10, quest,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, quest,4)//la mêttre dans les quetes fini
if ds_grid_get(obj_quest.questgrid, 30, quest) = "" or ds_grid_get(obj_quest.questgrid, 30, quest) &lt;= 0 {}else{ 
questinfovar = ds_grid_get(obj_quest.questgrid,3,ds_grid_get(obj_quest.questgrid, 30, quest))
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
finished = 0
quest = other.quest
}
ds_grid_set(obj_quest.questgrid, 10, ds_grid_get(obj_quest.questgrid, 30, quest),1)
global.roomcible = ds_grid_get(obj_quest.questgrid,16, ds_grid_get(obj_quest.questgrid, 30, quest))
global.roomdonneurdequest = ds_grid_get(obj_quest.questgrid,29, ds_grid_get(obj_quest.questgrid, 30, quest))
}//ajouter la prochainequestprincipal

with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.quest)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.quest)))
alarmloot[1] = 800
/*ds_map_add(lootinfods,string(2),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,6, other.quest)))
alarmloot[2] = 800*/
    
    }
/*if obj_quest.questactivenow[mode] = 1 {
if instance_exists(obj_enemy2){}else{if mode = 1 {obj_quest.questask[mode] = 100}}
if mode = 2 {obj_quest.questask[mode] = 100}
}*///on active qd il est proche
//}
}}else{craft = 0}}

}else if obj_zombie.karma &lt;= 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 2 {


if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check(ord("E")){if craft &lt; 100 { craft += 1 }else{
ds_grid_set(obj_quest.questgrid, 10, quest,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, quest,4)//la mêttre dans les quetes fini
obj_zombie.karma -= ds_grid_get(obj_quest.questgrid,5, other.quest)
with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.quest)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.quest)))
alarmloot[1] = 800
/*ds_map_add(lootinfods,string(2),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,6, other.quest)))
alarmloot[2] = 800*/
    
    }}
/*if obj_quest.questactivenow[mode] = 1 {
if instance_exists(obj_enemy2){}else{if mode = 1 {obj_quest.questask[mode] = 100}}
if mode = 2 {obj_quest.questask[mode] = 100}
}*///on active qd il est proche
}}


}}}












</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
