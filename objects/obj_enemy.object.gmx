<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
can_run = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move(x_spd,y_spd,obj)
var x_spd, y_spd;
x_spd = 0;
y_spd = 0;

if (irandom(25) = 1){
    dir = random(359);
}

direction += angle_difference(dir, direction)/15;
image_angle = direction;

if (can_run){
    if (irandom(800) = 1){
        can_run = false;
    }
}else{
    if (irandom(50) = 1){
        can_run = true;
    }
}

if (can_run){
    x_spd = lengthdir_x(5, direction);
    y_spd = lengthdir_y(5, direction);
}



{
    var _check;
    for (i = abs(x_spd); i &gt; 0; i -= 1){
        if (i &lt; 0) {i = 0;}
        _check = sign(x_spd)*i;
        if !(place_meeting(x+_check,y,obj_wall)){
           x += _check;
           break;
        }
        if !(place_meeting(x+_check,y-i,obj_wall)){
           y -= i/2;
        }
        if !(place_meeting(x+_check,y+i,obj_wall)){
           y += i/2;
        }  
    }
    
    for (i = abs(y_spd); i &gt; 0; i -= 1){
        if (i &lt; 0) {i = 0;}
        _check = sign(y_spd)*i;
        if !(place_meeting(x,y+_check,obj_wall)){
           y += _check;
           break;
        }
        if !(place_meeting(x-i,y+_check,obj_wall)){
           x -= i/2;
        }
        if !(place_meeting(x+i,y+_check,obj_wall)){
           x += i/2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
