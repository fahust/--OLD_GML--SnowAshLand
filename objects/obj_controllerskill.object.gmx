<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100001</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MATERIA

//SPEAR 
// obj_spearrayon // fais une multitude de rayon rapide en ligne droite mais esquivable
// obj_speareclair // Appel un eclair venu du ciel
// obj_spearbouleelec // envoi un boule d'electricité lente mais dangereuses
//trou noir attire touts les énemi
//
//DAGUE
//Balance un sort de zone esquivable (1/2sec) poison
//Balance un sort de zone esquivable (1/2sec) flame
//Balance un sort de zone FROID INTENSE TOUT LES GENS DANS LA ZONE CE RETROUVE A 0 freeze
//vague electrique tourne autour du lanceur et fais tres mal si touche
//
//BATON
//Dash electrique tres court ,rechargement aussi court paralyse les enemi
//Teleportation immediat sur la souris dans un nuage de fumee si mp grid le veux bien
//Vague d electricité a tete chercheuses poursuis la cible
//acceleration de la marche a pied avec leger eclair sous les pieds ,dur par longtemps mais pour toute la team
//



//scr_skill

skilltime[0] = 300
skilltime[1] = 600
skilltime[2] = 1500
skilltime[3] = 2500

skilltime[4] = 300
skilltime[5] = 600
skilltime[6] = 1500
skilltime[7] = 2500

skilltime[8] = 300
skilltime[9] = 600
skilltime[10] = 1700
skilltime[11] = 3000


skilltime[12] = 300
skilltime[13] = 600
skilltime[14] = 1500
skilltime[15] = 2500

skilltime[16] = 300
skilltime[17] = 600
skilltime[18] = 1500
skilltime[19] = 2500

skilltime[20] = 300
skilltime[21] = 600
skilltime[22] = 1700
skilltime[23] = 3000

skilltime[24] = 300
skilltime[25] = 600
skilltime[26] = 1500
skilltime[27] = 2500

skilltimenow[0] = 0
skilltimenow[1] = 0
skilltimenow[2] = 0
skilltimenow[3] = 0

skilltimenow[4] = 0
skilltimenow[5] = 0
skilltimenow[6] = 0
skilltimenow[7] = 0

skilltimenow[8] = 0
skilltimenow[9] = 0
skilltimenow[10] = 0
skilltimenow[11] = 0

skilltimenow[12] = 0
skilltimenow[13] = 0
skilltimenow[14] = 0
skilltimenow[15] = 0

skilltimenow[16] = 0
skilltimenow[17] = 0
skilltimenow[18] = 0
skilltimenow[19] = 0

skilltimenow[20] = 0
skilltimenow[21] = 0
skilltimenow[22] = 0
skilltimenow[23] = 0

skilltimenow[24] = 0
skilltimenow[25] = 0
skilltimenow[26] = 0
skilltimenow[27] = 0


//effet
skilltimenow[12] = 0
skilltimenow[13] = 0
skilltimenow[14] = 0
skilltimenow[15] = 0
skilltimenow[16] = 0
skilltimenow[17] = 0
skilltimenow[18] = 0
skilltimenow[19] = 0
skilltimenow[20] = 0
skilltimenow[21] = 0
skilltimenow[22] = 0
skilltimenow[23] = 0
skilltimenow[24] = 0
skilltimenow[25] = 0
skilltimenow[26] = 0
skilltimenow[27] = 0
skilltimenow[28] = 0
skilltimenow[29] = 0
skilltimenow[30] = 0
skilltime[12] = 0
skilltime[13] = 0
skilltime[14] = 0
skilltime[15] = 0
skilltime[16] = 0
skilltime[17] = 0
skilltime[18] = 0
skilltime[19] = 0
skilltime[20] = 0
skilltime[21] = 0
skilltime[22] = 0
skilltime[23] = 0
skilltime[24] = 0
skilltime[25] = 0
skilltime[26] = 0
skilltime[27] = 0
skilltime[28] = 0
skilltime[29] = 0
skilltime[30] = 0


view[0] = 0;
view[1] = 0;
view[2] = 0;
view[3] = 0;
view[4] = 0;
view[5] = 0;
view[6] = 0;
view[7] = 0;
view[8] = 0;
view[9] = 0;
view[10] = 0;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pour empecher les comps bonus stat de durer trop longtemps (bug)
if obj_zombie.nanoarmor = 0.7 {varnanoarmor += 1}else{varnanoarmor = 0}
if obj_zombie.nanodps = 1.3 {varnanodps += 1}else{varnanodps = 0}
if varnanoarmor &gt; 4000 {varnanoarmor = 0 ;obj_zombie.nanoarmor = 1}
if varnanodps &gt; 4000 {varnanodps = 0 ;obj_zombie.nanodps = 1}//


view[0] = -1;
view[1] = -1;
view[2] = -1;
view[3] = -1;
view[4] = -1;
view[5] = -1;
view[6] = -1;
view[7] = -1;
view[8] = -1;
view[9] = -1;
view[10] = -1;
i = 0;
//skilltimenow[-1] = 0

if skilltimenow[0] &gt; 0 {skilltimenow[0] -= 1;view[i] = 0;i+=1}
if skilltimenow[1] &gt; 0 {skilltimenow[1] -= 1;view[i] = 1;i+=1}
if skilltimenow[2] &gt; 0 {skilltimenow[2] -= 1;view[i] = 2;i+=1}
if skilltimenow[3] &gt; 0 {skilltimenow[3] -= 1;view[i] = 3;i+=1}

if skilltimenow[4] &gt; 0 {skilltimenow[4] -= 1;view[i] = 4;i+=1}
if skilltimenow[5] &gt; 0 {skilltimenow[5] -= 1;view[i] = 5;i+=1}
if skilltimenow[6] &gt; 0 {skilltimenow[6] -= 1;view[i] = 6;i+=1}
if skilltimenow[7] &gt; 0 {skilltimenow[7] -= 1;view[i] = 7;i+=1}

if skilltimenow[8] &gt; 0 {skilltimenow[8] -= 1;view[i] = 8;i+=1}
if skilltimenow[9] &gt; 0 {skilltimenow[9] -= 1;view[i] = 9;i+=1}
if skilltimenow[10] &gt; 0 {skilltimenow[10] -= 1;view[i] = 10;i+=1}
if skilltimenow[11] &gt; 0 {skilltimenow[11] -= 1;view[i] = 11;i+=1}

if skilltimenow[12] &gt; 0 {skilltimenow[12] -= 1;view[i] = 12;i+=1}
if skilltimenow[13] &gt; 0 {skilltimenow[13] -= 1;view[i] = 13;i+=1}
if skilltimenow[14] &gt; 0 {skilltimenow[14] -= 1;view[i] = 14;i+=1}
if skilltimenow[15] &gt; 0 {skilltimenow[15] -= 1;view[i] = 15;i+=1}

if skilltimenow[16] &gt; 0 {skilltimenow[16] -= 1;view[i] = 16;i+=1}
if skilltimenow[17] &gt; 0 {skilltimenow[17] -= 1;view[i] = 17;i+=1}
if skilltimenow[18] &gt; 0 {skilltimenow[18] -= 1;view[i] = 18;i+=1}
if skilltimenow[19] &gt; 0 {skilltimenow[19] -= 1;view[i] = 19;i+=1}

if skilltimenow[20] &gt; 0 {skilltimenow[20] -= 1;view[i] = 20;i+=1}
if skilltimenow[21] &gt; 0 {skilltimenow[21] -= 1;view[i] = 21;i+=1}
if skilltimenow[22] &gt; 0 {skilltimenow[22] -= 1;view[i] = 22;i+=1}
if skilltimenow[23] &gt; 0 {skilltimenow[23] -= 1;view[i] = 23;i+=1}

if skilltimenow[24] &gt; 0 {skilltimenow[24] -= 1;view[i] = 24;i+=1}
if skilltimenow[25] &gt; 0 {skilltimenow[25] -= 1;view[i] = 25;i+=1}
if skilltimenow[26] &gt; 0 {skilltimenow[26] -= 1;view[i] = 26;i+=1}
if skilltimenow[27] &gt; 0 {skilltimenow[27] -= 1;view[i] = 27;i+=1}

if obj_maladie.namemaladie = "" {}else{view[i] = 12;i+=1}//maladie

if obj_bigstats.hemoragie = 1 {view[i] = 13;i+=1}//hemoragie

if obj_bigstats.brasdroit = 1 or obj_bigstats.brasgauche = 1 or 
obj_bigstats.jambegauche = 1 or obj_bigstats.jambedroite = 1  {
view[i] = 14;i+=1}//fracture

if obj_zombie.freeze &lt; 2 {view[i] = 15;i+=1}//froid

if obj_zombie.aterre &gt; 0 {view[i] = 16;i+=1}//aterre

if obj_armorloot.vitessepoids &gt; 1.5 {view[i] = 17;i+=1}//lourd

if obj_zombie.nowthirst &lt; 5 {view[i] = 18;i+=1}//soif

if obj_zombie.nowhunger &lt; 5 {view[i] = 19;i+=1}//faim

if obj_zombie.endurencerun &lt; 15 {view[i] = 20;i+=1}//endurence








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>color = c_white
draw_set_alpha(1)
if view[0] &gt;= 0 {if view[0] &lt; 4 {color = c_green} else if view[0] &lt; 8 {color = c_blue} else if view[0] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[0], view_xview+200, view_yview+700, 1, 1, 0, color, 1); }; color = c_white;
if view[1] &gt;= 0 {if view[1] &lt; 4 {color = c_green} else if view[1] &lt; 8 {color = c_blue} else if view[1] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[1], view_xview+240, view_yview+700, 1, 1, 0, color, 1); }; color = c_white;
if view[2] &gt;= 0 {if view[2] &lt; 4 {color = c_green} else if view[2] &lt; 8 {color = c_blue} else if view[2] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[2], view_xview+280, view_yview+700, 1, 1, 0, color, 1); }; color = c_white;
if view[3] &gt;= 0 {if view[3] &lt; 4 {color = c_green} else if view[3] &lt; 8 {color = c_blue} else if view[3] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[3], view_xview+320, view_yview+700, 1, 1, 0, color, 1); }; color = c_white;
if view[4] &gt;= 0 {if view[4] &lt; 4 {color = c_green} else if view[4] &lt; 8 {color = c_blue} else if view[4] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[4], view_xview+360, view_yview+700, 1, 1, 0, color, 1); }; color = c_white;
if view[5] &gt;= 0 {if view[5] &lt; 4 {color = c_green} else if view[5] &lt; 8 {color = c_blue} else if view[5] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[5], view_xview+200, view_yview+740, 1, 1, 0, color, 1); }; color = c_white;
if view[6] &gt;= 0 {if view[6] &lt; 4 {color = c_green} else if view[6] &lt; 8 {color = c_blue} else if view[6] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[6], view_xview+240, view_yview+740, 1, 1, 0, color, 1); }; color = c_white;
if view[7] &gt;= 0 {if view[7] &lt; 4 {color = c_green} else if view[7] &lt; 8 {color = c_blue} else if view[7] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[7], view_xview+280, view_yview+740, 1, 1, 0, color, 1); }; color = c_white;
if view[8] &gt;= 0 {if view[8] &lt; 4 {color = c_green} else if view[8] &lt; 8 {color = c_blue} else if view[8] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[8], view_xview+320, view_yview+740, 1, 1, 0, color, 1); }; color = c_white;
if view[9] &gt;= 0 {if view[9] &lt; 4 {color = c_green} else if view[9] &lt; 8 {color = c_blue} else if view[9] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[9], view_xview+360, view_yview+740, 1, 1, 0, color, 1); }; color = c_white;
if view[10] &gt;= 0 {if view[10] &lt; 4 {color = c_green} else if view[10] &lt; 8 {color = c_blue} else if view[10] &lt; 12 {color = c_red} 
draw_sprite_ext(spr_iconskill, view[10], view_xview+400, view_yview+740, 1, 1, 0, color, 1); }
draw_set_alpha(0.5)
if view[0] &gt;= 0 {draw_healthbar(view_xview+200-16, view_yview+700-16,view_xview+200+16, view_yview+700+16, (skilltimenow[view[0]]/skilltime[view[0]])*100, c_black, c_black, c_black, 0, false, false);}
if view[1] &gt;= 0 {draw_healthbar(view_xview+240-16, view_yview+700-16,view_xview+240+16, view_yview+700+16, (skilltimenow[view[1]]/skilltime[view[1]])*100, c_black, c_black, c_black, 0, false, false);}
if view[2] &gt;= 0 {draw_healthbar(view_xview+280-16, view_yview+700-16,view_xview+280+16, view_yview+700+16, (skilltimenow[view[2]]/skilltime[view[2]])*100, c_black, c_black, c_black, 0, false, false);}
if view[3] &gt;= 0 {draw_healthbar(view_xview+320-16, view_yview+700-16,view_xview+320+16, view_yview+700+16, (skilltimenow[view[3]]/skilltime[view[3]])*100, c_black, c_black, c_black, 0, false, false);}
if view[4] &gt;= 0 {draw_healthbar(view_xview+360-16, view_yview+700-16,view_xview+360+16, view_yview+700+16, (skilltimenow[view[4]]/skilltime[view[4]])*100, c_black, c_black, c_black, 0, false, false);}
if view[5] &gt;= 0 {draw_healthbar(view_xview+200-16, view_yview+740-16,view_xview+200+16, view_yview+740+16, (skilltimenow[view[5]]/skilltime[view[5]])*100, c_black, c_black, c_black, 0, false, false);}
if view[6] &gt;= 0 {draw_healthbar(view_xview+240-16, view_yview+740-16,view_xview+240+16, view_yview+740+16, (skilltimenow[view[6]]/skilltime[view[6]])*100, c_black, c_black, c_black, 0, false, false);}
if view[7] &gt;= 0 {draw_healthbar(view_xview+280-16, view_yview+740-16,view_xview+280+16, view_yview+740+16, (skilltimenow[view[7]]/skilltime[view[7]])*100, c_black, c_black, c_black, 0, false, false);}
if view[8] &gt;= 0 {draw_healthbar(view_xview+320-16, view_yview+740-16,view_xview+320+16, view_yview+740+16, (skilltimenow[view[8]]/skilltime[view[8]])*100, c_black, c_black, c_black, 0, false, false);}
if view[9] &gt;= 0 {draw_healthbar(view_xview+360-16, view_yview+740-16,view_xview+360+16, view_yview+740+16, (skilltimenow[view[9]]/skilltime[view[9]])*100, c_black, c_black, c_black, 0, false, false);}
if view[10] &gt;= 0 {draw_healthbar(view_xview+400-16, view_yview+740-16,view_xview+400+16, view_yview+740+16, (skilltimenow[view[10]]/skilltime[view[10]])*100, c_black, c_black, c_black, 0, false, false);}
//repas
if obj_bar.repasnow = 0 {}else{
draw_rectangle_colour(view_xview+440-16, view_yview+740-16, view_xview+440+16, view_yview+740+16, obj_bigstats.colortext2,  obj_bigstats.colortext2,  obj_bigstats.colortext2,  obj_bigstats.colortext2, false);
draw_sprite_ext(spr_items, 399+obj_bar.repasnow, view_xview+440, view_yview+740, 0.8, 0.8, 0, c_white, 1);
draw_healthbar(view_xview+440-16, view_yview+740-16,view_xview+440+16, view_yview+740+16, (obj_bar.alarm[2]/15000)*100, c_black, c_black, c_black, 0, false, false);}
draw_set_alpha(1)
//if view[11] &gt; 0 {draw_sprite_ext(spr_iconskill, view[11], view_xview+200, view_yview+730, 1, 1, 0, c_red, 1); }



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 450}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 451}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 452}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 453}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 454}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 455}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 456}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 457}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 458}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 459}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 460}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 461}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 462}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 463}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 464}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 465}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 466}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 467}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 468}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 469}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 470}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 471}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 472}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = 473}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
