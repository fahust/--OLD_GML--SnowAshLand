<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1500</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_fps         = false; // Affichage des FPS
draw_time        = true;  // Affichage de l'horloge
draw_map         = 0;     // Affichage de la minimap
draw_tods        = false;  // Affichage du slider jour/nuit
grab_toggle      = false; // Activation du mode de déplacement des objets
grab_active      = false; // Détermine si le déplacement d'objets avec la souris est actif ou non
transform_toggle = false; // Activation du mode de transformation de obj_character

// Variables relatives au fade out du curseur
mouse_xprev = mouse_x;
mouse_yprev = mouse_y;
mouse_counter = 0;

// Active/désactive certaines commandes du dev mode
global.dev = false;

up2 = 0
alphaup = 1

// Police
draw_set_font(fnt_arial_12);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_controllerplayer.x
y = obj_controllerplayer.y

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Génère des nuages
//if room!=room2 repeat(15) instance_create(random(room_width),random(room_height),obj_cloud);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if room = room1 instance_create(550,1010,obj_character);
if room = room2 instance_create(350,45,obj_character);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angleminute = 1
angleheure = 1

draw_set_alpha(obj_nightcycle.alphahud2)
// Affichage de l'horloge
if draw_time
{
draw_set_font(fnt_cool);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_alpha(1);
     yy=200
    //draw_text(view_xview[view_current]+1250,view_yview[view_current]+yy,string(global.sl_time-frac(global.sl_time))+"h "+string(floor(60*frac(global.sl_time))));
    draw_set_alpha(obj_nightcycle.alphahud2);
    draw_set_color(c_black);
}
if global.hud4 = 1 {
draw_sprite_ext( spr_horloge, image_index, view_xview+1270, view_yview+80, 0.35, 0.35, 0, c_white, obj_nightcycle.alphahud2 );
}
angleheure = global.sl_time / 12;
angleheure2 = angleheure * 360;

if global.sl_time &gt; 0 &amp;&amp; global.sl_time &lt; 1 {angleminute = global.sl_time }else
if global.sl_time &gt; 1 &amp;&amp; global.sl_time &lt; 2 {angleminute = global.sl_time - 1}else
if global.sl_time &gt; 2 &amp;&amp; global.sl_time &lt; 3 {angleminute = global.sl_time - 2}else
if global.sl_time &gt; 3 &amp;&amp; global.sl_time &lt; 4 {angleminute = global.sl_time - 3}else
if global.sl_time &gt; 4 &amp;&amp; global.sl_time &lt; 5 {angleminute = global.sl_time - 4}else
if global.sl_time &gt; 5 &amp;&amp; global.sl_time &lt; 6 {angleminute = global.sl_time - 5}else
if global.sl_time &gt; 6 &amp;&amp; global.sl_time &lt; 7 {angleminute = global.sl_time - 6}else
if global.sl_time &gt; 7 &amp;&amp; global.sl_time &lt; 8 {angleminute = global.sl_time - 7}else
if global.sl_time &gt; 8 &amp;&amp; global.sl_time &lt; 9 {angleminute = global.sl_time - 8}else
if global.sl_time &gt; 9 &amp;&amp; global.sl_time &lt; 10 {angleminute = global.sl_time - 9}else
if global.sl_time &gt; 10 &amp;&amp; global.sl_time &lt; 11 {angleminute = global.sl_time - 10}else
if global.sl_time &gt; 11 &amp;&amp; global.sl_time &lt; 12 {angleminute = global.sl_time - 11}else
if global.sl_time &gt; 12 &amp;&amp; global.sl_time &lt; 13 {angleminute = global.sl_time - 12}else
if global.sl_time &gt; 13 &amp;&amp; global.sl_time &lt; 14 {angleminute = global.sl_time - 13}else
if global.sl_time &gt; 14 &amp;&amp; global.sl_time &lt; 15 {angleminute = global.sl_time - 14}else
if global.sl_time &gt; 15 &amp;&amp; global.sl_time &lt; 16 {angleminute = global.sl_time - 15}else
if global.sl_time &gt; 16 &amp;&amp; global.sl_time &lt; 17 {angleminute = global.sl_time - 16}else
if global.sl_time &gt; 17 &amp;&amp; global.sl_time &lt; 18 {angleminute = global.sl_time - 17}else
if global.sl_time &gt; 18 &amp;&amp; global.sl_time &lt; 19 {angleminute = global.sl_time - 18}else
if global.sl_time &gt; 19 &amp;&amp; global.sl_time &lt; 20 {angleminute = global.sl_time - 19}else
if global.sl_time &gt; 20 &amp;&amp; global.sl_time &lt; 21 {angleminute = global.sl_time - 20}else
if global.sl_time &gt; 21 &amp;&amp; global.sl_time &lt; 22 {angleminute = global.sl_time - 21}else
if global.sl_time &gt; 22 &amp;&amp; global.sl_time &lt; 23 {angleminute = global.sl_time - 22}else
if global.sl_time &gt; 23 &amp;&amp; global.sl_time &lt; 24 {angleminute = global.sl_time - 23}

angleminute2 = angleminute * 100;
angleminute3 = angleminute2 / 100;
angleminute4 = angleminute3 * 360;



if global.hud4 = 1 &amp;&amp; obj_nightcycle.alphahud2 &gt; 0.01 {


if up2 = 1 {if alphaup &lt; 1 { alphaup += 0.02 }else{up2 = 0}}else{
if alphaup &gt; 0 { alphaup -= 0.02 }else{up2 = 1}}

if instance_exists(obj_teleportcible){with(obj_teleportcible){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y)
coloricon = obj_nightcycle.colortext3
if ds_grid_get(obj_view.viewgrid,room,global.roomdonneurdequest) = direct {
    coloricon = obj_nightcycle.statcolor7
        //obj_hudtuto
if instance_exists(obj_hudtuto){
if obj_hudtuto.stepnow = 22 {coloricon = c_blue
draw_sprite_ext(spr_zone,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.50,0.50,rotdir,coloricon,obj_nightcycle.alphahud2)
}}
    }
    if ds_grid_get(obj_view.viewgrid,room,global.roomcible) = direct {
    coloricon = obj_nightcycle.statcolor5
    //obj_hudtuto
if instance_exists(obj_hudtuto){
if obj_hudtuto.stepnow = 21 {coloricon = c_red
draw_sprite_ext(spr_zone,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.50,0.50,rotdir,coloricon,obj_nightcycle.alphahud2)
}}
    }
    
    
    if point_distance(obj_zombie.x,obj_zombie.y,x,y) &gt; 200 {
draw_sprite_ext(spr_zone,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.25,0.25,rotdir,coloricon,obj_nightcycle.alphahud2)

//obj_hudtuto
if instance_exists(obj_hudtuto){
if obj_hudtuto.stepnow = 20 {//coloricon = c_red
draw_sprite_ext(spr_zone,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.50,0.50,rotdir,coloricon,obj_nightcycle.alphahud2)
}}



}
}}

if instance_exists(obj_immobile){with(obj_immobile){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_persoprincipaux){with(obj_persoprincipaux){
//obj_hudtuto
if instance_exists(obj_hudtuto){
if obj_hudtuto.stepnow = 23 {coloricon = c_red
draw_sprite_ext(spr_zone,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.50,0.50,rotdir,coloricon,obj_nightcycle.alphahud2)
}}
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_piratereparerquest){with(obj_piratereparerquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_piratage,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_askobjquest){with(obj_askobjquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_prisonerquest){with(obj_prisonerquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_transportquest){with(obj_transportquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_talkquest){with(obj_talkquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_prisonersoldier){with(obj_prisonersoldier){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_protegerquest){with(obj_protegerquest){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}

if instance_exists(obj_immobile2){with(obj_immobile2){
rotdir = point_direction(obj_zombie.x,obj_zombie.y,x,y);
draw_sprite_ext(spr_quest,0,view_xview+1270+lengthdir_x(60,rotdir),
view_yview+80+lengthdir_y(60,rotdir),0.5,0.5,rotdir,obj_nightcycle.colortext3,other.alphaup*obj_nightcycle.alphahud2)}}




//angleminute = floor(60*frac(global.sl_time)) / 60
//angleminute2 = floor(60*frac(global.sl_time)) * 360

draw_sprite_ext( spr_aiguilleheure, image_index, view_xview+1270, view_yview+80, 0.35, 0.35, -angleheure2, c_white, obj_nightcycle.alphahud2 );
draw_sprite_ext( spr_aiguilleheure, image_index, view_xview+1253, view_yview+109, 0.14, 0.14, -angleminute4, c_white, obj_nightcycle.alphahud2 );//0.15
}
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
