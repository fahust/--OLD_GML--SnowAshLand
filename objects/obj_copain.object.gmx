<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_copain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

alarm[0] = 1500
global.existencecopain = 1

target = obj_zombie;
myspeed = 2.5 / obj_zombie.fpsmax ;
length = 198;
place = 0;

poscoptirx  = 0
poscoptiry  = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
 dir = point_direction(x, y, mouse_x,mouse_y);
   // instance_create(x,y,obj_firebullet)
    
   
     
         with (instance_create(x,y,obj_light03)) {
    obj_light03.alarm[0] = 4
   // obj_light02.mode = 15
    //obj_light01.alarm[1] = 5
    }


 //dir = point_direction(x, y, mouse_x+random(20)-random(20),mouse_y+random(20)-random(20));
// 
if not mouse_check_button(mb_left)
   {
if not instance_exists(obj_shield) {
 with (instance_create(obj_zombie.x, obj_zombie.y, obj_shield)) {
}
}
}
//
//
//}


//poscoptirx2 = poscoptirx / 2
//poscoptiry2 = poscoptirx / 2





alarm[3] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 dir = point_direction(x, y, mouse_x,mouse_y);
   // instance_create(x,y,obj_firebullet)
    
   
     
         with (instance_create(x,y,obj_light03)) {
    obj_light03.alarm[0] = 4
   // obj_light02.mode = 15
    //obj_light01.alarm[1] = 5
    }


 //dir = point_direction(x, y, mouse_x+random(20)-random(20),mouse_y+random(20)-random(20));
// 
 with (instance_create(x, y, obj_laser)) {
 audio_play_sound(snd_fusil,1,0)
    obj_laser.speed = 120*global.lag
    direction = other.dir;
}
//
//
//}


//poscoptirx2 = poscoptirx / 2
//poscoptiry2 = poscoptirx / 2





alarm[2] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*obj_zombie.hp += 0.03
alarm[1] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///temps pour que la competence se ré active
/*obj_controllerplayer.alarm[2] = 7000
if instance_exists(obj_shield) {
 with(obj_shield){
 instance_destroy()
 }
 }

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if mode = 0 &amp;&amp; alarm[1] &lt; 0 {
alarm[1] = 15
}


if mode = 1 {
if not mouse_check_button(mb_left)
   {
alarm[2] = 5
}}

if mode = 2 {
if not mouse_check_button(mb_left)
   {
   if alarm[3] &lt; 0 {
alarm[3] = 5
}
}}


*/


//orbit et direction

if not mouse_check_button(mb_left)
   {
//if place_free(x,y){
x = target.x + lengthdir_x(length,place);
y = target.y + lengthdir_y(length,place);
place += myspeed;
//}else{
//move_towards_point(obj_zombie.x,obj_zombie.y,5)
//move_outside_solid(0,-1)
//}

poscoptirx = x - obj_zombie.x
poscoptiry = y - obj_zombie.y

}else {
x = obj_zombie.x +  poscoptirx 
y = obj_zombie.y + poscoptiry 
}






image_angle = point_direction(x, y, mouse_x, mouse_y)














//lumière
if obj_zombie.lowgpu = 0 {

modelight = 0
// Configurations des différentes lumières déterminées par la var 'mode' déclarée dans l'event creation code de l'éditeur de room //

switch modelight
{
case 0:
{
    sprite = spr_light01; // Lumière orange
    scale  = 1;
    angle  = direction;
    color  = c_white;
    alpha  = 0.8;
}

}

//SL_draw_sprite_light(sprite,0,x,y,scale,scale,angle,color,alpha);



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
