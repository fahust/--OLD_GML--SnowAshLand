<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shieldskill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>karmaneg = 0
nearinst1 = 0
nearinst2 = 0
nearinst3 = 0
enemy = 0


lx1 = x+lengthdir_x(900,image_angle);
ly1 = y+lengthdir_y(900,image_angle);
lx2 = x+lengthdir_x(1000,image_angle);
ly2 = y+lengthdir_y(1000,image_angle);
lx3 = x+lengthdir_x(1100,image_angle);
ly3 = y+lengthdir_y(1100,image_angle);
lx4 = x+lengthdir_x(700,image_angle);
ly4 = y+lengthdir_y(700,image_angle);

idcrea = 0
Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,-100000)
part_type_shape(particle1,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
part_type_color3(particle1,0,0,0);//33023,255,65535);
part_type_alpha2(particle1,0.6,0.9);
part_type_scale(particle1,1,1);
part_type_gravity(particle1,0,270);
part_type_life(particle1,4,4);
part_type_blend(particle1,1);




alarm[3] = 140*global.varfpsmax //destruction si trop long a revenir

path = path_add();

alarm[0] = 40*global.varfpsmax //retour a l envoyeur
alarm[1] = 2*global.varfpsmax //commence l auto guidee

toucher = 1
toucherid[0] = 0
toucherid[1] = 0
toucherid[2] = 0
toucherid[3] = 0
toucherid[4] = 0
toucherid[5] = 0



if instance_exists(oOtherClient){
nearinst1var = instance_nth_nearest(x,y,oOtherClient,0)
if point_distance(x,y,nearinst1var.x,nearinst1var.y) &lt; 1600  &amp;&amp; nearinst1var.x &gt; 0  {
/*nearinst2var = instance_nth_nearest(x,y,oOtherClient,1)
nearinst3var = instance_nth_nearest(x,y,oOtherClient,2)
nearinst4var = instance_nth_nearest(x,y,oOtherClient,3)
nearinst5var = instance_nth_nearest(x,y,oOtherClient,4)*/

if obj_zombie.karma &gt; 0 {
if nearinst1var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}}
/*if nearinst2var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst2var}else if nearinst2 = 0 { nearinst2 = nearinst2var}else if nearinst3 = 0 { nearinst3 = nearinst2var}}
if nearinst3var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst3var}else if nearinst2 = 0 { nearinst2 = nearinst3var}else if nearinst3 = 0 { nearinst3 = nearinst3var}}
if nearinst4var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst4var}else if nearinst2 = 0 { nearinst2 = nearinst4var}else if nearinst3 = 0 { nearinst3 = nearinst4var}}
if nearinst5var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst5var}else if nearinst2 = 0 { nearinst2 = nearinst5var}else if nearinst3 = 0 { nearinst3 = nearinst5var}}
*/
}
}
}


/*if instance_exists(obj_bossnet){
nearinst1var = instance_nth_nearest(x,y,obj_bossnet,0)

if obj_zombie.karma &gt; 0 {
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}


}
}*/

if instance_exists(obj_enemy2){
nearinst1var = instance_nth_nearest(x,y,obj_enemy2,0)
//nearinst2var = instance_nth_nearest(x,y,obj_enemy2,1)
//nearinst3var = instance_nth_nearest(x,y,obj_enemy2,2)


if obj_zombie.karma &gt; 0 {
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}
//if nearinst1 = 0 { nearinst1 = nearinst2var}else if nearinst2 = 0 { nearinst2 = nearinst2var}else if nearinst3 = 0 { nearinst3 = nearinst2var}
//if nearinst1 = 0 { nearinst1 = nearinst3var}else if nearinst2 = 0 { nearinst2 = nearinst3var}else if nearinst3 = 0 { nearinst3 = nearinst3var}


}
}


if instance_exists(obj_stalker){
nearinst1var = instance_nth_nearest(x,y,obj_stalker,0)
//nearinst2var = instance_nth_nearest(x,y,obj_stalker,1)
//nearinst3var = instance_nth_nearest(x,y,obj_stalker,2)


if obj_zombie.karma &gt; 0 {}else{
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}
//if nearinst1 = 0 { nearinst1 = nearinst2var}else if nearinst2 = 0 { nearinst2 = nearinst2var}else if nearinst3 = 0 { nearinst3 = nearinst2var}
//if nearinst1 = 0 { nearinst1 = nearinst3var}else if nearinst2 = 0 { nearinst2 = nearinst3var}else if nearinst3 = 0 { nearinst3 = nearinst3var}


}
}
if instance_exists(nearinst1){
var dir1 = point_direction(x,y,nearinst1.x,nearinst1.y);

if abs(angle_difference(dir1,image_angle)) &lt;= 60 {
direction = point_direction(x,y,nearinst1.x,nearinst1.y)
}}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(particle1);

part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toucher = 5 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//dash effect
/*var dash = instance_create(x,y,obj_dashshieldskill);
dash.sprite_index = sprite_index ;
dash.image_index = image_index ;*/

//faire rayon electrique
draw_lightning(x,y,x+lengthdir_x(70,image_angle-180),
y+lengthdir_y(70,image_angle-180), 1, 12, 1,34,c_red)

if enemy &gt; 0 {//lancer par l enemi traj differente
instsearch1 = obj_zombie
instsearch3 = oOtherClient
}else{
instsearch1 = oOtherClient
instsearch3 = obj_zombie
}

if alarm[1] &gt; 0 {//debut en ligne droite puis auto
direction = image_angle
speed = 25/global.varfpsmax
   //chargement d'une trajectoire en cas de non cible
lx1 = x+lengthdir_x(900,image_angle);
ly1 = y+lengthdir_y(900,image_angle);
lx2 = x+lengthdir_x(1000,image_angle);
ly2 = y+lengthdir_y(1000,image_angle);
lx3 = x+lengthdir_x(1100,image_angle);
ly3 = y+lengthdir_y(1100,image_angle);
lx4 = x+lengthdir_x(700,image_angle);
ly4 = y+lengthdir_y(700,image_angle);

}else{
//si nbr de cible pas encore toucher ds la zone
if toucher &lt; 5 {

//devenu inutile
if instance_exists(nearinst1){
nouvel_angle = point_direction(x,y,nearinst1.x,nearinst1.y)
image_angle += sin(degtorad(nouvel_angle - image_angle)) * (random_range(10,14)/global.varfpsmax);
direction = image_angle





}else{
//cherche d une cible ,different cible selon si otherclient le lance
nearinst1 = 0
nearinst2 = 0
nearinst3 = 0

if instance_exists(instsearch1){
var i;
 for (i = 0; i &lt; 10; i += 1){
nearinst1var = instance_nth_nearest(x,y,instsearch1,i)
if point_distance(x,y,nearinst1var.x,nearinst1var.y) &lt; 900 {
if nearinst1var = toucherid[toucher-1] {}else{
if not instsearch1.team = team {
if nearinst1var.karma &gt; 0 {}else{if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}}
}else{
nearinst1 = nearinst1var
}
}}}}


if instance_exists(obj_bossnet){if enemy = 2 {}else{
var i;
 for (i = 0; i &lt; 10; i += 1){
nearinst1var = instance_nth_nearest(x,y,obj_bossnet,i)
if nearinst1var = toucherid[toucher-1] {}else{
if karmaneg = 0  {//a regler le karma
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}
}}}}}

if instance_exists(obj_enemy2){
var i;
 for (i = 0; i &lt; 10; i += 1){
nearinst1var = instance_nth_nearest(x,y,obj_enemy2,i)
if point_distance(x,y,nearinst1var.x,nearinst1var.y) &lt; 900 {
if nearinst1var = toucherid[toucher-1] {}else{
if karmaneg = 0  {
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}}}
}}}
if enemy = 0 {//otherclient s en fou des stalker qu il ne voit pas logik !
if instance_exists(obj_stalker){
var i;
 for (i = 0; i &lt; 10; i += 1){
nearinst1var = instance_nth_nearest(x,y,obj_stalker,i)
if point_distance(x,y,nearinst1var.x,nearinst1var.y) &lt; 900 {
if nearinst1var = toucherid[toucher-1] {}else{
if karmaneg = 0 {}else{
if nearinst1 = 0 { nearinst1 = nearinst1var}else if nearinst2 = 0 { nearinst2 = nearinst1var}else if nearinst3 = 0 { nearinst3 = nearinst1var}}}
}}}}
if instance_exists(nearinst1){
var dir1 = point_direction(x,y,nearinst1.x,nearinst1.y);
direction = point_direction(x,y,nearinst1.x,nearinst1.y)
image_angle = point_direction(x,y,nearinst1.x,nearinst1.y)}
}
if instance_exists(nearinst1){
  var mx = nearinst1.x ;
var my = nearinst1.y;

if (mp_grid_path(global.grid, path, x, y, mx, my ,1)) {
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}}else{
 
//ligne droite ,choisit le lieu accessible
    if (mp_grid_path(global.grid, path, x, y, lx1, ly1 ,1)) {
    image_angle = direction
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}else
    if (mp_grid_path(global.grid, path, x, y, lx2, ly2 ,1)) {
    image_angle = direction
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}else
    if (mp_grid_path(global.grid, path, x, y, lx3, ly3 ,1)) {
    image_angle = direction
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}else
    if (mp_grid_path(global.grid, path, x, y, lx4, ly4 ,1)) {
    image_angle = direction
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}

/*
speedagain = 0
if not place_free (x+lengthdir_x(130,image_angle),y+lengthdir_y(130,image_angle)){
speed = 25/global.varfpsmax

speedagain = 1
}
if not place_free (x+lengthdir_x(100,image_angle),y+lengthdir_y(100,image_angle)){
speed = 25/global.varfpsmax

speedagain = 1
}
if not place_free (x+lengthdir_x(70,image_angle),y+lengthdir_y(70,image_angle)){
speed = 20/global.varfpsmax

speedagain = 1
}
if not place_free (x+lengthdir_x(50,image_angle),y+lengthdir_y(50,image_angle)){
speed = 15/global.varfpsmax
stoplight = 1
speedagain = 1
}
if speedagain = 0 {
speed = 25/global.varfpsmax
stoplight = 0
//BULLET SNIPER

}

if not place_free (x-lengthdir_x(30,image_angle),y-lengthdir_y(30,image_angle)){
speed = 25/global.varfpsmax
stoplight = 0

}*/

portebullet = 150
}




}else{//if toucher &lt; 5
//retour sur le joueur au bou du nbr de cible toucher
instance_destroy();
/*if instance_exists(idcrea){
if point_distance(x,y,idcrea.x,idcrea.y) &lt; 50 {instance_destroy();}

  var mx = idcrea.x ;
var my = idcrea.y;

if (mp_grid_path(global.grid, path, x, y, mx, my ,1)) {
    image_angle = direction
    path_start(path, 25/global.varfpsmax , path_action_stop, 0);}
}else{
instance_destroy();
}*/
//direction = point_direction(x,y,obj_zombie.x,obj_zombie.y)
//image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(particle1);

part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
