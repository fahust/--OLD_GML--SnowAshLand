<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ombrecalme</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create the path and basic stats enemy

probflame = 0
opacity = 1

xxdebut = 0
yydebut = 0
xxend = 0
yyend = 0
xxmovestep = 0
yymovestep = 0
movepiedvitessetest = 0

paralyse = 0
animwalk = 0
paralysetime = 300

xbulletplace = 0
ybulletplace = 0

choosearmshoot = 1
idshieldmob = 0

//OPTIMOB
tempsralent = 0
clicjoueur = 0
//

xx4 = 0
yy4 = 0


tirianet = 0
tirianet2 = 0

mode2 = choose(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,5,5,6,7,8,9,10,12,13,14,15,16)
mode2 = 1
difficulty = obj_difficulty.difficulty

//mode2 = 6
tirrafale = 0

aleatexplo = 0

tempscut = 0

coterattack = 0
fonce = 0

dgtaffichage = 0
dgtaffichagecount = 0

path = path_add();
patrol = 1
chasedir = random(360)
aleatcollidir = 1
countaleatcollidir = 1
aleatcollidir2 = 0
//suis les mort
pathstopdead = 0

idcreateur = id


//pour arreter de casser les couilles avec buh
clientia1 = 0
clientia2 = 0
clientia3 = 0
clientia4 = 0
clientia5 = 0
clientia6 = 0
clientia7 = 0
clientia8 = 0
clientia9 = 0
//



//net
startnetia = 0
alarm[7] = 10


//clientia1 = 0
//clientia2 = 0
//clientia3 = 0

iaposx1 = 0
iaposy1 = 0
iaposx2 = 0
iaposy2 = 0
iaposx3 = 0
iaposy3 = 0
iaposx4 = 0
iaposy4 = 0
iaposx5 = 0
iaposy5 = 0
iaposx6 = 0
iaposy6 = 0
iaposx7 = 0
iaposy7 = 0
iaposx8 = 0
iaposy8 = 0
iaposx9 = 0
iaposy9 = 0

//direction douce
directionnow = 0

dgtbonuslow = 1
if obj_zombie.level &lt; 4 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 7 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 10 {
dgtbonuslow = 1.3
}else if obj_zombie.level &lt; 15 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 20 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 25 {
dgtbonuslow = 1.8
}else if obj_zombie.level &lt; 30 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 35 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 40 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 45 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 50 {
dgtbonuslow = 1
}

//reglage difficulté
if obj_difficulty.difficulty = 1 {
statdiffucult = 1//difficulté de base
}else{
statdiffucult = obj_difficulty.difficulty*6//5 facile au level 500
}

//stat du mobs
bonusdistguys = 0

timechasecombat = 0

if mode2 = 1 {//FLINGUE
hpmobs = (1 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow //2 etait correct // 1 plus que bien // 0.5 quasi parfait
maxhpmobs = hpmobs
enemyspeed = 13+random_range(-1,1)
dgt = ((0.2/dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)//120 pas beaucoup de vie surtout si on compte les armes les talent et les ajout mods
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 2 {//Shootgun
xbulletplace = 0
ybulletplace = 11
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 3 {//assaut
xbulletplace = 0
ybulletplace = 17
hpmobs = (2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5.5+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 4 {//rafale
xbulletplace = 0
ybulletplace = 17
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6.5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 5 {//TANKGUYS m 240
xbulletplace = 0
ybulletplace = 15
hpmobs = (10 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4+random_range(-1,1)
dgt = ((0.35 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 6 {//GUN GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 4
hpmobs = (4 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 7+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)

}

if mode2 = 7 {//ASSAUT GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 17
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6.5+random_range(-1,1)
dgt = ((0.4 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 8 {//SHOOTGUN GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 15
hpmobs = (5 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 9 {//TANK GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 17
hpmobs = (11 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4+random_range(-1,1)
dgt = ((0.4 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 10 {//LANCE FLAME
xbulletplace = 0
ybulletplace = 15
hpmobs = (7 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 12 {//explo guys
hpmobs = (2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 9.5+random_range(-1,1)
dgt = ((0.01 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 13 {//arc guys
xbulletplace = 0
ybulletplace = 4
hpmobs = (4 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 8.5+random_range(-1,1)
dgt = ((0.5 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 600
}

if mode2 = 14 {//double uzi
hpmobs = (5 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}


if mode2 = 15 {//guys shield and ak 107
xbulletplace = 0
ybulletplace = 17
hpmobs = (15 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 3.5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 16 {//lance rocket guy
xbulletplace = 0
ybulletplace = 4
hpmobs = (6 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4.5+random_range(-1,1)
dgt = ((1 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 500
}





tirdeloin = 0
distance = 0

stopexp = 0

tir = 0
rechargementson = 0
image_speed = 0.08;







/*
//LANCEFLAME PARTICLE
if mode2 = 10 {//LANCE FLAME
colororange = make_color_rgb(255,143,5)
Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,-100000)
part_type_shape(particle1,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
//part_type_color3(particle1,33023,255,33023);//33023,255,65535);
part_type_alpha2(particle1,0.1,0.9);
part_type_scale(particle1,1,0.6);
part_type_gravity(particle1,0,270);
part_type_life(particle1,12,22);
part_type_blend(particle1,1);
}
/// blood system
/*
partblood_sys = part_system_create();

//blood particle
partblood = part_type_create();
part_type_shape(partblood,pt_shape_disk);
part_type_size(partblood,0.20,0.20,-0.01,0);
part_type_color1(partblood,250);
part_type_alpha2(partblood,1,1);
part_type_speed(partblood,1,2,0,0);
part_type_direction(partblood,0,259,0,0);
part_type_gravity(partblood,0.3,270);
part_type_blend(partblood,1);
part_type_life(partblood,15,30);

//create emitter
partblood_emit = part_emitter_create(partblood_sys);
/// create the path and basic stats enemy

probflame = 0

xxdebut = 0
yydebut = 0
xxend = 0
yyend = 0
xxmovestep = 0
yymovestep = 0
movepiedvitessetest = 0

paralyse = 0
animwalk = 0
paralysetime = 300

xbulletplace = 0
ybulletplace = 0

choosearmshoot = 1
idshieldmob = 0

//OPTIMOB
tempsralent = 0
clicjoueur = 0
//

xx4 = 0
yy4 = 0


tirianet = 0
tirianet2 = 0

mode2 = choose(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,5,5,6,7,8,9,10,12,13,14,15,16)
//mode2 = 16
difficulty = obj_difficulty.difficulty

//mode2 = 6
tirrafale = 0

aleatexplo = 0

tempscut = 0

coterattack = 0
fonce = 0

dgtaffichage = 0
dgtaffichagecount = 0

path = path_add();
patrol = 1
chasedir = random(360)
aleatcollidir = 1
countaleatcollidir = 1
aleatcollidir2 = 0
//suis les mort
pathstopdead = 0

idcreateur = id


//pour arreter de casser les couilles avec buh
clientia1 = 0
clientia2 = 0
clientia3 = 0
clientia4 = 0
clientia5 = 0
clientia6 = 0
clientia7 = 0
clientia8 = 0
clientia9 = 0
//



//net
startnetia = 0
alarm[7] = 10


//clientia1 = 0
//clientia2 = 0
//clientia3 = 0

iaposx1 = 0
iaposy1 = 0
iaposx2 = 0
iaposy2 = 0
iaposx3 = 0
iaposy3 = 0
iaposx4 = 0
iaposy4 = 0
iaposx5 = 0
iaposy5 = 0
iaposx6 = 0
iaposy6 = 0
iaposx7 = 0
iaposy7 = 0
iaposx8 = 0
iaposy8 = 0
iaposx9 = 0
iaposy9 = 0

//direction douce
directionnow = 0

dgtbonuslow = 1
if obj_zombie.level &lt; 4 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 7 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 10 {
dgtbonuslow = 1.3
}else if obj_zombie.level &lt; 15 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 20 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 25 {
dgtbonuslow = 1.8
}else if obj_zombie.level &lt; 30 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 35 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 40 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 45 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 50 {
dgtbonuslow = 1
}

//reglage difficulté
if obj_difficulty.difficulty = 1 {
statdiffucult = 1//difficulté de base
}else{
statdiffucult = obj_difficulty.difficulty*6//5 facile au level 500
}

//stat du mobs
bonusdistguys = 0

timechasecombat = 0

if mode2 = 1 {//FLINGUE
hpmobs = (1 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow //2 etait correct // 1 plus que bien // 0.5 quasi parfait
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.2/dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)//120 pas beaucoup de vie surtout si on compte les armes les talent et les ajout mods
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 2 {//Shootgun
xbulletplace = 0
ybulletplace = 11
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 3 {//assaut
xbulletplace = 0
ybulletplace = 17
hpmobs = (2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5.5+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 4 {//rafale
xbulletplace = 0
ybulletplace = 17
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6.5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 5 {//TANKGUYS m 240
xbulletplace = 0
ybulletplace = 15
hpmobs = (10 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4+random_range(-1,1)
dgt = ((0.35 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 6 {//GUN GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 4
hpmobs = (4 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 7+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)

}

if mode2 = 7 {//ASSAUT GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 17
hpmobs = (3 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6.5+random_range(-1,1)
dgt = ((0.4 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 8 {//SHOOTGUN GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 15
hpmobs = (5 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 9 {//TANK GUYS IA AMELIORER
xbulletplace = 0
ybulletplace = 17
hpmobs = (11 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4+random_range(-1,1)
dgt = ((0.4 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 10 {//LANCE FLAME
xbulletplace = 0
ybulletplace = 15
hpmobs = (7 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 12 {//explo guys
hpmobs = (2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 9.5+random_range(-1,1)
dgt = ((0.01 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 13 {//arc guys
xbulletplace = 0
ybulletplace = 4
hpmobs = (4 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 8.5+random_range(-1,1)
dgt = ((0.5 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 600
}

if mode2 = 14 {//double uzi
hpmobs = (5 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}


if mode2 = 15 {//guys shield and ak 107
xbulletplace = 0
ybulletplace = 17
hpmobs = (15 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 3.5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 16 {//lance rocket guy
xbulletplace = 0
ybulletplace = 4
hpmobs = (6 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4.5+random_range(-1,1)
dgt = ((1 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 500
}





tirdeloin = 0
distance = 0

stopexp = 0

tir = 0
rechargementson = 0
image_speed = 0.08;








//LANCEFLAME PARTICLE
if mode2 = 10 {//LANCE FLAME
colororange = make_color_rgb(255,143,5)
Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,-100000)
part_type_shape(particle1,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
//part_type_color3(particle1,33023,255,33023);//33023,255,65535);
part_type_alpha2(particle1,0.1,0.9);
part_type_scale(particle1,1,0.6);
part_type_gravity(particle1,0,270);
part_type_life(particle1,12,22);
part_type_blend(particle1,1);
}
/// blood system
/*
partblood_sys = part_system_create();

//blood particle
partblood = part_type_create();
part_type_shape(partblood,pt_shape_disk);
part_type_size(partblood,0.20,0.20,-0.01,0);
part_type_color1(partblood,250);
part_type_alpha2(partblood,1,1);
part_type_speed(partblood,1,2,0,0);
part_type_direction(partblood,0,259,0,0);
part_type_gravity(partblood,0.3,270);
part_type_blend(partblood,1);
part_type_life(partblood,15,30);

//create emitter
partblood_emit = part_emitter_create(partblood_sys);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(choose(random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360) ,360 ), enemyspeed/1.5/ fpsmax )

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nouvel_angle=direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mobs suient encore un peu apres perdu de vue
if (point_distance(x, y, player_x, player_y) &gt; 350)  {
nouvel_angle=direction
    patrol = 1
    }
    path_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///strop tir de loin
tirdeloin = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///system de collision


if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
    vspeed=0;
}

if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}



/*
// Check for Horizontal Solids
if(!place_meeting(x+hspeed,y,obj_wall) == false){
  if(hspeed &lt;= 0){
    move_contact_all(180,abs(hspeed));
     
  }
  if(hspeed &gt; 0){
    move_contact_all(0,abs(hspeed));
    move_towards_point( x+120, y, 2 );
  }
  hspeed = 0;
}


// Check of Vertical Solids
if(!place_meeting(x,y+vspeed,obj_wall) == false){
  if(vspeed &lt;= 0){
    move_contact_all(90,abs(vspeed));
  }
  if(vspeed &gt; 0){
    move_contact_all(270,abs(vspeed));
    
  }
  vspeed = 0;
  
}


// Check for Horizontal + Vertical Solids
if (!place_meeting(x+hspeed,y+vspeed,obj_wall) == false){
    hspeed = 0;
}



/*
if !place_empty (x-20,y) {
motion_set(choose(15,90), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x+20,y) {
motion_set(choose(180,225), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x,y+20) {
motion_set(choose(90,135), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x,y-20) {
motion_set(choose(360,315), enemyspeed/2)
image_angle = direction
patrol = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
alarm[2] = 5500

obj_zombie.EXP += 10
stopexp = 1

*/

///animation coup de couteau
coterattack = random(360)

if fonce = 1 {
fonce = 0
}else{
fonce = 1
alarm[3] = 300+random(800) //temps pour pouvoir réattaquerz
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tentative de chase a ameliorer !!!
chasedir = image_angle
if not place_free(x-25, y)
//&amp;&amp; place_free(x+15, y)

//&amp;&amp; place_free(x, y+15) 
{
opacity = 0.6}else{opacity = 1}




if not place_free(x, y+25) 

//&amp;&amp; place_free(x, y-15)
//&amp;&amp; place_free(x+15, y)
{
opacity = 0.6}else{opacity = 1}


if not place_free(x, y-25) 
//&amp;&amp; place_free(x-15, y)

//&amp;&amp; place_free(x, y+15)
{
opacity = 0.6}else{opacity = 1}

chasedir2 = choose (1,3,4,5,6,7,2)
if chasedir2 = 1 {
chasedir += (choose(random(-90),random(90)))
}else{
chasedir += (choose(random(-40),random(40)))

}
/*
if not place_free(x+30, y) {
chasedir = 90
}else
if not place_free(x-25, y) {
chasedir = 270
}else
if not place_free(x, y+30) {
chasedir = 180
}else
if not place_free(x, y-30) {
chasedir = 0
}


if not place_free(x+35, y+35) {
move_towards_point(x-10,y-10,4.5)
}else
if not place_free(x-35, y+35) {
move_towards_point(x+10,y-10,4.5)
}else
if not place_free(x+35, y-35) {
move_towards_point(x-10,y+10,4.5)
}else
if not place_free(x-35, y-35) {
move_towards_point(x+10,y+10,4.5)
}

*/



patrol = 1
//motion_set(choose(random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360) ,360 ), enemyspeed/1.5/ fpsmax )
motion_set(chasedir, enemyspeed/1.5/ fpsmax)
nouvel_angle = direction


countaleatcollidir += random(20)
if countaleatcollidir &gt; 1 {






aleatcollidir = (choose(+1,-1))
aleatcollidir2 = (choose(0,0,1))

countaleatcollidir = 0
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_enemy2</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xxend = x
yyend = y

if xxend = xxdebut {
xxmovestep = 0
}else{
if xxend &lt; xxdebut {
xxmovestep = (xxdebut - xxend)
}else{
xxmovestep = (xxend - xxdebut)
}
}

if yyend = yydebut {
yymovestep = 0
}else{
if yyend &lt; yydebut {
xxmovestep = (yydebut - yyend)
}else{
yymovestep = (yyend - yydebut)
}

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(image_angle &lt; 0) image_angle += 360;
tirianet = 0

xxdebut = x
yydebut = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///saveclientia



//net
/*
if startnetia = 1 {
if global.myclientid &lt; 2 {

if clientia1 = 1 {
iaposx1 = x
iaposy1 = y
iadir1 = image_angle
global.iadir1 = iadir1 
global.iaposx1 = iaposx1
global.iaposy1 = iaposy1
global.clientia1 = clientia1



}

if clientia2 = 1 {
iaposx2 = x
iaposy2 = y
iadir2 = image_angle
global.iadir2 = iadir2
global.iaposx2 = iaposx2
global.iaposy2 = iaposy2
global.clientia2 = clientia2
}

if clientia3 = 1 {
iaposx3 = x
iaposy3 = y
iadir3 = image_angle
global.iadir3 = iadir3
global.iaposx3 = iaposx3
global.iaposy3 = iaposy3
global.clientia3 = clientia3
}

if clientia4 = 1 {
iaposx4 = x
iaposy4 = y
iadir4 = image_angle
global.iadir4 = iadir4
global.iaposx4 = iaposx4
global.iaposy4 = iaposy4
global.clientia4 = clientia4
}


if clientia5 = 1 {
iaposx5 = x
iaposy5 = y
iadir5 = image_angle
global.iadir5 = iadir5
global.iaposx5 = iaposx5
global.iaposy5 = iaposy5
global.clientia5 = clientia5
}

if clientia6 = 1 {
iaposx6 = x
iaposy6 = y
iadir6 = image_angle
global.iadir6 = iadir6
global.iaposx6 = iaposx6
global.iaposy6 = iaposy6
global.clientia6 = clientia6
}

if clientia7 = 1 {
iaposx7 = x
iaposy7 = y
iadir7 = image_angle
global.iadir7 = iadir7
global.iaposx7 = iaposx3
global.iaposy7 = iaposy3
global.clientia7 = clientia3
}

if clientia8 = 1 {
iaposx8 = x
iaposy8 = y
iadir8 = image_angle
global.iadir8 = iadir8
global.iaposx8 = iaposx8
global.iaposy8 = iaposy8
global.clientia8 = clientia8
}

if clientia9 = 1 {
iaposx9 = x
iaposy9 = y
iadir9 = image_angle
global.iadir9 = iadir9
global.iaposx9 = iaposx9
global.iaposy9 = iaposy9
global.clientia9 = clientia9
}



}
}
//...
*/

    
    
    //
    //test pour que other client attaque 
    //
    /*
    
    
    
    if instance_exists(oOtherClient) {
    if (point_distance(x, y, obj_zombie.x, obj_zombie.y) &gt; 650)  {
    if hpmobs &lt; 1 {
instance_create(x,y,obj_repop)
instance_destroy()
}

if (point_distance(x, y, oOtherClient.x, oOtherClient.y) &gt; 450) { //nvo 


//image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
}


 if (point_distance(x, y, oOtherClient.x, oOtherClient.y) &lt; 650)  
 &amp;&amp;  (point_distance(x, y, oOtherClient.x, oOtherClient.y) &gt; 150)  //nvo 
 
 
 
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tankneige,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house2,1,1))
  &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house3,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_buisson1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rocher1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tronc,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape03,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape05,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape06,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate0,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate02,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate03,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicle,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house2,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade2,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade3,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade4,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade5,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade6,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade7,1,1))
  &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house12,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house13,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house14,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_eglise,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_houseburn,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridgebroke,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etageafoin,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_housebroke,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_ascensseur,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_comptoir,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_comptoir2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cuisiniere,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cuisiniere2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaisetomber,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cercueil,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tabletorture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_torture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_torture2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_statue,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablepoisson,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tableforgeron,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vaisselle,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablefruit,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_four,1,1)
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_four2,1,1)))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablejeu,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etagerevin,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_burreau,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crucifier,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crucifier2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tenteneige1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tenteneige2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_brouette,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_machineculture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest01,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest02,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest03,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest04,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest05,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest06,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debris1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debris2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_turret1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_turret2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule12,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule13,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule14,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule15,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule16,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule17,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule18,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule19,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule20,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule21,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule23,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule24,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule25,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule26,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule27,1,1))
   
   

 
  {


var mx = (oOtherClient.x div 32)*32+16;
var my = (oOtherClient.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
image_angle =  point_direction(x,y,oOtherClient.x,oOtherClient.y)

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed, path_action_stop, 0);
    
    
    
    
    }
    }
    }
    
    
    }
    
    //}
    
    if (point_distance(x, y, oOtherClient.x, oOtherClient.y) &lt; 200) 
      &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tankneige,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house2,1,1))
  &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house3,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_buisson1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rocher1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tronc,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape03,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape05,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_shape06,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate0,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate02,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crate03,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicle,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house2,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade1,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade2,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade3,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade4,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade5,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade6,1,1))
 &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_barricade7,1,1))
  &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house12,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house13,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_house14,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_eglise,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tente4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_houseburn,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridge5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bridgebroke,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etageafoin,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_housebroke,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_ascensseur,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_comptoir,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_comptoir2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bibliotheque3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cuisiniere,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cuisiniere2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaise3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chaisetomber,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_cercueil,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tabletorture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_torture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_torture2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_statue,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablepoisson,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tableforgeron,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vaisselle,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablefruit,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_four,1,1)
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_four2,1,1)))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tablejeu,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_table11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_etagerevin,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_burreau,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crucifier,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_crucifier2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tenteneige1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_tenteneige2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_brouette,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_machineculture,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debaras8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rock5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockblue7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_rockwhite7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest01,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest02,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest03,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest04,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest05,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_chest06,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_wall4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debris1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_debris2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_spike3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_train5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_avion5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_turret1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_turret2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule1,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule2,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule3,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule4,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule5,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule6,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule7,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule8,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule9,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule10,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule11,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule12,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule13,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule14,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule15,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule16,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule17,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule18,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule19,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule20,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule21,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule23,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule24,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule25,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule26,1,1))
   &amp;&amp; (not collision_line(x,y,oOtherClient.x,oOtherClient.y,obj_vehicule27,1,1))
    
    
    {
    path_end()
    
    } 
    
    
    
    
    else if (point_distance(x, y, oOtherClient.x, oOtherClient.y) &lt; 300)
    {
    var mx = (oOtherClient.x div 32)*32+16;
var my = (oOtherClient.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
image_angle =  point_direction(x,y,oOtherClient.x,oOtherClient.y)

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed, path_action_stop, 0);
    
    
    
    
    }
    }
    }
    }
    
    
    
    
    
    
    
    //tir de loin
    
    if tirdeloin = 1 {
    
    var mx = (oOtherClient.x div 32)*32+16;
var my = (oOtherClient.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
image_angle =  point_direction(x,y,oOtherClient.x,oOtherClient.y)

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed, path_action_stop, false);
    
    }
    }
    }
    }
    
    }
    }
    
    
    
    
    
    */
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ne pas oublier de rajouter collision avec nvo murs
 fpsmax = global.varfpsmax
 
 image_xscale = random_range(0.8,1)
  image_yscale = random_range(0.8,1)
 
 if probflame &gt; 0 {
 probflame -= 1
 }
 
 enemyspeed = 10+random_range(-4,4)
 
 path_set_kind(path, 1)
    path_set_precision(path, 4);//test de precision
    
 

 

 vitessereaction = 1

 
 //temps du couteau
 if tempscut &gt; 0 {
tempscut -= 1
}
 
 
 if hpmobs &lt; 1 {


instance_destroy();
}

 if x&gt;room_width x=room_width;image_angle-=180; if x&lt;0 x=0;image_angle-=180; if y&gt;room_height y=room_height;image_angle-=180; if y&lt;0 y=0;image_angle-=180;
  
      player_x = obj_zombie.x;
player_y = obj_zombie.y;
 
var mx = (obj_zombie.x div 32)*32+16;
var my = (obj_zombie.y div 32)*32+16;


 if mode2 = 6 or mode2 = 7  or mode2 = 8  or mode2 = 9 or mode2 = 13 or mode2 = 16{

  if (point_distance(x, y, player_x, player_y) &lt; 500+bonusdistguys )  
  
 //nvo 
  {
   path_end();
   }else{


//var mx = (obj_zombie.x div 32)*32+16;//
//var my = (obj_zombie.y div 32)*32+16;//+16
var mx = obj_zombie.x ;
var my = obj_zombie.y;

//MORT DE L ENEMI



if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed / fpsmax , path_action_stop, 0);
    //alarm[1] = -1
    
    
    
    }
    }
    }
    }
    
    
   
  
    
    
    
    // tir par rapport a la distance

 if (point_distance(x, y, player_x, player_y) &lt; 650 + bonusdistguys) //&amp;&amp; alarm[0] &lt; 1  //&amp;&amp; tir = 0 
 
 {
 if alarm[0] &lt; 0 {
    alarm[0] = 30 * vitessereaction
    }
    tir = 1
    }
    
    if (point_distance(x, y, player_x, player_y) &gt; 650 + bonusdistguys)  {
    tir = 0
    }else{
    
tir = 1
    }
    
    //fonce sur le joueur
    if fonce =  0 {
    if (point_distance(x, y, player_x, player_y) &lt; 500 + bonusdistguys) &amp;&amp; (point_distance(x, y, player_x, player_y) &gt; 200 + bonusdistguys)  //200 était avant 350 test pour augmenter la balade du mob en combat
  {
  
  var mx = obj_zombie.x+lengthdir_x(40,obj_zombie.image_angle+coterattack) ;
var my = obj_zombie.y+lengthdir_y(40,obj_zombie.image_angle+coterattack);


if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed / fpsmax , path_action_stop, 0);
    //alarm[1] = -1
    if alarm[3] &lt; 0 {
    alarm[3] = 50//temps pour parcourir chemin et anim 100
    }
    }}}
  }
 }
  
  //rester a certaines distance
  


nouvel_angle=point_direction(x, y, player_x, player_y)//A CHANGER SI BUG IMAGE ANGLE
//move_outside_all(0,10)
//move_bounce_solid(true)
if alarm[11] &lt; 0 {
alarm[11] = (45+random(40))*global.varfpsmax
}
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 }else{
 
 //IA BASIQUE
  distancemin = 50
 


// Limitation des mouvements aux extrémités de la room



//move_outside_all(90, 1);

// colision avec joueur proche BIG script
if  (point_distance(x, y, player_x, player_y) &lt; 200)  &amp;&amp; patrol = 1 { 
//patrol = 0
/*
image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
if  place_meeting(x+485, y , obj_zombie) {
move_towards_point(x,y-285,2.5)
}
if  place_meeting(x-485, y, obj_zombie) {
move_towards_point(x,y+285,2.5)
}
if  place_meeting(x, y+485, obj_zombie) {
move_towards_point(x-285,y,2.5)
}
if  place_meeting(x, y-485, obj_zombie) {
move_towards_point(x+285,y,2.5)
}
*/
}


//siflement attire mobs 

 if (keyboard_check(ord("A"))) {
 if (point_distance(x, y, player_x, player_y) &lt; 650) {
 if alarm[8] &lt; 0 {
alarm[8] = 1200
}

}}

//tir atire le mobs
if (point_distance(x, y, player_x, player_y) &lt; 2050) {
if mouse_check_button_pressed(mb_left) {
if obj_zombie.silencenow &lt; 0.1 {

if alarm[8] &lt; 0 {
alarm[8] = 1500
}


}
}



}/*REMIS EN BAS DU SCRIPT
if alarm[8] &gt; 0 {
var mx = (obj_zombie.x div 32)*32+16;
var my = (obj_zombie.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {
if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)

}else{
directionnow = direction
if directionnow &gt; image_angle {
image_angle += 1
}
if directionnow &lt; image_angle {
image_angle -= 1
}


}

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
    path_start(path, enemyspeed /1.2/ global.varfpsmax , path_action_stop, 0);
    alarm[1] = -1
    if (point_distance(x, y, player_x, player_y) &lt; 30) {//stoper si trop prêt ,ajouter le 11/10
    path_end()
   // patrol = 1
    }
    
    
    }}}

}else{
path_end()
patrol = 1
image_angle=direction
}*/ 

/// chase 


    if alarm[1]=-1{//nvo pour colli proche joueur
    alarm[1] = 5+random(30)
    //image_angle=direction
}

if patrol = 1 {
//alarm[5] = 1
}



        // stoper mouvement a la mort
    



/// create the path and move to player
//MORT DE L ENEMI
if hpmobs &lt; 1 {
//instance_create(x,y,obj_repop)
//instance_destroy();
}

if (point_distance(x, y, player_x, player_y) &gt; 450) { //nvo 


//image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
}





//FONCE VERS other MORT SI VOIT
/*
if instance_exists(obj_repop){
mortproche = instance_nearest(x,y,obj_repop)
var dirmort = point_direction(x,y,mortproche.x,mortproche.y);
collivision = mortproche

if abs(angle_difference(dirmort,image_angle)) &lt;= 60 {

    //Whatever in here



 if (point_distance(x, y, mortproche.x, mortproche.y) &lt; 650)  
 &amp;&amp;  (point_distance(x, y, mortproche.x, mortproche.y) &gt; 70)  //nvo 
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tankneige,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_buisson1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rocher1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tronc,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape05,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape06,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate0,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate02,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade4,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade5,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade6,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade7,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_eglise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_houseburn,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridgebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etageafoin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_housebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ascensseur,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaisetomber,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cercueil,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tabletorture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_statue,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablepoisson,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tableforgeron,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vaisselle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablefruit,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four,1,1)
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four2,1,1)))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablejeu,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagerevin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_brouette,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_machineculture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest01,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest02,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest03,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest04,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest05,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest06,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule15,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule16,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule17,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule18,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule19,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule20,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule21,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule23,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule24,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule25,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule26,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule27,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle28,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle29,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle30,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_grillage,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tower,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tentemilitary,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_labotaryitem,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummer,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummerarmed,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_porche,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_policevehicle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bus,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barrel3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_canape,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tv,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wc,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_evier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_duvet,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_baignoire,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_doorbunker,1,1))
//le 30 / 10
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_frigo, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_barrel3,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lavabo,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_banccity3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoirevide,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_arbreneige4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container3,1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_container6,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crategrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, spr_crategrunge8, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreaugrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoiregrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_pianogrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_fueltankgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_generatorgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_structuregrunge,   1,1))
//SL_global_cast_obj( 0, obj_shoppingbasketgrunge,   -1,    1, 1 );
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tobogangrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tobogansnow,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_sofagrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tabouretgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_balancoiresnow, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tvgrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wcgrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_abribus,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_feucirculation,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_panneau1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_panneau4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_poteauelectrique,  1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_ambulancegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_ambulancegrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_camionretournegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_busgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge5, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge5,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge8,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge9,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge10,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge11, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge12, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge13, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge14, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge15, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge16,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge17,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lampemetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_entremetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_lampadaire, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_plot,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_souche,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wallmine,  1,1))
//&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wallinvisible,  1,1))
 {
 
 
 //go path
 if alarm[8] &lt; 0 {
 if pathstopdead = 0 {
 var cx = (mortproche.x div 32)*32+16;
var cy = (mortproche.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, cx, cy ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
image_angle =  point_direction(x,y,mortproche.x,mortproche.y)

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
   path_start(path, enemyspeed /1.2/ global.varfpsmax , path_action_stop, 0);
    if alarm[9]&lt; 0 {
    alarm[9] = 300 //temps de courses et questionement
    }
    alarm[1] = -1 
     //if alarm[8] &lt; 0 {
    //alarm[8] = 350
    //}
    
    
    }
    }
    }
    }//pathstopdead
    }//alarm 8 pour eviter de regarder mort quand il voit joueur
 
 
 }
 
 }

   
 
 }
 
 */
 //instance exists repop






































///test de ouf pour vision de perso
var dir2 = point_direction(x,y,obj_zombie.x,obj_zombie.y);



    
    
    
    
    
    //tir de loin
    
    if tirdeloin = 1 {
    
    var mx = (obj_zombie.x div 32)*32+16;
var my = (obj_zombie.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 /*
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
}else{
image_angle = direction
}*/
alarm[8] = 1500
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE
tirdeloin = 0

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
    path_start(path, enemyspeed /1.2/ global.varfpsmax , path_action_stop, false);
    
    }
    }
    }
    }
    if (point_distance(x, y, player_x, player_y) &lt; 50) {//test pour stoper l ia si trop prêt du joueur
        path_end()//tres fonctionnel pour stoper ia pret du joueur
    patrol = 0
    }
    
    
    
    
  
    
    // shoot et experience
    
    if hpmobs &lt; 0 
{
alarm[0] = 10 * vitessereaction
enemyspeed = 0;
}


if stopexp = 0 {
if hpmobs &lt; 0 {

alarm[3] = 1

}
}

clicdroit = 1

// tir par rapport a la distance /// TIR TIR TIR TIR

 if (point_distance(x, y, player_x, player_y) &lt; 650) &amp;&amp; alarm[0] &lt; 1  //&amp;&amp; tir = 0 
 
 {
 var dir2 = point_direction(x,y,obj_zombie.x,obj_zombie.y);
if abs(angle_difference(dir2,image_angle)) &lt;= 60 {
    alarm[0] = 5 * vitessereaction
    tir = 1
    }
    }
    
    if (point_distance(x, y, player_x, player_y) &gt; 650)  {
    tir = 0
    }else{
    
tir = 1
    }
    
    
    

    /*
    //rajout collision et rajout mask pour eviter bug ia quand zombie contre mur
    
if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
    vspeed=0;
}

if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
*/

//SUPER I A COLLISION PATROL
if patrol = 1 {



/*if not place_free(x+15, y+15){
//move_towards_point(x-1,y-1,5.5)

}else if not place_free(x-15, y+15){
//move_towards_point(x+1,y-1,5.5)
}else if not place_free(x+15, y-15){
//move_towards_point(x-1,y+1,5.5)
}else if not place_free(x-15, y-15){
//move_towards_point(x+1,y+1,5.5)
}else {
*/
/*
if not place_free(x+25, y) 
//&amp;&amp; place_free(x-25, y)
//&amp;&amp; place_free(x, y-25)
&amp;&amp; place_free(x, y+25)
{
move_towards_point(x-aleatcollidir2,y+1,4.5)

}else{
//move_towards_point(x-1,y+1,4.5)
}




if not place_free(x-25, y)
//&amp;&amp; place_free(x+15, y)
&amp;&amp; place_free(x, y-15)
//&amp;&amp; place_free(x, y+15) 
{
move_towards_point(x+aleatcollidir2,y-1,4.5)
}else{
//move_towards_point(x+1,y+1,4.5)
}




if not place_free(x, y+25) 
&amp;&amp; place_free(x-15, y)
//&amp;&amp; place_free(x, y-15)
//&amp;&amp; place_free(x+15, y)
{
move_towards_point(x-1,y-aleatcollidir2,4.5)
}else{
//move_towards_point(x-1,y-1,4.5)
}


if not place_free(x, y-25) 
//&amp;&amp; place_free(x-15, y)
&amp;&amp; place_free(x+15, y)
//&amp;&amp; place_free(x, y+15)
{
move_towards_point(x+1,y+aleatcollidir2,4.5)


}else{
//move_towards_point(x-1,y+1,4.5)
}
//}







if not place_free(x, y) {
move_outside_all(90, 1);
}

*/

//move_bounce_solid(true);
nouvel_angle = direction //A CHANGER SI BUG IMAGE ANGLE
} else {

//image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
}




//alarm8 poursuite
if alarm[8] &gt; 0 {
var mx = (obj_zombie.x div 32)*32+16;
var my = (obj_zombie.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,1)) {
if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE
alarm[10] = -1
}else{
if alarm[10] &lt; 0 {
alarm[10] = 10 
}
/*
directionnow  = (direction)mod 360

if directionnow &gt; image_angle &amp;&amp; directionnow &lt; 344 &amp;&amp; directionnow &gt; 28 {
image_angle += 3
}else{
image_angle = direction
directionnow = image_angle

}

if image_angle &lt; 0 {
image_angle = direction
}
if image_angle &gt; 360 {
image_angle = direction
}*/



}

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
    path_start(path, enemyspeed /1.2/ global.varfpsmax , path_action_stop, 0);
    alarm[1] = -1
    if (point_distance(x, y, player_x, player_y) &lt; 30) {//stoper si trop prêt ,ajouter le 11/10
    path_end()
   // patrol = 1
    }
    
    
    }}}}}


if mode2 = 11 {
 if (point_distance(x, y, player_x, player_y) &lt; 10)  {
 //create_instance(x,y,obj_explosion)
 instance_destroy();
 }


}



//PARALYSIE STUN
if paralyse = 1 {
enemyspeed = 0
paralysetime -= 1
if paralysetime = 0 {
paralyse = 0
paralysetime = 300
}
}else{
if mode2 = 1{ enemyspeed = 8+random_range(-2,6)}
if mode2 = 2{enemyspeed = 5+random_range(-1,1)}
if mode2 = 3{enemyspeed = 5.5+random_range(-1,1)}
if mode2 = 4{enemyspeed = 6.5+random_range(-1,1)}
if mode2 = 5{enemyspeed = 4+random_range(-1,1)}
if mode2 = 6{enemyspeed = 7+random_range(-1,1)}
if mode2 = 7{enemyspeed = 6.5+random_range(-1,1)}
if mode2 = 8{enemyspeed = 6+random_range(-1,1)}
if mode2 = 9{enemyspeed = 4+random_range(-1,1)}
if mode2 = 10{enemyspeed = 5+random_range(-1,1)}
if mode2 = 11{enemyspeed = 9.5+random_range(-1,1)}
//if mode = 12{enemyspeed = 8.5}
if mode2 = 13{enemyspeed = 8.5+random_range(-1,1)}
if mode2 = 14{enemyspeed = 6.5+random_range(-1,1)}
if mode2 = 15{enemyspeed = 4.5+random_range(-1,1)}
}

//temps de ralentissement /////
/*
if tempsralent &lt; timechasecombat {
tempsralent += 1
if tempsralent &gt; (timechasecombat-(200+random_range(-100,100))) {
move_bounce_solid(true)
path_end();
if alarm[11] &lt; 0 {
alarm[11] = 25
}}
}else{
tempsralent = 0


}
*/

//eviter de trop ce raprocher du joueur
/*
if not mode2 = 12 {
if (point_distance(x, y, player_x, player_y) &lt; 170) {
move_bounce_solid(true)
path_end();
if alarm[11] &lt; 0 {
alarm[11] = (5+random(40))*global.varfpsmax
}}
}


//clic joueur
if clicjoueur &gt; 0 {
if clicjoueur = 1 {
alarm[11] = 2*global.varfpsmax
}

if clicjoueur &lt; 30 {
clicjoueur += 1 
move_bounce_solid(true)
path_end();

}else{
clicjoueur = 0
}


}



//EVITER LES OBSTACLES :



if not place_free(x+2, y) {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
path_end();
alarm[11] = 1
alarm[1] = 1
x -= 2
//hspeed = 0

}

if not place_free(x-2, y) {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
path_end();
alarm[11] = 1
alarm[1] = 1
x += 2
//hspeed = 0

}

if not place_free(x, y+2) {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
path_end();
y -= 2
alarm[11] = 1
alarm[1] = 1
//vspeed = 0

}

if not place_free(x, y-2) {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
path_end();
alarm[11] = 1
alarm[1] = 1
y += 2
//vspeed = 0

}*/

 if (point_distance(x, y, player_x, player_y) &gt; 100)  {
if alarm[8] &lt; 800 &amp;&amp; alarm[8] &gt; 700 {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
  var mx = obj_zombie.x+lengthdir_x(40,obj_zombie.image_angle) ;
var my = obj_zombie.y+lengthdir_y(40,obj_zombie.image_angle);
if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {
path_start(path, enemyspeed*1.1 / fpsmax , path_action_stop, 1);
}
}

if alarm[8] &lt; 400 &amp;&amp; alarm[8] &gt; 300 {
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
  var mx = obj_zombie.x+lengthdir_x(40,obj_zombie.image_angle) ;
var my = obj_zombie.y+lengthdir_y(40,obj_zombie.image_angle);
if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {
path_start(path, enemyspeed*1.1 / fpsmax , path_action_stop, 1);
}
}
}



//ANGLE FLUIDE
image_angle += sin(degtorad(nouvel_angle - image_angle)) * (6/global.varfpsmax);//12
//point_direction(x,y,lerp(lengthdir_x(1, obj_zombie.x), lengthdir_x(1, nouvel_angle), 5),
// lerp(lengthdir_y(1, obj_zombie.y), lengthdir_y(1, nouvel_angle), 5))//


//if (place_meeting(x+hspeed,y,solid)) hspeed=0;
//if (place_meeting(x,y+vspeed,solid)) vspeed=0;





/* randomize()

global.solidia = irandom_range(1, 360);

move_outside_solid(global.solidia,100)










/*

//test grid round
var fx = (random(30) div 32)*32+16;
var fy = (random(30) div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, random(30), random(30) ,2)) {


if hpmobs &gt; 0 {

image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed, path_action_stop, false);

    }}







/*
if mp_grid_path(global.grid, global.path, round(self.x div 32) * 32, round(self.y div 32) * 32, round(self.x div 32) * 32, round(self.y div 32) * 32, 1)
    {
        path_start(global.path, 16, 0, 1);
    }
   
    xx2 = x
    yy2 = y
    
    
x = lerp(xx4, xx2, 0.35);
y = lerp(yy4, yy2, 0.35);

xx4 = x
yy4 = y */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[8] &gt; 0 {
framepied = 1.3
}else{
framepied = 1
}
if not xxmovestep = 0 {
movepiedvitessetest += (xxmovestep /4)
}else
if not yymovestep = 0 {
movepiedvitessetest += (yymovestep /4)
}else{
movepiedvitessetest = 0
}
//draw_sprite_ext(spr_walk,movepiedvitessetest,x,y+lengthdir_y(8,image_angle-40),0.85,0.85,image_angle,c_white,1)

if mode2 = 1 or mode2 = 6 or mode2 = 12 or mode2 = 13 or mode2 = 14{//GUN
//sprite_index = spr_shadowmob
sprite_index = spr_ombrecalme
image_index = animwalk
draw_sprite_ext(spr_ombrecalme,animwalk,x,y,1.1,1.1,image_angle,c_white,opacity)
}
if mode2 =2 or mode2 = 8 {//SHOOTGUN
sprite_index = spr_mobfin4
image_index = animwalk
draw_sprite_ext(spr_mobfin4,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =3 or mode2 = 4 or mode2 = 7 or mode2 = 16{//assaut
sprite_index = spr_mobfin2
image_index = animwalk
draw_sprite_ext(spr_mobfin2,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =5 or mode2 = 9 or mode2 = 15{//TANKGUYS
sprite_index = spr_mobfin3
image_index = animwalk
draw_sprite_ext(spr_mobfin3,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}

if mode2 = 10{//LANCEFLAMME
sprite_index = spr_mobfin5
image_index = animwalk
draw_sprite_ext(spr_mobfin5,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}



//draw_self();

future_x = lerp(x, x+hspeed, room_speed);

future_y = lerp(y, y+vspeed, room_speed);


//draw pied
animwalk += 1

if point_distance(x,y,future_x,future_y) &lt; 5 {
//animwalk = 0

}



//draw degat
draw_set_font(fnt_little);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_yellow)



if dgtaffichage &gt; 0 {
if dgtaffichagecount &lt; 160 {
draw_text(x,y - 30,dgtaffichage)
dgtaffichagecount += 1
}else{
dgtaffichage = 0
dgtaffichagecount = 0
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
