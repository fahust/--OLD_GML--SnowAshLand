<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_newmob1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create the path and basic stats enemy
instance_create(x,y,obj_villageois);
instance_destroy();

/*karma = 10
minage = 0
role = 0
cibleenemy = 0
loadframe2 = 0

aterre = 0
headskin = choose(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)


existeco = 0
existeco = obj_economie.population

if not random_range(1,existeco) &lt; 100 {

transporteur = choose (0,0,0,1)


txtpnjtime = 0
txtpnj = ""
cibleteleporttime = 0
cibleteleport = instance_furthest(x,y,obj_repaireteleport)
xcibleteleport = cibleteleport.x
ycibleteleport = cibleteleport.y

randomkitheal = random_range(1000,50000)
randomtorche =  random_range(1000,50000)
soundbucheron = 80
cibleenemy = 0


torchid = 0

alarm12 = 0
 cibleallie = 0
toucherparmoi = 0
       player_x = 0;
player_y =0;

expia = 0

poto = 0
armurepoto = 1

roomstart = 0

poschangepoto = 0

cibleallie = 0 
vitessereaction = 1

probflame = 0

xxdebut = 0
yydebut = 0
xxend = 0
yyend = 0
xxmovestep = 0
yymovestep = 0
movepiedvitessetest = 0

paralyse = 0
animwalk = 0
paralysetime = 300

xbulletplace = 0
ybulletplace = 0

choosearmshoot = 1
idshieldmob = 0

//OPTIMOB
tempsralent = 0
clicjoueur = 0
//

xx4 = 0
yy4 = 0


tirianet = 0
tirianet2 = 0

//mode2 = choose(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,4,4,4,5,5,6,7,8,9,10,12,13,14,15,16)
mode2 = 2
difficulty = obj_difficulty.difficulty

idpoto = global.potonameplus //floor(random_range(1,50))
if global.potonameplus = 50 {global.potonameplus = 1}else{
global.potonameplus += 1
}
//idpoto = 0
nameia = 0
levelpoto = 1


 //NAME IA A METTRE AUSSI DANS ALARM 9 !!!!

 if idpoto &gt; 25 {
 mode2 = 2
 }else{
 mode2 = 3
 }
 
 if idpoto = obj_controllerstalker.potonow {instance_destroy();}

 
 

mode2 = choose(3,2,7)
tirrafale = 0

aleatexplo = 0

tempscut = 0

coterattack = 0
fonce = 0

dgtaffichage = 0
dgtaffichagecount = 0

path = path_add();
path2 = path_add();
patrol = 1
chasedir = random(360)
aleatcollidir = 1
countaleatcollidir = 1
aleatcollidir2 = 0
//suis les mort
pathstopdead = 0

idcreateur = id


//pour arreter de casser les couilles avec buh
clientia1 = 0
clientia2 = 0
clientia3 = 0
clientia4 = 0
clientia5 = 0
clientia6 = 0
clientia7 = 0
clientia8 = 0
clientia9 = 0
//



//net
startnetia = 0
alarm[7] = 10


//clientia1 = 0
//clientia2 = 0
//clientia3 = 0

iaposx1 = 0
iaposy1 = 0
iaposx2 = 0
iaposy2 = 0
iaposx3 = 0
iaposy3 = 0
iaposx4 = 0
iaposy4 = 0
iaposx5 = 0
iaposy5 = 0
iaposx6 = 0
iaposy6 = 0
iaposx7 = 0
iaposy7 = 0
iaposx8 = 0
iaposy8 = 0
iaposx9 = 0
iaposy9 = 0

//direction douce
directionnow = 0

dgtbonuslow = 1
if obj_zombie.level &lt; 4 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 7 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 10 {
dgtbonuslow = 1.3
}else if obj_zombie.level &lt; 15 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 20 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 25 {
dgtbonuslow = 1.8
}else if obj_zombie.level &lt; 30 {
dgtbonuslow = 1.6
}else if obj_zombie.level &lt; 35 {
dgtbonuslow = 1.4
}else if obj_zombie.level &lt; 40 {
dgtbonuslow = 1.2
}else if obj_zombie.level &lt; 45 {
dgtbonuslow = 1.1
}else if obj_zombie.level &lt; 50 {
dgtbonuslow = 1
}



dgtbonuslow2 = 1
if obj_zombie.level &lt; 4 {
dgtbonuslow2 = 9.05
}else if obj_zombie.level &lt; 7 {
dgtbonuslow2 = 8.2
}else if obj_zombie.level &lt; 10 {
dgtbonuslow2 = 7.5
}else if obj_zombie.level &lt; 15 {
dgtbonuslow2 = 7.2
}else if obj_zombie.level &lt; 20 {
dgtbonuslow2 = 6.75
}else if obj_zombie.level &lt; 25 {
dgtbonuslow2 = 6.2
}else if obj_zombie.level &lt; 30 {
dgtbonuslow2 = 5.75
}else if obj_zombie.level &lt; 35 {
dgtbonuslow2 = 5.20
}else if obj_zombie.level &lt; 40 {
dgtbonuslow2 = 4.15
}else if obj_zombie.level &lt; 45 {
dgtbonuslow2 = 3.1
}else if obj_zombie.level &lt; 50 {
dgtbonuslow2 = 2
}

//reglage difficulté
if obj_difficulty.difficulty = 1 {
statdiffucult = 1//difficulté de base
}else{
statdiffucult = obj_difficulty.difficulty*6//5 facile au level 500
}

//stat du mobs
bonusdistguys = 0

timechasecombat = 0



if mode2 = 2 {//Shootgun
xbulletplace = 0
ybulletplace = 17
hpmobs = ((0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow )*(1+levelpoto/20)//12
maxhpmobs = hpmobs
enemyspeed = 5.5+random_range(-1,1)
dgt = ((0.4 *dgtbonuslow2) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 3 {//assaut
xbulletplace = 0
ybulletplace = 17
hpmobs = ((0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow )*(1+levelpoto/20)//10
maxhpmobs = hpmobs
enemyspeed = 5.5+random_range(-1,1)
dgt = ((0.6 *dgtbonuslow2) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 7 {//assaut
xbulletplace = 0
ybulletplace = 17
hpmobs = ((0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow )*(1+levelpoto/20)//10
maxhpmobs = hpmobs
enemyspeed = 5.5+random_range(-1,1)
dgt = ((0.6 *dgtbonuslow2) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}



if mode2 = 5 {//TANKGUYS m 240
xbulletplace = 0
ybulletplace = 15
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4+random_range(-1,1)
dgt = ((0.35 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}



if mode2 = 10 {//LANCE FLAME
xbulletplace = 0
ybulletplace = 15
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 12 {//explo guys
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 9.5+random_range(-1,1)
dgt = ((0.01 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
}

if mode2 = 13 {//arc guys
xbulletplace = 0
ybulletplace = 4
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 8.5+random_range(-1,1)
dgt = ((0.5 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 600
}

if mode2 = 14 {//double uzi
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 6+random_range(-1,1)
dgt = ((0.3 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}


if mode2 = 15 {//guys shield and ak 107
xbulletplace = 0
ybulletplace = 17
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 3.5+random_range(-1,1)
dgt = ((0.2 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 400
timechasecombat = 500+random_range(-100,100)
}

if mode2 = 16 {//lance rocket guy
xbulletplace = 0
ybulletplace = 4
hpmobs = (0.2 * (obj_zombie.level+1 / 0.2))*(statdiffucult) /dgtbonuslow
maxhpmobs = hpmobs
enemyspeed = 4.5+random_range(-1,1)
dgt = ((1 /dgtbonuslow) * (obj_zombie.level+20 / 80))*(statdiffucult)
bonusdistguys = 500
}





tirdeloin = 0
distance = 0

stopexp = 0

tir = 0
rechargementson = 0
image_speed = 0.08;








//LANCEFLAME PARTICLE
if mode2 = 10 {//LANCE FLAME
colororange = make_color_rgb(255,143,5)
Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,-100000)
part_type_shape(particle1,pt_shape_flare);
//part_type_size(particle1,0.3,0.35,0.05,0);//0.3,0.4,0.1,);
//part_type_speed(particle1,9,19,0.01,0);//,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
//part_type_color3(particle1,33023,255,33023);//33023,255,65535);
part_type_alpha2(particle1,0.1,0.9);
part_type_scale(particle1,1,0.6);
part_type_gravity(particle1,0,270);
part_type_life(particle1,12,22);
part_type_blend(particle1,1);
}
}else{instance_destroy();}
/// blood system
/*
partblood_sys = part_system_create();

//blood particle
partblood = part_type_create();
part_type_shape(partblood,pt_shape_disk);
part_type_size(partblood,0.20,0.20,-0.01,0);
part_type_color1(partblood,250);
part_type_alpha2(partblood,1,1);
part_type_speed(partblood,1,2,0,0);
part_type_direction(partblood,0,259,0,0);
part_type_gravity(partblood,0.3,270);
part_type_blend(partblood,1);
part_type_life(partblood,15,30);

//create emitter
partblood_emit = part_emitter_create(partblood_sys);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_clear_alpha( c_white, 0);


/*
part_type_destroy(partblood);
part_emitter_destroy(partblood, partblood_emit);
part_system_destroy(partblood_sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(choose(random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360) ,360 ), enemyspeed/1.5/ fpsmax )

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nouvel_angle=direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pathstopdead = 1

if role = 3{

 if instance_exists(cibleallie){
 if transporteur = 1 {cibleallie = cibleenemy}
//TEST
        
//TEST
 if instance_exists(cibleallie){
var dir2 = point_direction(x,y,cibleallie.x,cibleallie.y);
}

//if paralyse = 0 {

if mode2 = 1 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 2 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(30,image_angle-30)
}
if mode2 = 3 {
xbulletplace = lengthdir_x(30,image_angle-30)
ybulletplace = lengthdir_y(35,image_angle-30)
}
if mode2 = 4 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(25,image_angle-30)
}
if mode2 = 5 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 6 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 7 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(25,image_angle-30)
}
if mode2 = 8 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(30,image_angle-30)
}
if mode2 = 9 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 10 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(20,image_angle-30)
}
if mode2 = 13 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 14 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 15 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 16 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
/*
if mode2 = 14 {
xbulletplace = lengthdir_x(0,image_angle+30)
ybulletplace = lengthdir_y(4,image_angle+30)
}
if mode2 = 15 {
xbulletplace = lengthdir_x(0,image_angle+30)
ybulletplace = lengthdir_y(4,image_angle+30)
}
*/






 if instance_exists(cibleallie){
var dir2 = point_direction(x,y,cibleallie.x,cibleallie.y);


if abs(angle_difference(dir2,image_angle)) &lt;= 35 {
if (point_distance(x, y, player_x, player_y) &lt; 550 + bonusdistguys) 

{
///frequence de tir
//alarm[0] = 80 * global.varfpsmax *  vitessereaction
collivision = cibleallie
if (!collision_line(x,y,cibleallie.x,cibleallie.y,obj_wall,1,1)) 



{alarm[4] = 75
///instance_create ( x+50,y+50,obj_bullet_enemy)





var ex, ey;
ex = cibleallie.x;
ey = cibleallie.y;
if obj_zombie.hp &gt; 0 {



//firebullet


          dir = image_angle

         //BULLET SHOOTGUN
         
         //BULLET SHOOTGUN
         if mode2 = 2 {audio_sound_gain(snd_jackhammer, 0.5, 0);
         audio_play_sound_at(snd_jackhammer, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1);
   
         /*with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
   shootgun = 1
 
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)

dgt = other.dgt
    
   direction = other.dir+5;
   }*/
   ///multi shoot
   /*
   with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
   shootgun = 1
        dgt = other.dgt
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)

   direction = other.dir+2;
   }
   
    ///multi shoot
   
   with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
   shootgun = 1
        dgt = other.dgt
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)

   direction = other.dir;
   }
   
    ///multi shoot
   
   with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
   shootgun = 1
       dgt = other.dgt
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)

   direction = other.dir-2;
   }
   
   
    ///multi shoot
   
   with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
   shootgun = 1
        dgt = other.dgt
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)

   direction = other.dir-5;
   }
   alarm[9] = 25+random(50) * fpsmax * vitessereaction
       
         
         
         
         }

         
         //BULLET ASSAUT
         if mode2 = 3 {
         //FUMEE
         with (instance_create(x+xbulletplace+lengthdir_x(50,image_angle), y+ybulletplace-25+lengthdir_y(50,image_angle),obj_firebulletenemy))
        {
        xbulletplace = other.xbulletplace
        ybulletplace = other.ybulletplace
        idcreateur = other.id
        image_angle = other.image_angle;
        }
        
        with (instance_create(x+xbulletplace+lengthdir_x(50,image_angle), y+ybulletplace-25+lengthdir_y(50,image_angle),obj_tirfume))
        {
        xbulletplace = other.xbulletplace
        ybulletplace = other.ybulletplace
        idcreateur = other.id
        image_angle = other.image_angle;//point_direction(x, y, ex, ey);
        }
         
         
         
         
         //BALLE
         with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
        audio_play_sound_at(snd_aug, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1);
        dgt = other.dgt
//move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)
         direction = other.image_angle//point_direction(x, y, other.cibleallie.x, other.cibleallie.y);
        
         }
         
         alarm[9] = (7+random(24))*fpsmax //* vitessereaction
         }
        
         if mode2 = 15 {//SHIELD GUYS
         
          
         
         with (instance_create(x+xbulletplace, y+ybulletplace+20, obj_bullet_enemy))

   {
   randomrange = random_range(-1,1)
        audio_play_sound_at(snd_ak107, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1);
        dgt = other.dgt
move_towards_point(other.cibleallie.x+randomrange,other.cibleallie.y+randomrange,70/global.varfpsmax)
         direction = other.image_angle+randomrange;
        
         
         
         
         
         }
         
         
*///alarm[0] = (16+random(4))*fpsmax * vitessereaction
         }
         
         
        
         
         
         
         
         
         
         //FINIBULLET
         
         
        

    
    

  
   
   

}
   }

}

}


}



 

 //NAME IA A METTRE AUSSI DANS ALARM 9 !!!!
 if idpoto = 1 {nameia = "Kenneth A. Arredondo";levelpoto = obj_controllerstalker.mode1}//americain
 if idpoto = 2 {nameia = "Jack P. Obrien";levelpoto = obj_controllerstalker.mode2}
 if idpoto = 3 {nameia = "John R. Bollin";levelpoto = obj_controllerstalker.mode3}
 if idpoto = 4 {nameia = "Jerome K. Linton";levelpoto = obj_controllerstalker.mode4}
 if idpoto = 5 {nameia = "Robert E. Petitt";levelpoto = obj_controllerstalker.mode5}
 if idpoto = 6 {nameia = "James S. Olivarez";levelpoto = obj_controllerstalker.mode6}
 if idpoto = 7 {nameia = "George C. Dinger";levelpoto = obj_controllerstalker.mode7}//francais
 if idpoto = 8 {nameia = "Florismart Lafrenière";levelpoto = obj_controllerstalker.mode8}
 if idpoto = 9 {nameia = "Bruce Rochon";levelpoto = obj_controllerstalker.mode9}
 if idpoto = 10 {nameia = "Patrick Gagné";levelpoto = obj_controllerstalker.mode10}
 if idpoto = 11 {nameia = "Raymond Marcheterre";levelpoto = obj_controllerstalker.mode11}
 if idpoto = 12 {nameia = "Marcel Hétu";levelpoto = obj_controllerstalker.mode12}
 if idpoto = 13 {nameia = "Faustin Bordeaux";levelpoto = obj_controllerstalker.mode13}
 if idpoto = 14 {nameia = "Iven Beausoleil";levelpoto = obj_controllerstalker.mode14}
 if idpoto = 15 {nameia = "Pascal Bonenfant";levelpoto = obj_controllerstalker.mode15}
 if idpoto = 16 {nameia = "Nestor Degtyarev";levelpoto = obj_controllerstalker.mode16}//russe
 if idpoto = 17 {nameia = "Vitaly Zhirov";levelpoto = obj_controllerstalker.mode17}
 if idpoto = 18 {nameia = "Polycarp Konovalov";levelpoto = obj_controllerstalker.mode18}
 if idpoto = 19 {nameia = "Hilarion Bezrukov";levelpoto = obj_controllerstalker.mode19}
 if idpoto = 20 {nameia = "Sergey Bezrukov";levelpoto = obj_controllerstalker.mode20}
 if idpoto = 21 {nameia = "Borislav Isayev";levelpoto = obj_controllerstalker.mode21}
 if idpoto = 22 {nameia = "Terence Yermolayev";levelpoto = obj_controllerstalker.mode22}
 if idpoto = 23 {nameia = "David Yermakov";levelpoto = obj_controllerstalker.mode23}
 if idpoto = 24 {nameia = "Ian Belov";levelpoto = obj_controllerstalker.mode24}
 if idpoto = 25 {nameia = "Nazareno Cruz Serrato";levelpoto = obj_controllerstalker.mode25}//espagne
 if idpoto = 26 {nameia = "Demóstenes Barreto León";levelpoto = obj_controllerstalker.mode26}
 if idpoto = 27 {nameia = "Joan Rivas Mascarenas";levelpoto = obj_controllerstalker.mode27}
 if idpoto = 28 {nameia = "Bacchus Lira Valadez";levelpoto = obj_controllerstalker.mode28}
 if idpoto = 29 {nameia = "Atilio Valadez Cepeda";levelpoto = obj_controllerstalker.mode29}
 if idpoto = 30 {nameia = "Tadeo Domínquez Montoya";levelpoto = obj_controllerstalker.mode30}
 if idpoto = 31 {nameia = "Fulbert Caldera Morales";levelpoto = obj_controllerstalker.mode31}
 if idpoto = 32 {nameia = "Hartman Nieves Flórez";levelpoto = obj_controllerstalker.mode32}
 if idpoto = 33 {nameia = "Tao Yuan";levelpoto = obj_controllerstalker.mode33}//chinois
 if idpoto = 34 {nameia = "Shi Ch'eng";levelpoto = obj_controllerstalker.mode34}
 if idpoto = 35 {nameia = "Shaiming Hsieh";levelpoto = obj_controllerstalker.mode35}
 if idpoto = 36 {nameia = "Liang Su";levelpoto = obj_controllerstalker.mode36}
 if idpoto = 37 {nameia = "Tao Tsao";levelpoto = obj_controllerstalker.mode37}
 if idpoto = 38 {nameia = "Wu Yang";levelpoto = obj_controllerstalker.mode38}
 if idpoto = 39 {nameia = "Jie Chou";levelpoto = obj_controllerstalker.mode39}
 if idpoto = 40 {nameia = "Khairy Tawhid Naser";levelpoto = obj_controllerstalker.mode40}//arabe
 if idpoto = 41 {nameia = "Abdul-Aziz Taym Allah Aswad";levelpoto = obj_controllerstalker.mode41}
 if idpoto = 42 {nameia = "Bahiyy al Din Shahin Shadid";levelpoto = obj_controllerstalker.mode42}
 if idpoto = 43 {nameia = "Ma'n Saif Baz";levelpoto = obj_controllerstalker.mode43}
 if idpoto = 44 {nameia = "Baha al Din Fida Gerges";levelpoto = obj_controllerstalker.mode44}
 if idpoto = 45 {nameia = "Ihsan Nadir Mifsud";levelpoto = obj_controllerstalker.mode45}
 if idpoto = 46 {nameia = "Wahid Khalis Haddad";levelpoto = obj_controllerstalker.mode46}
 if idpoto = 47 {nameia = "Amin Safwah Nader";levelpoto = obj_controllerstalker.mode47}
 if idpoto = 48 {nameia = "Luciano Cremonesi";levelpoto = obj_controllerstalker.mode48}//italien
 if idpoto = 49 {nameia = "Fosco Siciliano";levelpoto = obj_controllerstalker.mode49}
 if idpoto = 50 {nameia = "Efisio Sal";levelpoto = obj_controllerstalker.mode50}
 
 levelpoto = armurepoto
}}
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mobs suient encore un peu apres perdu de vue
if (point_distance(x, y, player_x, player_y) &gt; 350)  {
nouvel_angle=direction
    patrol = 1
    }
    if transporteur = 0 {path_end()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startnetia = 1

cibleteleport = instance_furthest(x,y,obj_repaireteleport)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///strop tir de loin
tirdeloin = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///system de collision


if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));}
    vspeed=0;
}

if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}



/*
// Check for Horizontal Solids
if(!place_meeting(x+hspeed,y,obj_wall) == false){
  if(hspeed &lt;= 0){
    move_contact_all(180,abs(hspeed));
     
  }
  if(hspeed &gt; 0){
    move_contact_all(0,abs(hspeed));
    move_towards_point( x+120, y, 2 );
  }
  hspeed = 0;
}


// Check of Vertical Solids
if(!place_meeting(x,y+vspeed,obj_wall) == false){
  if(vspeed &lt;= 0){
    move_contact_all(90,abs(vspeed));
  }
  if(vspeed &gt; 0){
    move_contact_all(270,abs(vspeed));
    
  }
  vspeed = 0;
  
}


// Check for Horizontal + Vertical Solids
if (!place_meeting(x+hspeed,y+vspeed,obj_wall) == false){
    hspeed = 0;
}



/*
if !place_empty (x-20,y) {
motion_set(choose(15,90), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x+20,y) {
motion_set(choose(180,225), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x,y+20) {
motion_set(choose(90,135), enemyspeed/2)
image_angle = direction
patrol = 0
}

if !place_empty (x,y-20) {
motion_set(choose(360,315), enemyspeed/2)
image_angle = direction
patrol = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

audio_play_sound(snd_rechargement_fusil_un_coup,0,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
alarm[2] = 5500

obj_zombie.EXP += 10
stopexp = 1

*/

///animation coup de couteau
coterattack = random(360)

if fonce = 1 {
fonce = 0
}else{
fonce = 1
alarm[3] = 300+random(800) //temps pour pouvoir réattaquerz
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///resurection



if hpmobs = 100 {
enemyspeed = 1.3;
stopexp = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tentative de chase a ameliorer !!!
chasedir = image_angle
chasedir += (choose(random(-30),random(30)))
if not place_free(x+30, y) {
chasedir = 90
}else
if not place_free(x-25, y) {
chasedir = 270
}else
if not place_free(x, y+30) {
chasedir = 180
}else
if not place_free(x, y-30) {
chasedir = 0
}


if not place_free(x+35, y+35) {
move_towards_point(x-10,y-10,4.5)
}else
if not place_free(x-35, y+35) {
move_towards_point(x+10,y-10,4.5)
}else
if not place_free(x+35, y-35) {
move_towards_point(x-10,y+10,4.5)
}else
if not place_free(x-35, y-35) {
move_towards_point(x+10,y+10,4.5)
}





patrol = 1
//motion_set(choose(random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360) ,360 ), enemyspeed/1.5/ fpsmax )
motion_set(chasedir, enemyspeed/1.5/ fpsmax)
nouvel_angle = direction


countaleatcollidir += random(20)
if countaleatcollidir &gt; 1 {






aleatcollidir = (choose(+1,-1))
aleatcollidir2 = (choose(0,0,1))

countaleatcollidir = 0
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
///tir de l'enemi rajouter les collisions des balles
if instance_exists(obj_enemy2){
cibleallie = instance_nearest(x,y,obj_enemy2)
       player_x = cibleallie.x;
player_y =cibleallie.y;
if instance_exists(cibleallie){
//TEST
         if mode2 = 3 {
         with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_stalker))

   {
        audio_play_sound(snd_m16a1,0,0)
        dgt = other.dgt
        cibleallie = other.cibleallie
//move_towards_point(cibleallie.x,cibleallie.y,70/global.varfpsmax)
         direction = point_direction(other.x, other.y, cibleallie.x, cibleallie.y);
        
         }
         
         alarm[0] = (12+random(4))*fpsmax //* vitessereaction
         }
//TEST

var dir2 = point_direction(x,y,cibleallie.x,cibleallie.y);

//if paralyse = 0 {

if mode2 = 1 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 2 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(30,image_angle-30)
}
if mode2 = 3 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(25,image_angle-30)
}
if mode2 = 4 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(25,image_angle-30)
}
if mode2 = 5 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 6 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 7 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(25,image_angle-30)
}
if mode2 = 8 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(30,image_angle-30)
}
if mode2 = 9 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 10 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(20,image_angle-30)
}
if mode2 = 13 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 14 {
xbulletplace = lengthdir_x(0,image_angle-30)
ybulletplace = lengthdir_y(8,image_angle-30)
}
if mode2 = 15 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}
if mode2 = 16 {
xbulletplace = lengthdir_x(0,image_angle-40)
ybulletplace = lengthdir_y(30,image_angle-40)
}








if abs(angle_difference(dir2,image_angle)) &lt;= 65 {
if (point_distance(x, y, player_x, player_y) &lt; 550 + bonusdistguys) 

{
///frequence de tir
//alarm[0] = 80 * global.varfpsmax *  vitessereaction
collivision = cibleallie
if (!collision_line(x,y,cibleallie.x,cibleallie.y,obj_wall,1,1)) 

&amp;&amp; (not collision_line(x,y,cibleallie.x,cibleallie.y,oOtherClient,1,1)) //nvo pr net

    &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tankneige,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_buisson1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rocher1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tronc,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape05,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape06,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate0,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate02,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade4,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade5,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade6,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade7,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_eglise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_houseburn,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridgebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etageafoin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_housebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ascensseur,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaisetomber,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cercueil,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tabletorture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_statue,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablepoisson,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tableforgeron,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vaisselle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablefruit,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four,1,1)
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four2,1,1)))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablejeu,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagerevin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_brouette,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_machineculture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest01,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest02,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest03,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest04,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest05,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest06,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule15,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule16,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule17,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule18,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule19,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule20,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule21,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule23,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule24,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule25,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule26,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule27,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle28,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle29,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle30,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_grillage,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tower,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tentemilitary,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_labotaryitem,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummer,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummerarmed,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_porche,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_policevehicle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bus,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barrel3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_canape,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tv,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wc,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_evier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_duvet,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_baignoire,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_doorbunker,1,1))
//le 30 / 10
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_frigo, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_barrel3,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lavabo,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_banccity3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoirevide,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_arbreneige4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container3,1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_container6,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crategrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, spr_crategrunge8, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreaugrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoiregrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_pianogrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_fueltankgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_generatorgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_structuregrunge,   1,1))
//SL_global_cast_obj( 0, obj_shoppingbasketgrunge,   -1,    1, 1 );
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tobogangrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tobogansnow,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_sofagrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tabouretgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_balancoiresnow, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tvgrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wcgrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_abribus,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_feucirculation,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_panneau1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_panneau4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_poteauelectrique,  1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_ambulancegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_ambulancegrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_camionretournegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_busgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge5, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge5,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge8,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge9,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge10,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge11, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge12, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge13, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge14, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge15, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge16,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge17,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lampemetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_entremetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_lampadaire, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_plot,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_souche,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wallmine,  1,1))


&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge18,    1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge19,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge20,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge21,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge22,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge23,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge24,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge25,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge26,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge27,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge28,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge29,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge30,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge31,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge32,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge33,         1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge34,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge35,    1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge36,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge37,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge38,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge39,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge40,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge41,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge42,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_vehiculegrunge43,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge44,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge45,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge46,       1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge7,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge8,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_busgrunge2,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_busgrunge3,         1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_grue,        1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_helico,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_fusee,       1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_portemissile,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_benne,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_barremetal,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_missilelauncher,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_nukeetsocle,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_nuke,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_tourellearmy1,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tourellearmy2,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tourellearmy3,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_ordimuro,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cadi,       1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_btr70body,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_btr80body,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_challengerbody,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_pzkbody,      1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tigerbody,     1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_turanbody,       1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_zsubody,       1,1))

   



{alarm[4] = 75
///instance_create ( x+50,y+50,obj_bullet_enemy)





var ex, ey;
ex = cibleallie.x;
ey = cibleallie.y;
if obj_zombie.hp &gt; 0 {



//firebullet


          dir = image_angle

         //BULLET SHOOTGUN

         
         //BULLET ASSAUT
         if mode2 = 3 {
         with (instance_create(x+xbulletplace, y+ybulletplace, obj_bullet_enemy))

   {
        audio_play_sound(snd_m16a1,0,0)
        dgt = other.dgt
move_towards_point(other.cibleallie.x,other.cibleallie.y,70/global.varfpsmax)
         direction = point_direction(x, y, other.cibleallie.x, other.cibleallie.y);
        
         }
         
         alarm[0] = (12+random(4))*fpsmax //* vitessereaction
         }
        
         if mode2 = 15 {//SHIELD GUYS
         
          
         
         with (instance_create(x+xbulletplace, y+ybulletplace+20, obj_bullet_enemy))

   {
   randomrange = random_range(-1,1)
        audio_play_sound(snd_ak107,0,0)
        dgt = other.dgt
move_towards_point(other.cibleallie.x+randomrange,other.cibleallie.y+randomrange,70/global.varfpsmax)
         direction = other.image_angle+randomrange;
        
         
         
         
         
         }
         
         alarm[0] = (16+random(4))*fpsmax * vitessereaction
         }
         
         
        
         
         
         
         
         
         
         //FINIBULLET
         
         
        

    
    

  
   
   


}
   }

}

}


}}
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xxend = x
yyend = y

if xxend = xxdebut {
xxmovestep = 0
}else{
if xxend &lt; xxdebut {
xxmovestep = (xxdebut - xxend)
}else{
xxmovestep = (xxend - xxdebut)
}
}

if yyend = yydebut {
yymovestep = 0
}else{
if yyend &lt; yydebut {
xxmovestep = (yydebut - yyend)
}else{
yymovestep = (yyend - yydebut)
}

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if(image_angle &lt; 0) image_angle += 360;
//tirianet = 0

xxdebut = x
yydebut = y


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ne pas oublier de rajouter collision avec nvo murs
 fpsmax = global.varfpsmax
 /*
 if cibleteleporttime &lt; 1500 {
 cibleteleport = instance_furthest(x,y,obj_teleport1)}else{
 cibleteleporttime += 1
 }*/
 
  if probflame &gt; 0 {
 probflame -= 1
 }
 

 //replacer a coter du hero en debut de room
 if roomstart &gt; 0 {
 instance_activate_object(id)
 x = obj_zombie.x+25
 y = obj_zombie.y+25
 if roomstart &lt; 30 {roomstart += 1 }else{roomstart = 0}
 }//
 

 //entendre les balles
 if instance_exists(obj_bullet_enemy) or instance_exists(obj_arrow_enemy)or
 instance_exists(obj_rocketfinal){
 alarm[8] = 500
 }//
 

 

 
 
  //MORT
 if hpmobs &lt; 1 {
 if poto = 1 {
obj_controllerstalker.potonow = 0
global.poto = 0
}
 if mode2 = 10 or mode2 = 16
 {
 with(instance_create(x,y,obj_weaponloot)){
 mode2 = other.mode2
 }}
with(instance_create(x,y,obj_repopstalker)) {

alarm[3] = 10
toucherparmoi = other.toucherparmoi
other.idrepop2 = id
mode2 = other.mode2
difficulty = other.difficulty
}
idrepop2.modedraw = mode2
instance_destroy();
}
 
 
 
 //PATROL !!!!
 //SUPER I A COLLISION PATROL
 
 
 


 if poto = 0 {
 if transporteur = 0 {
if patrol = 1 {
if alarm[11] &lt; 0 {
 alarm[11] = 42+random(70)*global.varfpsmax}
if alarm[1] &lt; 0 { alarm[1] = 42+random(70)*global.varfpsmax}
 


if not place_free(x+25, y) 
//&amp;&amp; place_free(x-25, y)
//&amp;&amp; place_free(x, y-25)
&amp;&amp; place_free(x, y+25)
{
move_towards_point(x-aleatcollidir2,y+1,4.5)

}else{
//move_towards_point(x-1,y+1,4.5)
}




if not place_free(x-25, y)
//&amp;&amp; place_free(x+15, y)
&amp;&amp; place_free(x, y-15)
//&amp;&amp; place_free(x, y+15) 
{
move_towards_point(x+aleatcollidir2,y-1,4.5)
}else{
//move_towards_point(x+1,y+1,4.5)
}




if not place_free(x, y+25) 
&amp;&amp; place_free(x-15, y)
//&amp;&amp; place_free(x, y-15)
//&amp;&amp; place_free(x+15, y)
{
move_towards_point(x-1,y-aleatcollidir2,4.5)
}else{
//move_towards_point(x-1,y-1,4.5)
}


if not place_free(x, y-25) 
//&amp;&amp; place_free(x-15, y)
&amp;&amp; place_free(x+15, y)
//&amp;&amp; place_free(x, y+15)
{
move_towards_point(x+1,y+aleatcollidir2,4.5)


}else{
//move_towards_point(x-1,y+1,4.5)
}
//}








//move_bounce_solid(true);
nouvel_angle = direction //A CHANGER SI BUG IMAGE ANGLE
} else {

//image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)
}
}
}

//EVITER LES OBSTACLES :



if not place_free(x+2, y) {
//nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
if transporteur = 0 {path_end();}
alarm[11] = 1
alarm[1] = 1
x -= 2
//hspeed = 0

}

if not place_free(x-2, y) {
//nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
if transporteur = 0 {path_end();}
alarm[11] = 1
alarm[1] = 1
x += 2
//hspeed = 0

}

if not place_free(x, y+2) {
//nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
if transporteur = 0 {path_end();}
y -= 2
alarm[11] = 1
alarm[1] = 1
//vspeed = 0

}

if not place_free(x, y-2) {
//nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
if transporteur = 0 {path_end();}
alarm[11] = 1
alarm[1] = 1
y += 2
//vspeed = 0

}
    nouvel_angle = direction // point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE

//ANGLE FLUIDE


 if obj_zombie.karma &lt; 1 {
 karmabas = 1
 } else{
 karmabas = 0
 }
 






//CHECK ENEMY !!!!
//if transporteur = 0 {//SUPER EMPECHEUR
if instance_exists(obj_zombie) {
//if instance_exists(obj_enemy2){
//cibleallie1 = instance_nearest(x,y,obj_enemy2)}
     //  player_x = cibleallie.x;
//player_y = cibleallie.y;

/*if karmabas = 1 {
if instance_exists(obj_zombie){
cibleallie3 = instance_nearest(x,y,obj_zombie)
 //      player_x = cibleallie3.x;
//player_y =cibleallie3.y;
distcible3 = distance_to_object(cibleallie3)
}else{distcible3 = 100000}


}*/

//TRANSPORTEUR !!! VA JUSQU O TELEPORTEUR 
if transporteur = 1 {
alarm[8] = 1000
patrol = 0
cibleallie = cibleteleport
role = 1
}else{


//
if instance_exists(obj_arbreneige){
cibleallie1 = instance_nearest(x,y,obj_arbreneige)

       player_x = cibleallie1.x;
player_y = cibleallie1.y;
distcible1 = distance_to_object(cibleallie1)
}else{distcible1 = 100000}


if instance_exists(obj_teleport1){
cibleallie2 = instance_nearest(x,y,obj_teleport1)
player_x = cibleallie2.x;
player_y = cibleallie2.y;
distcible2 = distance_to_object(cibleallie2)
}else{distcible2 = 100000}


if instance_exists(obj_fer2){

cibleallie3 = instance_nearest(x,y,obj_fer2)
player_x = cibleallie3.x;
player_y = cibleallie3.y;
distcible3 = distance_to_object(cibleallie3)
}else{distcible3 = 100000}

if distcible1 &lt; distcible2 &amp;&amp; distcible3 {cibleallie = cibleallie1}
if distcible2 &lt; distcible1 &amp;&amp; distcible3 {cibleallie = cibleallie2}
if distcible3 &lt; distcible2 &amp;&amp; distcible1 {cibleallie = cibleallie3}


if instance_exists(obj_arbreneige) &amp;&amp; instance_exists(obj_fer2){
role = 1 //bucheron
/*if point_distance(x,y,cibleallie2.x,cibleallie2.y) &lt; 1500 {//teleport
cibleallie = cibleallie2
}else */
if point_distance(x,y,cibleallie1.x,cibleallie1.y) &lt; 3500 {//arbre
cibleallie = cibleallie1
}else if point_distance(x,y,cibleallie3.x,cibleallie3.y) &lt; 1500 {//fer
cibleallie = cibleallie3
}}

if instance_exists(obj_arbreneige) &amp;&amp; not instance_exists(obj_fer2){
role = 1 //bucheron
/*if point_distance(x,y,cibleallie2.x,cibleallie2.y) &lt; 1500 {//teleport
cibleallie = cibleallie2
}else */
if point_distance(x,y,cibleallie1.x,cibleallie1.y) &lt; 3500 {//arbre
cibleallie = cibleallie1
}}

if not instance_exists(obj_arbreneige) &amp;&amp; instance_exists(obj_fer2){
role = 2 //mine
/*if point_distance(x,y,cibleallie2.x,cibleallie2.y) &lt; 1500 {//teleport
cibleallie = cibleallie2
}else */
if point_distance(x,y,cibleallie3.x,cibleallie3.y) &lt; 3500 {//fer
cibleallie = cibleallie3
}}

}



//priorité fight
if instance_exists(obj_enemy2){

cibleenemy = instance_nearest(x,y,obj_enemy2)
if point_distance(x,y,cibleenemy.x ,cibleenemy.y ) &lt; 900 {
role = 3 //atack
cibleallie = cibleenemy
player_x = cibleallie.x;
player_y = cibleallie.y;
}else{ if transporteur = 0 {role = 0} //PEUT ETRE A REVENIR JE L AI ENLEVER POUR LE TRANSPORTEUR
}
}

 
 
 if instance_exists(cibleallie){
 
      player_x = cibleallie.x;
player_y = cibleallie.y;
}










// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//DEMARAGE DE L ATTAQUE IA !!!!!!!!!!!!!!!!!!!!!!!!!!

 if instance_exists(cibleallie){
 if (point_distance(x, y, obj_zombie.x, obj_zombie.y) &gt; 1500) {
 
 }else{
 

 
 path_set_kind(path, 1)
    path_set_precision(path, 4);//test de precision


 
 //temps du couteau
 if tempscut &gt; 0 {
tempscut -= 1
}
 


 if x&gt;room_width x=room_width; if x&lt;0 x=0; if y&gt;room_height y=room_height; if y&lt;0 y=0;
  

 
var mx = (cibleallie.x div 32)*32+16;
var my = (cibleallie.y div 32)*32+16;


 if mode2 = 6 or mode2 = 7  or mode2 = 8  or mode2 = 9 or mode2 = 13 or mode2 = 16{}else{
 
 //IA BASIQUE
  distancemin = 50
 





    if alarm[1]=-1{//nvo pour colli proche joueur
    alarm[1] = 5+random(30)
    //image_angle=direction
}









///test de ouf pour vision de perso
var dir2 = point_direction(x,y,cibleallie.x,cibleallie.y);


if abs(angle_difference(dir2,image_angle)) &lt;= 60 {

    //Whatever in here

 collivision = cibleallie
 


 if (point_distance(x, y, player_x, player_y) &lt; 15850)  
 &amp;&amp;  (point_distance(x, y, player_x, player_y) &gt; distancemin)  //nvo 

 
  {


var mx = (cibleallie.x div 32)*32+16;
var my = (cibleallie.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)//A CHANGER SI BUG IMAGE ANGLE
}else{
//image_angle=direction
}

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
    path_start(path, enemyspeed *1/ global.varfpsmax , path_action_stop, 0);
    alarm[1] = -1
     if alarm[8] &lt; 0 {
     nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)//A CHANGER SI BUG IMAGE ANGLE
    alarm[8] = 1500
    }
    
    
    }
    }
    }
    
    
    }
    
    
    
    
    
    
    else{//collision line
    //image_angle=direction
    if alarm[8] &lt; 0{
    nouvel_angle = direction // point_direction(x,y,obj_zombie.x,obj_zombie.y)//A CHANGER SI BUG IMAGE ANGLE
   
    }
    }
    }
    
    //}
    
    collivision = cibleallie
    if (point_distance(x, y, player_x, player_y) &lt; distancemin+200)  {
    if transporteur = 0 {path_end()}//tres fonctionnel pour stoper ia pret du joueur
    patrol = 0
    if alarm[11] &lt; 0 {
    alarm[11] = (45+random(40))*global.varfpsmax
    }
    move_bounce_solid(false);
    
    } 
    
    
    
    
    else if (point_distance(x, y, player_x, player_y) &lt; 300)
    {

    }
    
    
    
    
    
    
    if (point_distance(x, y, player_x, player_y) &lt; 50) {//test pour stoper l ia si trop prêt du joueur
        if transporteur = 0 {path_end()}//tres fonctionnel pour stoper ia pret du joueur
    patrol = 0
    }
    
    
    
    
  
    
    // shoot et experience
    
    if hpmobs &lt; 0 
{
if alarm[0] &lt; 0 {
alarm[0] = 10 * vitessereaction
enemyspeed = 0;
}
}


if stopexp = 0 {
if hpmobs &lt; 0 {

alarm[3] = 1

}
}

clicdroit = 1

// tir par rapport a la distance /// TIR TIR TIR TIR

 if (point_distance(x, y, cibleallie.x, cibleallie.y) &lt; 650) &amp;&amp; alarm[9] &lt; 0  //&amp;&amp; tir = 0 
 
 {
 var dir2 = point_direction(x,y,cibleallie.x,cibleallie.y);
if abs(angle_difference(dir2,image_angle)) &lt;= 60 {
if alarm[9] &lt; 0 {
    alarm[9] = 1 * vitessereaction
    }
    tir = 1
    }
    }
    
    if (point_distance(x, y, player_x, player_y) &gt; 650)  {
    tir = 0
    }else{
    
tir = 1
    }
    
    
    






//alarm8 poursuite
if alarm[8] &gt; 0 {
var mx = (cibleallie.x div 32)*32+16;
var my = (cibleallie.y div 32)*32+16;

if (mp_grid_path(global.grid, path, x, y, mx, my ,1)) {
    path_start(path, enemyspeed *1.15/ global.varfpsmax , path_action_stop, 0);
if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)//A CHANGER SI BUG IMAGE ANGLE
alarm[10] = -1
}else{
if alarm[10] &lt; 0 {
alarm[10] = 10 
}
 



}

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_set_kind(path, 1)
    path_set_precision(path, 8);//test de precision
    path_start(path, enemyspeed *1.15/ global.varfpsmax , path_action_stop, 0);
    alarm[1] = -1
    if (point_distance(x, y, player_x, player_y) &lt; 30) {//stoper si trop prêt ,ajouter le 11/10
    if transporteur = 0 {path_end()}
   // patrol = 1
    }
    
    
    }}}
//VISE LE JOUEUR SI EN VUE ET PAS TROP LOIN POUR POUVOIR TIRER
collivision = cibleallie
 if (point_distance(x, y, player_x, player_y) &lt; 650)  
{
  nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
  }
}else{
if transporteur = 0 {path_end()}
patrol = 1
nouvel_angle=direction
}
}






//PARALYSIE STUN
if paralyse = 1 {
enemyspeed = 0
paralysetime -= 1
if paralysetime = 0 {
paralyse = 0
paralysetime = 300
}
}else{
if mode2 = 1{enemyspeed = 6+random_range(-1,1)}
if mode2 = 2{enemyspeed = 5+random_range(-1,1)}
if mode2 = 3{enemyspeed = 5.5+random_range(-1,1)}
}



//eviter de trop ce raprocher du joueur


if (point_distance(x, y, player_x, player_y) &lt; 170) {
if role = 3 {
move_bounce_solid(true)
}
if transporteur = 0 {//path_end();
}
alarm[1] = 5
alarm[11] = (5+random(40))*global.varfpsmax
}



//clic joueur
if clicjoueur &gt; 0 {
if clicjoueur = 1 {
alarm[11] = 2*global.varfpsmax
}

if clicjoueur &lt; 30 {
clicjoueur += 1
if role = 3 {
move_bounce_solid(true)
}
if transporteur = 0 {path_end();}

}else{
clicjoueur = 0
}


}





 if (point_distance(x, y, player_x, player_y) &gt; 100)  {
if alarm[8] &lt; 800 &amp;&amp; alarm[8] &gt; 700 {
nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
  var mx = cibleallie.x+lengthdir_x(40,cibleallie.image_angle) ;
var my = cibleallie.y+lengthdir_y(40,cibleallie.image_angle);
if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {
path_start(path, enemyspeed*1.1 / fpsmax , path_action_stop, 1);
}
}

if alarm[8] &lt; 400 &amp;&amp; alarm[8] &gt; 300 {
nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)
  var mx = cibleallie.x+lengthdir_x(40,cibleallie.image_angle) ;
var my = cibleallie.y+lengthdir_y(40,cibleallie.image_angle);
if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {
path_start(path, enemyspeed*1.1 / fpsmax , path_action_stop, 1);
}
}
}

if transporteur = 0 {
if (point_distance(x, y, player_x, player_y) &lt; 50)  {
path_end();
 
//forcer ia a stoper si proche de mine/////
if role = 3 {patrol = 1}else{
alarm[11] = 20
alarm[1] = 20
patrol = 0
speed = 0
if soundbucheron &lt;= 0 {audio_play_sound(snd_axewood,0,false);soundbucheron = random_range(60,70)//son
}else{soundbucheron -= 1}

minage += 0.1
if minage &gt; 100 {
minage = 0
with(cibleallie){if alarm[1] &lt; 0 {alarm[1] = 1}}

}
}
}}

}//if (point_distance(x, y, player_x, player_y) &lt; 2050) {
}else{if transporteur = 0 {patrol = 1}}}else{if transporteur = 0 {patrol = 1}}







//POTO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!!!!!!!!!!!!
if karmabas = 0{}else{poto = 0}

if poto = 0 {image_angle += sin(degtorad(nouvel_angle - image_angle)) * (12/global.varfpsmax);}

//}// if transporteur = 0 {



///VA AU TELEPORTEUR PUTAIN
/// if transporteur = 0 {
 if transporteur = 1 {
  patrol = 0
  alarm[1] = 10
  alarm[11] = 10
  alarm[8] = 3000
  
  //cibleteleport = instance_furthest(x,y,obj_repaireteleport)
  cibleallie = cibleteleport
  
  
  
  player_x = cibleallie.x
    player_y = cibleallie.y
 
 var mx = (xcibleteleport div 32)*32+16;
var my = (ycibleteleport div 32)*32+16;

if (mp_grid_path(global.grid, path2, x, y, mx, my ,1)) {
    path_start(path2, 5*1/ global.varfpsmax , path_action_stop, 1);
if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 role = 3
 if (point_distance(x, y, player_x, player_y) &lt; 50) {
 image_alpha -= 0.05
 if image_alpha &lt;= 0 {
 instance_destroy();}//Destructin si touche teleport
nouvel_angle =  point_direction(x,y,cibleallie.x,cibleallie.y)//A CHANGER SI BUG IMAGE ANGLE
alarm[10] = -1
}else{
}}}}
 
   nouvel_angle = direction //point_direction(x,y,cibleallie.x,cibleallie.y)
 }
 
 /// //STOPER L IA SI TROP PROCHE DE CIBLE
 if (point_distance(x, y, player_x, player_y) &lt; 100) {
 path_end();
  move_bounce_solid(true)
if alarm[11] &lt; 0 {
alarm[11] = (5+random(30))*global.varfpsmax}
if alarm[1] &lt; 0 {
alarm[1] = (5+random(30))*global.varfpsmax}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fumeetoxique">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
      //  instance_create(x , y , oBlood);
               // instance_create(x , y , oBlood);
                 //       instance_create(x , y , oBlood);
//hpmobs = 0
hpmobs -= (maxhpmobs /965 )//65
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_explosion_piece">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bloodprob = round(random(30))
if bloodprob = 1 {
instance_create(x , y , oBlood);
}

hpmobs -= (maxhpmobs /500 )/(1+(armurepoto/10))
 
if probflame &lt; 1 {
with instance_create(other.x+-random(10),other.y+-random(10),obj_tachesolburn){
image_xscale  -= 0.3
image_yscale  -= 0.3
}
probflame = 1000*global.varfpsmax
with instance_create(x+-random(10),y+-random(10),obj_flammeplayer){
idproprio = other.id
}
}

/*
 if mode2 = 10 or mode2 = 16
 {
 with(instance_create(x,y,obj_weaponloot)){
 mode2 = other.mode2
 }}
 /*
with(instance_create(x,y,obj_repop)) {
other.idrepop2 = id
mode2 = other.mode2
difficulty = other.difficulty
}
idrepop2.modedraw = mode2
instance_destroy();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bigexplo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//toucherparmoi = 1
bloodprob = round(random(30))
if bloodprob = 1 {
instance_create(x , y , oBlood);
}
               


hpmobs -= (maxhpmobs /500 )/(1+(armurepoto/10))

if probflame &lt; 1 {
with instance_create(other.x+-random(10),other.y+-random(10),obj_tachesolburn){
image_xscale  -= 0.3
image_yscale  -= 0.3
}
probflame = 1000*global.varfpsmax
with instance_create(x+-random(10),y+-random(10),obj_flammeplayer){
idproprio = other.id
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hpmobs -= (maxhpmobs /2 )/(1+(armurepoto/10))

        instance_create(x , y , oBlood);
with(other){
instance_destroy();

}

patrol = 0 
alarm[8] = 200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hpmobs -= (maxhpmobs /5 )/(1+(armurepoto/10))

        instance_create(x , y , oBlood);
with(other){
instance_destroy();

}

patrol = 0 
alarm[8] = 200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_flammeplayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bloodprob = round(random(30))
if bloodprob = 1 {
instance_create(x , y , oBlood);
}
if bloodprob = 1 or bloodprob = 2 or bloodprob = 3{
with instance_create(other.x+-random(10),other.y+-random(10),obj_tachesolburn){
image_xscale  -= 0.6+random(0.25)
image_yscale  -= 0.6+random(0.25)
}}

hpmobs -= (maxhpmobs /665 )/(1+(armurepoto/10))//65


if other.idproprio = id {}else{
if probflame &lt; 1 {
probflame = 1000*global.varfpsmax
with instance_create(x+-random(10),y+-random(10),obj_flammeplayer){
idproprio = other.id
}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ondedechocnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paralyse = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ondedechoc">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paralyse = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_healbalise">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_zombie.karma &gt; 0 {
   if hpmobs &lt; maxhpmobs {hpmobs += (maxhpmobs /1000 )}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if poto = 0 {
if obj_zombie.animcountcut &lt; 35 &amp;&amp; obj_zombie.animcountcut &gt; 5 {

//motion_set(obj_zombie.image_angle, enemyspeed*1.9/ fpsmax )
x += lengthdir_x(13,obj_zombie.image_angle)
y += lengthdir_y(13,obj_zombie.image_angle)

 if not audio_is_playing(snd_coupdecut2){
 audio_play_sound(snd_coupdecut2,1,0)
    audio_sound_gain(snd_coupdecut2, 1, 0);
  }
    
  if tempscut = 0 {
//hpmobs -= irandom_range(4,5)* (obj_zombie.level+1 )//   /2 le level avant 
hpmobs -= (maxhpmobs /2 )
instance_create(x,y,obj_shake)

instance_create(x , y , oBlood);
tempscut = 40 //temps entre deux coups de couteau
}

//part_emitter_region(partblood_sys,partblood_emit,x+50,x-50,y+50,y-50,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);



}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_onde">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hpmobs &gt; 0
{ hpmobs -= irandom_range(20,30)

//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_flamme">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toucherparmoi = 1
if hpmobs &gt; 0
{ //hpmobs -= (maxhpmobs /5 )
hpmobs -= (maxhpmobs /670 )/(1+(armurepoto/10))
if probflame &lt; 1 {
with instance_create(other.x+-random(10),other.y+-random(10),obj_tachesolburn){
image_xscale  -= 0.3
image_yscale  -= 0.3
}
probflame = 1000*global.varfpsmax
with instance_create(x+-random(10),y+-random(10),obj_flammeplayer){
idproprio = other.id
}
}
//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        bloodprob = round(random(30))
if bloodprob = 1 {
instance_create(x , y , oBlood);
}
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_buble">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hpmobs &gt; 0
{ hpmobs -= irandom_range(10,15)

//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        
       
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///degat de la balle - dura arme * max dmg ,min dmg

if hpmobs &gt; 0
{ hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 3 * (global.duraarme/2)

//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if poto = 0 {
with(other){instance_destroy();}
toucherparmoi = 1
obj_bigstats.touchbulletstats +=1

if hpmobs &gt; 0
{ 

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}
dgtaffichage = (irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 3  * obj_zombie.weapon3dmg * (global.duraarme/2) * other.damagegun * (obj_armorloot.armortotalgeardps*0.5)  * obj_zombie.nanodps  * obj_zombie.talentbonusdegat)/(1+(armurepoto/10))*portebullet;//*2
hpmobs -= dgtaffichage
//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if poto = 0 {
with(other){instance_destroy();}
toucherparmoi = 1
obj_bigstats.touchbulletstats +=1

if hpmobs &gt; 0
{ 

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}
dgtaffichage = irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 10  * obj_zombie.weapon2dmg * (global.duraarme2/2)  *  other.damageshoot * (obj_armorloot.armortotalgeardps*1.5)  * obj_zombie.nanodps  * obj_zombie.talentbonusdegat/(1+(armurepoto/10))*portebullet;
hpmobs -= dgtaffichage
//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletassaut">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if poto = 0 {
toucherparmoi = 1
with(other){instance_destroy();}

obj_bigstats.touchbulletstats +=1

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}


if hpmobs &gt; 0
{ dgtaffichage = irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5  * obj_zombie.weapon3dmg * (global.duraarme3/2) *  other.damageassaut * (obj_armorloot.armortotalgeardps*1.5) * obj_zombie.nanodps * obj_zombie.talentbonusdegat/(1+(armurepoto/10))*portebullet;
hpmobs -= dgtaffichage
//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletassautnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy();}
if hpmobs &gt; 0
{


var minarmenet = other.minarme;
var maxarmenet = other.maxarme;
var duraarmenet3 = other.duraarme3;
var weapon3dmgnet = other.weapon3dmg;
var assautdamagenet = other.assautdamage;
var dpsnanonet = other.dpsnano;

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}

 
  
    hpmobs -= 1*(irandom_range(minarmenet,maxarmenet))*(duraarmenet3*0.1* weapon3dmgnet)* assautdamagenet * (other.armortotalgeardps*0.5)  * dpsnanonet/(1+(armurepoto/10))*portebullet//



//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy();}
if hpmobs &gt; 0
{


var minarmenet = other.minarme;
var maxarmenet = other.maxarme;
var duraarmenet = other.duraarme;
var weapon1dmgnet = other.weapon1dmg;
var gundamagenet = other.gundamage;
var dpsnanonet = other.dpsnano;

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}

 
  
    hpmobs -= (1*(irandom_range(minarmenet,maxarmenet))*(duraarmenet*0.1* weapon1dmgnet)* gundamagenet * (other.armortotalgeardps*0.5) * dpsnanonet)/(1+(armurepoto/10))*portebullet//*2//




//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shootnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){instance_destroy();}
if hpmobs &gt; 0
{


var minarmenet = other.minarme;
var maxarmenet = other.maxarme;
var duraarmenet2 = other.duraarme2;
var weapon2dmgnet = other.weapon2dmg;
var shootdamagenet = other.shootdamage;
var dpsnanonet = other.dpsnano;

var portebullet = other.portebullet/150

if portebullet &gt; 1 {portebullet = 1}

 
  
    hpmobs -= 1*(irandom_range(minarmenet,maxarmenet))*(duraarmenet2*0.1* weapon2dmgnet)* shootdamagenet * (other.armortotalgeardps*0.5)  * dpsnanonet/(1+(armurepoto/10))*portebullet//



//part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
//part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clicjoueur = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode2 = 10 {//LANCE FLAME
part_type_destroy(particle1);

part_system_destroy(Sname);
}

if poto = 0 {
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if poto = 1 {
roomstart = 1
}

if not instance_exists(obj_grid){
instance_create(x,y,obj_grid)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


 //HEAL GUN
   if obj_zombie.healgunshot &gt; 0 {
var dir3 = point_direction(obj_zombie.x,obj_zombie.y,x,y);
if abs(angle_difference(dir3,obj_zombie.image_angle)) &lt;= 60 {
 if (point_distance(x, y, obj_zombie.x, obj_zombie.y) &lt; 550)  
 {
 if hpmobs &lt; maxhpmobs {
 hpmobs += (maxhpmobs /1000 )
 }
// if drawhealgun = 1 {
//loadsprite2 = spr_healrecu1

loadsprite2 = spr_healrecu2
loadframe2 += 1

draw_sprite_ext(loadsprite2,loadframe2,x+lengthdir_x(0,image_angle),y+lengthdir_y(0,image_angle),1,1,image_angle,c_white,1)

//}
 


 }}} 
 
/*  //TOUT CA DANS NIGHTCYCLE !!
//obj_nightcycle
if karmabas = 0 {
 idme = id 
if position_meeting(mouse_x,mouse_y,idme){
draw_set_font(fnt_little);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_yellow)

draw_text(x,y - 30,nameia)
draw_healthbar(x-45 ,y + 60,x+45,y + 67,(hpmobs/maxhpmobs)*100,c_black,c_red,c_white,0,true,false)

}}*/ //TOUT CA DANS NIGHTCYCLE !!


if alarm[8] &gt; 0 {
framepied = 1.3
}else{
framepied = 1
}
if not xxmovestep = 0 {
movepiedvitessetest += (xxmovestep /4)
}else
if not yymovestep = 0 {
movepiedvitessetest += (yymovestep /4)
}else{
movepiedvitessetest = 0
}
draw_sprite_ext(spr_walk,movepiedvitessetest/2,x,y+lengthdir_y(8,image_angle-40),0.85,0.85,image_angle,c_white,1)
//draw_text(x,y-150,string(alarm[0]))
if mode2 = 1 or mode2 = 6 or mode2 = 12 or mode2 = 13 or mode2 = 14{//GUN
//sprite_index = spr_shadowmob
sprite_index = spr_mobfin1
image_index = animwalk
draw_sprite_ext(spr_mobfin1,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =14 or mode2 = 8 {//SHOOTGUN
sprite_index = spr_mobfin4
image_index = animwalk
draw_sprite_ext(spr_mobfin4,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =3 or mode2 = 2 or mode2 = 7 or mode2 = 16{//assaut
if mode2 = 3 {sprite_index = spr_mineur}
if mode2 = 2 {sprite_index = spr_mineur2}
if mode2 = 7 {sprite_index = spr_mineur3}
image_xscale = 1
image_yscale = 1
image_index = animwalk/2
draw_sprite_ext(sprite_index,animwalk/2,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =5 or mode2 = 9 or mode2 = 15{//TANKGUYS
sprite_index = spr_mobfin3
image_index = animwalk
draw_sprite_ext(spr_mobfin3,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}

if mode2 = 10{//LANCEFLAMME
sprite_index = spr_mobfin5
image_index = animwalk
draw_sprite_ext(spr_mobfin5,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}



if aterre &gt; 0  {}else{
if headskin = 1 {
draw_sprite_ext(spr_head1,animwalk,x,y,0.75,0.75,image_angle,c_white,1)}
if headskin = 2 {
draw_sprite_ext(spr_head2,animwalk,x,y,0.8,0.8,image_angle,c_white,1)}
if headskin = 3 {
draw_sprite_ext(spr_head3,animwalk,x,y,0.7,0.7,image_angle,c_white,1)}
if headskin = 4 {
draw_sprite_ext(spr_head4,animwalk,x,y,0.75,0.75,image_angle,c_white,1)}
if headskin = 5 {
draw_sprite_ext(spr_head5,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 6 {
draw_sprite_ext(spr_head6,animwalk,x,y,0.7,0.7,image_angle,c_white,1)}
if headskin = 7 {
draw_sprite_ext(spr_head7,animwalk,x,y,0.6,0.6,image_angle,c_white,1)}
if headskin = 8 {
draw_sprite_ext(spr_head8,animwalk,x,y,0.7,0.7,image_angle,c_white,1)}
if headskin = 9 {
draw_sprite_ext(spr_head9,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 10 {
draw_sprite_ext(spr_head10,animwalk,x,y,0.75,0.75,image_angle,c_white,1)}
if headskin = 11 {
draw_sprite_ext(spr_head11,animwalk,x,y,0.70,0.70,image_angle,c_white,1)}
if headskin = 12 {
draw_sprite_ext(spr_head12,animwalk,x,y,0.70,0.70,image_angle,c_white,1)}
if headskin = 13 {
draw_sprite_ext(spr_head13,animwalk,x,y,0.70,0.70,image_angle,c_white,1)}
if headskin = 14 {
draw_sprite_ext(spr_head14,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 15 {
draw_sprite_ext(spr_head15,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 16 {
draw_sprite_ext(spr_head16,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 17 {
draw_sprite_ext(spr_head17,animwalk,x,y,0.65,0.65,image_angle,c_white,1)}
if headskin = 18 {
draw_sprite_ext(spr_head18,animwalk,x,y,0.70,0.70,image_angle,c_white,1)}
}


//draw_self();

future_x = lerp(x, x+hspeed, room_speed);

future_y = lerp(y, y+vspeed, room_speed);


//draw pied
animwalk += 1

if point_distance(x,y,future_x,future_y) &lt; 5 {
//animwalk = 0

}



//draw degat
draw_set_font(fnt_little);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_color(c_yellow)



if dgtaffichage &gt; 0 {
if dgtaffichagecount &lt; 160 {
draw_text(x,y - 30,dgtaffichage)
dgtaffichagecount += 1
}else{
dgtaffichage = 0
dgtaffichagecount = 0
}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
