<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character2</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>45</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>torch = false; // Détermine si la torche est allumée ou non
timer = 0;     // Variable relative à l'IA
//if !variable_local_exists("mode") mode = 0;

// Crée l'objet lumière générant la lampe torhe
with instance_create(x,y,obj_light_torch)
{parent = other.id;
 sl_light_xscale       = 2.64;
 sl_light_yscale       = 2.64;
 sl_light_shadowlength = 3;
 SL_light_cast_obj(obj_character,spr_character_smask)};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var a;

// Mise à jour des variables selon la vitesse de la room
c_speed  = 6*(60/max(fps,1)); // Vitesse du personnage
c_rspeed = 3*(60/max(fps,1)); // Vitesse de rotation du personnage
friction = 3*(60/max(fps,1)); // Friction du personnage

if mode=1 &amp;&amp; point_distance(x,y,obj_character.x,obj_character.y)&lt;800 // Comportement du garde
{
    if !collision_line(x,y,obj_character.x,obj_character.y,obj_crate01,false,true)
    &amp;&amp; !collision_line(x,y,obj_character.x,obj_character.y,obj_crate03,false,true)
    &amp;&amp; !collision_line(x,y,obj_character.x,obj_character.y,obj_bush01,false,true)
    can_see=true else can_see=false;

    if can_see &amp;&amp; global.sl_ambient_light&lt;0.4 &amp;&amp; !obj_character.torch
    {
        if point_distance(x,y,obj_character.x,obj_character.y)&lt;340 {direction=point_direction(x,y,obj_character.x,obj_character.y) timer=fps*4};
    }
    else if can_see=true {direction=point_direction(x,y,obj_character.x,obj_character.y) timer=fps*4};
    
    if timer&gt;=0 timer-=1;
    if timer&lt;=0 direction=90;
}
if mode=2 &amp;&amp; fps!=0 path_speed=2*(60/fps); // Comportement du personnage en déplacement

// Rotation du personnage
a = direction-image_angle;

if abs(a) &lt; 180 image_angle += c_rspeed*sign(a) else image_angle -= c_rspeed*sign(a);
if abs(a) &lt;= c_rspeed image_angle = direction;

if image_angle &gt; 360 image_angle = 0;
if image_angle &lt; 0   image_angle = 360;

// Activation/désactivation de la torche
if global.sl_ambient_light&lt;0.4 torch=true else torch=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_crate03">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_crate02">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_crate0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bush01">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_vehicle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shape04">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shape03">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shape01">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collision avec un obstacle, le personnage s'arrête
motion_add(point_direction(other.x,other.y,x,y),speed);
move_outside_solid(point_direction(other.x,other.y,x,y),30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,21</point>
    <point>28,28</point>
  </PhysicsShapePoints>
</object>
