<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000001</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.steam_api = false;
 if steam_initialised()
    {
    if steam_stats_ready() &amp;&amp; steam_is_overlay_enabled()
       {
       global.steam_api = true;
       }
    }
    
    
ilaunch = 0
precisionstats = 0 //a faire la multiplication dans le step
gradestats = ""

chooseblabla = choose(1,2,3)
global.blaplayer = 0

if global.language = 1 {

}else{

}

alarmblabla[1] = 0//recharge
alarmblabla[2] = 0//soif
alarmblabla[3] = 0//faim
alarmblabla[4] = 0//froid
alarmblabla[5] = 0//malade
alarmblabla[6] = 0//endurence
alarmblabla[7] = 0//metabo faible
alarmblabla[8] = 0//fracture
alarmblabla[9] = 0//hemoragie
alarmblabla[10] = 0//forge tape idiot
alarmblabla[11] = 0//poids trop
alarmblabla[12] = 0//trop de ressource pourrais vendre a l'état
alarmblabla[13] = 0//trop de build ,je pourrais construire une maison
alarmblabla[14] = 0//bourré ,j'aurais pas du boire autant
alarmblabla[15] = 0//une tempête ce prépare
alarmblabla[16] = 0//cuisine ,si obj de cuisine et feu
alarmblabla[17] = 0//bar ,shake

alarmstart[1] = 0
alarmstart[2] = 0
alarmstart[3] = 0
alarmstart[4] = 0
alarmstart[5] = 0
alarmstart[6] = 0
alarmstart[7] = 0
alarmstart[8] = 0
alarmstart[9] = 0
alarmstart[10] = 0
alarmstart[11] = 0
alarmstart[12] = 0
alarmstart[13] = 0
alarmstart[14] = 0
alarmstart[15] = 0
alarmstart[16] = 0
alarmstart[17] = 0

alarmload[1] = 0
alarmload[2] = 0
alarmload[3] = 0
alarmload[4] = 0
alarmload[5] = 0
alarmload[6] = 0
alarmload[7] = 0
alarmload[8] = 0
alarmload[9] = 0
alarmload[10] = 0
alarmload[11] = 0
alarmload[12] = 0
alarmload[13] = 0
alarmload[14] = 0
alarmload[15] = 0
alarmload[16] = 0
alarmload[17] = 0

//alarmblabla[1] = 0


reputation[1] = 0 //citoyen
reputation[2] = 0 //patrouilleur
reputation[3] = 0 //faucheur
reputation[4] = 0 //ephemere
reputation[5] = 0 //scientifique
reputation[6] = 50 //estime personnel (rend fou si trop basse

colortext2 = make_color_rgb(148,132,128)


fatiguetotal1 = 100
fatiguetotal2 = 100
fatiguetotal3 = 100

//BEAUCOUP DANS obj_controllerplayer

//tombe dans les pommes ,ou a des moments d assombrissement si leger , systeme immu defaillant
/*protein = 50//protéine // 88.5 g
carbs = 50 //glucide  // 310 g
fat = 50 //vitamines hydrosolubles //en gros ce sera le rendu total des vitamines // 60 g
fiber = 50 //Fibres // 14 g
sugar = 50 //sucre // 40 g
sfat = 50 // Vitamines liposolubles //lipide non ? 24 g
sodium = 50 // 2 g

//VITAMINS //energie (vitesse pour appuyer sur la gachette ,courir vite et longtemps,
a = 100 // 
b1 = 100
b2 = 100
b3 = 100
b4 = 100
b5 = 100
b6 = 100
b9 = 100
b12 = 100
c = 100
d = 100
e = 100
vk = 100



//MINERALS
ca = 70 //calcium
fe = 70 //iron //fer
mg = 70 //magnesium
p = 70 // phosphorus//phosphore
k = 70 //potassium
zn = 70 //zinc 
cu = 70 //copper //cuivre
mn = 70 //manganese //manganèse 
se = 70 //selenium
*/
//
//


imagespeed2 = 0
demaragepralax = 0
imagespeed = 0

mode3 = 1 //langue
alarm[0] = 400*global.varfpsmax
alarm[2] = 400*global.varfpsmax
mode4 = 0

//A SAVEloyer = 0 
//A SAVEprime = 0 

namemaladie = ""


//levelmine = 1// A SAVE
/*

brasdroit = 0
brasgauche = 1
jambegauche = 1
jambedroite = 0
hemoragie = 1
hypotermia = 1





///D AUTRES STAT DANS LE GAME OVER (mais non utilisé je crois) et d'autres utilisé dans obj_armorloot
//to open our file
diestats = 0//pris la base game over
killstats = 0//pris la base
killnpcstats = 0//pris la base
walkstats = 0 //mettre dans le steps du joueur un +0.01 quand move
tradestats = 0 //pris la base
totalbulletstats = 0//pris la base
missbulletstats = 0//a faire la soustraction totalbulletstats - touchbulletstats dans step
touchbulletstats = 0//pris la base
//precisionstats = 0 //a faire la multiplication dans le step
nombredejourstats = 0//pris a la base dans step zombie sl time
gradestats = ""
*/
//pas implanter du tout








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TOUSSE MALADE
audio_play_sound(snd_toux,0,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode4 = 0 {
mode4 = 1
}else{
mode4 = 0
}

alarm[2] = 400*global.varfpsmax
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_buttonguilde){
with(obj_buttonguilde){
visibility = 0
}}

if instance_exists(obj_hemoragie){
with(obj_hemoragie){
instance_destroy();
}}
if instance_exists(obj_languagenow){
with(obj_languagenow){
instance_destroy();
}
}

if instance_exists(obj_hypotermia){
with(obj_hypotermia){
instance_destroy();
}}

if instance_exists(obj_fracture){
with(obj_fracture){
instance_destroy();
}}

if instance_exists(obj_medicament){
with(obj_medicament){
instance_destroy();
}}

if instance_exists(obj_virus){
with(obj_virus){
instance_destroy();
}}

obj_menuechap.alarm[0] = 5*global.varfpsmax
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode3 &lt; 15 {
mode3 += 1
}else{
mode3 = 1
}
alarm[0] = 400*global.varfpsmax
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///maladietouxsound/expaptitude/job/metabolismttal

totalmetabo = median(se,mn,cu,zn,k,p,mg,fe,ca,protein,carbs,fiber,sodium,sfat,sugar,a,b1,b2,b3,b4,b5,b6,b9,b12,c,d,e,vk)


if alarmblabla[1] &lt;= 0 {if alarmstart[1] = 1 {if alarmload[1] &lt; random_range(2500,6000) {alarmload[1] += 1}else{alarmblabla[1] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[1] = 0}}else{}//recharge
if alarmblabla[2] &lt;= 0 {if alarmstart[2] = 1 {if alarmload[2] &lt; random_range(2500,6000) {alarmload[2] += 1}else{alarmblabla[2] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[2] = 0}}//soif
if alarmblabla[3] &lt;= 0 {if alarmstart[3] = 1 {if alarmload[3] &lt; random_range(2500,6000) {alarmload[3] += 1}else{alarmblabla[3] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[3] = 0}}//faim
if alarmblabla[4] &lt;= 0 {if alarmstart[4] = 1 {if alarmload[4] &lt; random_range(2500,6000) {alarmload[4] += 1}else{alarmblabla[4] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[4] = 0}}//froid
if alarmblabla[5] &lt;= 0 {if alarmstart[5] = 1 {if alarmload[5] &lt; random_range(2500,6000) {alarmload[5] += 1}else{alarmblabla[5] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[5] = 0}}//malade
if alarmblabla[6] &lt;= 0 {if alarmstart[6] = 1 {if alarmload[6] &lt; random_range(2500,6000) {alarmload[6] += 1}else{alarmblabla[6] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[6] = 0}}//endurence
if alarmblabla[7] &lt;= 0 {if alarmstart[7] = 1 {if alarmload[7] &lt; random_range(2500,6000) {alarmload[7] += 1}else{alarmblabla[7] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[7] = 0}}//metabo faible
if alarmblabla[8] &lt;= 0 {if alarmstart[8] = 1 {if alarmload[8] &lt; random_range(2500,6000) {alarmload[8] += 1}else{alarmblabla[8] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[8] = 0}}//fracture
if alarmblabla[9] &lt;= 0 {if alarmstart[9] = 1 {if alarmload[9] &lt; random_range(2500,6000) {alarmload[9] += 1}else{alarmblabla[9] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[9] = 0}}//hemoragie
if alarmblabla[10] &lt;= 0 {if alarmstart[10] = 1 {if alarmload[10] &lt; random_range(2500,6000) {alarmload[10] += 1}else{alarmblabla[10] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[10] = 0}}//forge tape idiot
if alarmblabla[11] &lt;= 0 {if alarmstart[11] = 1 {if alarmload[11] &lt; random_range(2200,6000) {alarmload[11] += 1}else{alarmblabla[11] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[11] = 0}}//poids trop
if alarmblabla[12] &lt;= 0 {if alarmstart[12] = 1 {if alarmload[12] &lt; random_range(2200,6000) {alarmload[12] += 1}else{alarmblabla[12] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[12] = 0}}//trop de ressource pourrais vendre a l'état
if alarmblabla[13] &lt;= 0 {if alarmstart[13] = 1 {if alarmload[13] &lt; random_range(2200,6000) {alarmload[13] += 1}else{alarmblabla[13] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[13] = 0}}//trop de build ,je pourrais construire une maison
if alarmblabla[14] &lt;= 0 {if alarmstart[14] = 1 {if alarmload[14] &lt; random_range(2200,6000) {alarmload[14] += 1}else{alarmblabla[14] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[14] = 0}}//bourré ,j'aurais pas du boire autant
if alarmblabla[15] &lt;= 0 {if alarmstart[15] = 1 {if alarmload[15] &lt; random_range(2200,6000) {alarmload[15] += 1}else{alarmblabla[15] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[15] = 0}}//une tempête ce prépare
if alarmblabla[16] &lt;= 0 {if alarmstart[16] = 1 {if alarmload[16] &lt; random_range(2200,6000) {alarmload[16] += 1}else{alarmblabla[16] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[16] = 0}}//cuisine ,si obj de cuisine et feu
if alarmblabla[17] &lt;= 0 {if alarmstart[17] = 1 {if alarmload[17] &lt; random_range(2200,6000) {alarmload[17] += 1}else{alarmblabla[17] = 300;chooseblabla = choose(1,2,3)}}else{alarmload[17] = 0}}//bar ,shake



alarmstart[1] = 0
if obj_zombie.fusil = 1 &amp;&amp; obj_zombie.ammo &lt; 2 {alarmstart[1] = 1}
if obj_zombie.shootgun = 1 &amp;&amp; obj_zombie.ammo2 &lt; 2 {alarmstart[1] = 1}
if obj_zombie.assaut = 1 &amp;&amp; obj_zombie.ammo3 &lt; 3 {alarmstart[1] = 1}
if obj_zombie.nowthirst &lt; 50  {alarmstart[2] = 1}else{alarmstart[2] = 0}
if obj_zombie.nowhunger &lt; 50 {alarmstart[3] = 1}else{alarmstart[3] = 0}
if obj_zombie.freeze &lt; 50  {alarmstart[4] = 1}else{alarmstart[4] = 0}
if obj_maladie.namemaladie = "" {alarmstart[5] = 0}else{alarmstart[5] = 1}
if obj_zombie.endurencerun &lt; 50  {alarmstart[6] = 1}else{alarmstart[6] = 0}
if totalmetabo &lt; 50  {alarmstart[7] = 1}else{alarmstart[7] = 0}
if brasdroit = 1 or brasgauche = 1 or jambegauche = 1 or jambedroite = 1
{alarmstart[8] = 1}else{alarmstart[8] = 0}
if hemoragie = 1 {alarmstart[9] = 1}else{alarmstart[9] = 0}
if global.blaplayer = 10 {alarmstart[10] = 1}else{alarmstart[10] = 0}//dans obj_cursor
if obj_armorloot.vitessepoids &gt; 1.5 {alarmstart[11] = 1}else{alarmstart[11] = 0}
if global.blaplayer = 12 {alarmstart[12] = 1}else{alarmstart[12] = 0}//dans obj_inventory step
if global.blaplayer = 13 &amp;&amp; global.interieur = 0 {alarmstart[13] = 1}else{alarmstart[13] = 0}//dans obj_inventory step
if obj_bar.alarm[0] &gt; 300 {alarmstart[14] = 1}else{alarmstart[14] = 0}
alarmstart[15] = 0
if obj_superwind.intensite &gt; 0 &amp;&amp; obj_superwind.intensite &lt; 20 {alarmstart[15] = 1}else{}
if global.nbrpart2 &lt;= 20 &amp;&amp; global.nbrpart2 &gt; 0 { alarmstart[15] = 1}else{}
if global.blaplayer = 16  {alarmstart[16] = 1}else{alarmstart[16] = 0}//dans obj_inventory step
if global.blaplayer = 17  {alarmstart[17] = 1}else{alarmstart[17] = 0}//dans obj_cursor


global.blaplayer = 0


//METABO
fat = median(a,b1,b2,b3,b4,b5,b6,b9,b12,c,d,e,vk)


if protein &gt; 0 {protein -= 0.00006}//protéine
if carbs &gt; 0 {carbs -= 0.00004} //glucide
if fiber &gt; 0 {fiber -= 0.00005} //Fibres
if sugar &gt; 0 {sugar -= 0.00008} //sucre
if sfat &gt; 0 {sfat -= 0.00007} // Vitamines liposolubles //lipide non ?
if sodium &gt; 0 {sodium -= 0.00002}

//VITAMINS //energie (vitesse pour appuyer sur la gachette ,courir vite et longtemps,
if a &gt; 0 {a -= 0.000003}
if b1 &gt; 0 {b1 -= 0.000004}
if b2 &gt; 0 {b2 -= 0.000002}
if b3 &gt; 0 {b3 -= 0.000005}
if b4 &gt; 0 {b4 -= 0.000003}
if b5 &gt; 0 {b5 -= 0.000001}
if b6 &gt; 0 {b6 -= 0.000001}
if b9 &gt; 0 {b9 -= 0.000002}
if b12 &gt; 0 {b12 -= 0.000001}
if c &gt; 0 {c -= 0.000004}
if d &gt; 0 {d -= 0.000005}
if e &gt; 0 {e -= 0.000006}
if vk &gt; 0 {vk -= 0.000002}



if totalmetabo &gt; 70 {if obj_zombie.hp &lt; obj_zombie.maxhp {obj_zombie.hp += ((levelapt[2])/1000)}}
//MINERALS
if ca &gt; 0 {ca -= 0.00001} //calcium
if fe &gt; 0 {fe -= 0.00002} //iron //fer
if mg &gt; 0 {mg -= 0.00005} //magnesium
if p &gt; 0 {p -= 0.00001} // phosphorus//phosphore
if k &gt; 0 {k -= 0.00003} //potassium
if zn &gt; 0 {zn -= 0.00001} //zinc 
if cu &gt; 0 {cu -= 0.00002} //copper //cuivre
if mn &gt; 0 {mn -= 0.00001} //manganese //manganèse 
if se &gt; 0 {se -= 0.00004} //selenium

//augmentation de nivo
/*iagma9 = 0
repeat(22){iagma9 += 1
if expapt[iagma9] &gt;= 100 {
levelapt[iagma9] += 1
expapt[iagma9] = 0
if iagma9 = 1 {if endurence &lt; 100 {endurence += 0.3}}
if iagma9 = 2 {if vitality &lt; 100 {vitality += 0.3}}
if iagma9 = 3 {if strengh &lt; 100 {strengh += 0.3}}
if iagma9 = 4 {if metabolism &lt; 100 {metabolism += 0.3}}
if iagma9 = 5 {if freezeresistance &lt; 100 {freezeresistance += 0.3}}
if iagma9 = 6 {if hungerresistance &lt; 100 {hungerresistance += 0.3}}
if iagma9 = 7 {if thirstyresistance &lt; 100 {thirstyresistance += 0.3}}
if iagma9 = 8 {if stressresistance &lt; 100 {endustressresistancerence += 0.3}}
if iagma9 = 9 {if boneresistance &lt; 100 {boneresistance += 0.3}}
if iagma9 = 10 {if bloodresistance &lt; 100 {bloodresistance += 0.3}}
if iagma9 = 11 {if fireresistance &lt; 100 {fireresistance += 0.3}}
//if iagma9 = 12 {if endurence &lt; 100 {endurence += 0.3}}
//if iagma9 = 13 {if endurence &lt; 100 {endurence += 0.3}}
//if iagma9 = 14 {if endurence &lt; 100 {endurence += 0.3}}
if iagma9 = 15 {if pistolskill &lt; 100 {pistolskill += 0.01 ; obj_zombie.weapon1dmg += 0.01 ;}}
if iagma9 = 16 {if assautskill &lt; 100 {assautskill += 0.01; obj_zombie.weapon3dmg += 0.01 ;}}
if iagma9 = 17 {if shootgunskill &lt; 100 {shootgunskill += 0.01; obj_zombie.weapon2dmg += 0.01 ;}}
if iagma9 = 18 {if autohealing &lt; 100 {autohealing += 0.3}}
if iagma9 = 19 {if trading &lt; 100 {trading += 0.3}}
if iagma9 = 20 {if piratage &lt; 100 {piratage += 0.3}}
if iagma9 = 21 {if endurence &lt; 100 {endurence += 0.3}}
}
}*/




if obj_maladie.namemaladie = "" {}else{
if alarm[3] &lt; 0 {
alarm[3] = 1000+random(9000)*global.varfpsmax
}
}




if obj_armorloot.ilaunch = 2 or  obj_armorloot.ilaunch = 1 
or  obj_armorloot.ilaunch = 3 {
if not instance_exists(obj_nextpagestats){
instance_create(x,y,obj_nextpagestats)
}
}else{
with(obj_nextpagestats){
instance_destroy();
}
}


///STATS

missbulletstats = totalbulletstats - touchbulletstats

precisionstats2 =  touchbulletstats / totalbulletstats 
precisionstats = precisionstats2 * 100

//minerals
malusfatiguenutrientvar3 = 1
if obj_bigstats.fatiguetotal3 &lt; 50 &amp;&amp; obj_bigstats.fatiguetotal3 &gt; 20{malusfatiguenutrientvar3 = (0.75+(obj_bigstats.fatiguetotal3/200))}
if obj_bigstats.fatiguetotal3 &lt; 20{malusfatiguenutrientvar3 = 0.85}

//STATUT
if obj_zombie.probsang &gt; (10000*(1+obj_bigstats.bloodresistance/100))*malusfatiguenutrientvar3 {
obj_bigstats.expapt[10] += choose(5,10,15)
hemoragie = 1
obj_zombie.probsang = 0
}

if obj_zombie.probfract &gt; 10000*(1+obj_bigstats.boneresistance/100)*malusfatiguenutrientvar3 {
obj_bigstats.expapt[9] += choose(5,10,15)
choosefract = choose(0,1,2,3) 
if choosefract = 0 {
brasdroit = 1
}
if choosefract = 1 {
brasgauche = 1
}
if choosefract = 2 {
jambegauche = 1
}
if choosefract = 3 {
jambedroite = 1
}
obj_zombie.probfract = 0
}




if obj_zombie.freeze &lt; 2 {
hypotermia = 1
}else{
hypotermia = 0
with(obj_hypotermia){
instance_destroy();
}
}

if room = Menu{}else{
if hemoragie = 1 {
obj_zombie.hp -= 0.001
}}

if brasdroit = 1 or brasgauche = 1 {
obj_zombie.fusil = 1
obj_zombie.shootgun = 0
obj_zombie.assaut = 0
}





///GRADE
//obj_zombie
global.steam_api = false;

//BLOQUER LE JOUEUR ET LE TP SI PAS DANS LES PIECES AUTHORISER
if global.demo = 1 {

if room = room133 or room = room135 or room = room143 or room = room140 or 
room = room142 or room = room155 or room = room156 or room = room136 or 
room = room137 or room = room134 or room = room138 or room = room34 or 
room = room161 or room = room0 or room = Menu or room = room144 or 
room = room139 or room = room141 or room = room157 or room = room163 
or room = room164 or room = room115 {}else{

obj_zombie.x = 5344;
    obj_zombie.y = 7552;
    obj_controllerplayer.x = 5344;
    obj_controllerplayer.y = 7552;
    if room = room133 {}else{
room_goto(room133)}
obj_zombie.x = 5344;
    obj_zombie.y = 7552;
    obj_controllerplayer.x = 5344;
    obj_controllerplayer.y = 7552;

}
}


 if steam_initialised()
    {
    if steam_stats_ready() &amp;&amp; steam_is_overlay_enabled()
       {
       global.steam_api = true;
       //show_message("CONNECTED")
       //if(!steam_get_achievement("ONLINE")) steam_set_achievement("ONLINE");
       }else{//global.demo = 1
       }//si pas co a steam donc pas de jeu valider alors pas de vrai jeu
    }else{//global.demo = 1
    }//si pas co a steam donc pas de jeu valider alors pas de vrai jeu
    if global.demo = 1 {global.steam_api = true;} //pour permettre au gens de co

titrestats = "None"
gradestats = "Citizen"


if obj_zombie.level &gt; 20 {
titrestats = "Sergent"
if global.steam_api = true {
//if(!steam_get_achievement("SERGENT")) steam_set_achievement("SERGENT");
}
}

if nombredejourstats &gt; 30 {
titrestats = "Survivor"
if global.steam_api = true {
//if(!steam_get_achievement("SURVIVOR")) steam_set_achievement("SURVIVOR");
}
}

if  diestats &gt; killnpcstats+5 {
titrestats = "Cannon Fodder"
if global.steam_api = true {
//if(!steam_get_achievement("CANNON FODDER")) steam_set_achievement("CANNON FODDER");
}
}



if obj_zombie.level &gt; 10 {
if precisionstats &lt; 1 {
titrestats = "Dead Drunk"
}
}

if obj_zombie.level &gt; 20 {
if killstats &gt; diestats {
//if obj_zombie.karmaneg &gt; 10000 {
titrestats = "Hitman"
if global.steam_api = true {
//if(!steam_get_achievement("HITMAN")) steam_set_achievement("HITMAN");
}
//}
}}

if obj_zombie.karma &gt; 1000 {
titrestats = "Good guys"
}

if obj_zombie.karmaneg &gt; 1000 {
titrestats = "Decadent"
}


if obj_zombie.karma &gt; 5000 {
titrestats = "Iidealistic"
}

if obj_zombie.karmaneg &gt; 5000 {
titrestats = "Decay"
}



if  tradestats &gt; 200 {
titrestats = "Trader"
}


if walkstats &gt; 10000000 {
titrestats = "Walker"
}





if precisionstats &gt; 50 {
if obj_zombie.level &gt; 20 {
titrestats = "Marksman"
}
}



if precisionstats &gt; 70 {
if obj_zombie.level &gt; 20 {
titrestats = "Sniper"
}
}

if  tradestats &gt; 1000 {
titrestats = "Super Trader"
}


if obj_zombie.karma &gt; 10000 {
titrestats = "Guardian"
}


if obj_zombie.karmaneg &gt; 10000 {
titrestats = "Punisher"
}




if precisionstats &gt; 70 {
if obj_zombie.karma &gt; 10000 {
titrestats = "Sniper Guardian"
}
}


if precisionstats &gt; 70 {
if obj_zombie.karmaneg &gt; 10000 {
gradestats = "Sniper Punisher"
}
}


if obj_zombie.karmaneg &gt; 1000000 {
titrestats = "Dictator"
}

if obj_zombie.karma &gt; 1000000 {
titrestats = "Archangel"
}

if obj_zombie.level &gt; 40 {
if killstats &gt; diestats*2 {
//if obj_zombie.karmaneg &gt; 10000 {
titrestats = "Shadow"
//}
}}

if obj_zombie.level &gt; 80 {
if killstats &gt; diestats*4 {
//if obj_zombie.karmaneg &gt; 10000 {
titrestats = "Death"
//}
}
}

if obj_zombie.level &gt; 100 {
if killstats &gt; killnpcstats*2 {
//if obj_zombie.karmaneg &gt; 10000 {
titrestats = "I Hate People"
//}
}}



if obj_zombie.level &gt; 498 {
titrestats = "Dangerous"
}

if nombredejourstats &gt; 1000 {
titrestats = "Unbreakable"
}

/*if obj_zombie.grademetier = 1 {gradestats = "Banker"}
if obj_zombie.grademetier = 2 {gradestats = "Patrolmen"}
if obj_zombie.grademetier = 3 {gradestats = "Minor"}
if obj_zombie.grademetier = 4 {gradestats = "Bartender"}
if obj_zombie.grademetier = 5 {gradestats = "Blacksmith"}
if obj_zombie.grademetier = 6 {gradestats = "Presidential Guard"}
if obj_zombie.grademetier = 7 {gradestats = "Doctor"}
if obj_zombie.grademetier = 8 {gradestats = "Architect"}
if obj_zombie.grademetier = 9 {gradestats = "Constructor II"}
if obj_zombie.grademetier = 10 {gradestats = "Constructor III"}
if obj_zombie.grademetier = 11 {gradestats = "Constructor IV"}
if obj_zombie.grademetier = 12 {gradestats = "Constructor V"}
*/



//

//if global.language = 1 {
if obj_zombie.grademetier = 1 {gradestats = string(langbeta[0])}else
if obj_zombie.grademetier = 2 {gradestats = string(langbeta[1])}else
if obj_zombie.grademetier = 3 {gradestats = string(langbeta[2])}else
if obj_zombie.grademetier = 4 {gradestats = string(langbeta[3])}else

if obj_zombie.grademetier = 5 {gradestats = string(langbeta[4])}else
if obj_zombie.grademetier = 6 {gradestats = string(langbeta[5])}else

if obj_zombie.grademetier = 7 {gradestats = string(langbeta[6])}else
if obj_zombie.grademetier = 8 {gradestats = string(langbeta[7])}else
if obj_zombie.grademetier = 9 {gradestats = string(langbeta[8])}else
if obj_zombie.grademetier = 10 {gradestats = string(langbeta[9])}else
if obj_zombie.grademetier = 11 {gradestats = string(langbeta[10])}else
if obj_zombie.grademetier = 12 {gradestats = string(langbeta[11])}else
if obj_zombie.grademetier = 13 {gradestats = string(langbeta[12])}else
if obj_zombie.grademetier = 14 {gradestats = string(langbeta[13])}else
if obj_zombie.grademetier = 15 {gradestats = string(langbeta[14])}else
if obj_zombie.grademetier = 16 {gradestats = string(langbeta[15])}else
if obj_zombie.grademetier = 17 {gradestats = string(langbeta[16])}else

if obj_zombie.grademetier = 18 {gradestats = string(langbeta[17])}else
if obj_zombie.grademetier = 19 {gradestats = string(langbeta[18])}else//répare les portes en cas de piratage
if obj_zombie.grademetier = 20 {gradestats = string(langbeta[19])}else



if obj_zombie.grademetier = 21 {gradestats = string(langbeta[20])}else
if obj_zombie.grademetier = 22 {gradestats = string(langbeta[21])}else
if obj_zombie.grademetier = 23 {gradestats = string(langbeta[22])}else
if obj_zombie.grademetier = 24 {gradestats = string(langbeta[23])}else
if obj_zombie.grademetier = 25 {gradestats = string(langbeta[24])}else
if obj_zombie.grademetier = 26 {gradestats = string(langbeta[25])}else
if obj_zombie.grademetier = 27 {gradestats = string(langbeta[26])}else
if obj_zombie.grademetier = 28 {gradestats = string(langbeta[27])}else
if obj_zombie.grademetier = 29 {gradestats = string(langbeta[28])}else

if obj_zombie.grademetier = 30 {gradestats = string(langbeta[29])}else
if obj_zombie.grademetier = 31 {gradestats = string(langbeta[30])}else
if obj_zombie.grademetier = 32 {gradestats = string(langbeta[31])}else
if obj_zombie.grademetier = 33 {gradestats = string(langbeta[32])}else


if obj_zombie.grademetier = 34 {gradestats = string(langbeta[33])}else
if obj_zombie.grademetier = 35 {gradestats = string(langbeta[34])}else
if obj_zombie.grademetier = 36 {gradestats = string(langbeta[35])}else
if obj_zombie.grademetier = 37 {gradestats = string(langbeta[36])}else
if obj_zombie.grademetier = 38 {gradestats = string(langbeta[37])}else
if obj_zombie.grademetier = 39 {gradestats = string(langbeta[38])}else


if obj_zombie.grademetier = 40 {gradestats = string(langbeta[39])}else
if obj_zombie.grademetier = 41 {gradestats = string(langbeta[40])}else
if obj_zombie.grademetier = 42 {gradestats = string(langbeta[41])}else
if obj_zombie.grademetier = 43 {gradestats = string(langbeta[42])}


//}else{
/*
if obj_zombie.grademetier = 1 {gradestats = "Presidential Guard"}else
if obj_zombie.grademetier = 2 {gradestats = "prison guard"}else
if obj_zombie.grademetier = 3 {gradestats = "supply unit"}else
if obj_zombie.grademetier = 4 {gradestats = "Bodyguard"}else

if obj_zombie.grademetier = 5 {gradestats = "Mercenary"}else
if obj_zombie.grademetier = 6 {gradestats = "Bounty Hunter"}else

if obj_zombie.grademetier = 7 {gradestats = "Banker"}else
if obj_zombie.grademetier = 8 {gradestats = "Doctor"}else
if obj_zombie.grademetier = 9 {gradestats = "carrier"}else
if obj_zombie.grademetier = 10 {gradestats = "innkeeper"}else
if obj_zombie.grademetier = 11 {gradestats = "merchant"}else
if obj_zombie.grademetier = 12 {gradestats = "messenger"}else
if obj_zombie.grademetier = 13 {gradestats = "architect "}else
if obj_zombie.grademetier = 14 {gradestats = "digger"}else
if obj_zombie.grademetier = 15 {gradestats = "Bartender"}else
if obj_zombie.grademetier = 16 {gradestats = "Blacksmith"}else
if obj_zombie.grademetier = 17 {gradestats = "farmer"}else

if obj_zombie.grademetier = 18 {gradestats = "hacker "}else
if obj_zombie.grademetier = 19 {gradestats = "repairing"}else//répare les portes en cas de piratage
if obj_zombie.grademetier = 20 {gradestats = "scientific"}else


if obj_zombie.grademetier = 21 {gradestats = "Patroller's soldier "}else
if obj_zombie.grademetier = 22 {gradestats = "Patroller's corporal"}else
if obj_zombie.grademetier = 23 {gradestats = "Patroller's corporal-chief"}else
if obj_zombie.grademetier = 24 {gradestats = "Patroller's sergeant"}else
if obj_zombie.grademetier = 25 {gradestats = "Patroller's sergeant-chief"}else
if obj_zombie.grademetier = 26 {gradestats = "Patroller's Warrant Office"}else
if obj_zombie.grademetier = 27 {gradestats = "Patroller's Chief Warrant Office"}else
if obj_zombie.grademetier = 28 {gradestats = "Patroller's Major "}else
if obj_zombie.grademetier = 29 {gradestats = "Patroller's Chief Military "}else

if obj_zombie.grademetier = 30 {gradestats = "Ephemeral's soldier"}else
if obj_zombie.grademetier = 31 {gradestats = "Ephemeral's Captain"}else
if obj_zombie.grademetier = 32 {gradestats = "Ephemeral's Captain-chief"}else
if obj_zombie.grademetier = 33 {gradestats = "Ephemeral's Chief Military "}else


if obj_zombie.grademetier = 34 {gradestats = "Reaper's soldier"}else
if obj_zombie.grademetier = 35 {gradestats = "Reaper's Captain"}else
if obj_zombie.grademetier = 36 {gradestats = "Reaper's Captain-chief"}else
if obj_zombie.grademetier = 37 {gradestats = "Reaper's elites"}else
if obj_zombie.grademetier = 38 {gradestats = "Reaper's Chief elites"}else
if obj_zombie.grademetier = 39 {gradestats = "Reaper's Chief Military "}else


if obj_zombie.grademetier = 40 {gradestats = "Town's mayor"}else
if obj_zombie.grademetier = 41 {gradestats = "Slum's mayor"}else
if obj_zombie.grademetier = 42 {gradestats = "Slum's Guard"}else
if obj_zombie.grademetier = 43 {gradestats = "Ministery's assistant"}
*/
//}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_clear_alpha( c_white, 0);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

plusarmevue = 20



if obj_zombie.chatlaunch = 0 {
if not instance_exists(obj_armorpiece){
if not instance_exists(obj_buttonbar){
if not instance_exists(obj_buttonechap){
if not instance_exists(obj_buttonforge){

if obj_zombie.keyup = -1 or obj_zombie.keyleft = -1 or obj_zombie.keyright = -1 or obj_zombie.keydown = -1 
or obj_zombie.keyweaponnext = -1 or obj_zombie.keygrenade = -1 or obj_zombie.keyinv = -1 or 
obj_zombie.keycraft = -1 or obj_zombie.keyeconomie = -1 or obj_zombie.keymap = -1 or obj_zombie.keyskill1 = -1 
or obj_zombie.keyskill2 = -1 or obj_zombie.keyskill3 = -1 or obj_zombie.keyskill4 = -1  {}else{

if keyboard_check_pressed(ord(obj_zombie.keyinv)) {


if obj_armorloot.ilaunch = 2 {



//ilaunch = 0
if instance_exists(obj_medicament){
with(obj_medicament){
instance_destroy();
}
}
if instance_exists(obj_buttonguilde){
with(obj_buttonguilde){
visibility = 0
}}
if instance_exists(obj_loyer){
with(obj_loyer){
instance_destroy();
}
}
if instance_exists(obj_languagenow){
with(obj_languagenow){
instance_destroy();
}
}

if instance_exists(obj_hypotermia){
with(obj_hypotermia){
instance_destroy();
}
}
if instance_exists(obj_hemoragie){
with(obj_hemoragie){
instance_destroy();
}}
if instance_exists(obj_fracture){
with(obj_fracture){
instance_destroy();
}}


if instance_exists(obj_head){
with(obj_head){
instance_destroy();
}
}
if instance_exists(obj_legs){
with(obj_legs){
instance_destroy();
}
}
if instance_exists(obj_glove){
with(obj_glove){
instance_destroy();
}
}
if instance_exists(obj_body){
with(obj_body){
instance_destroy();
}
}

}else{
//ilaunch = 1
}


}
}

if obj_armorloot.ilaunch = 1 {
//decors principal
obj_buttonguilde.visibility = 1
draw_set_color(colortext2);

var x1,x2,y1,y2;
x1 = view_xview[0];
x2 = x1 + view_wview;//view_wview[0];
y1 = view_yview[0];
y2 = y1 + view_hview;


draw_set_color(c_black);
draw_set_alpha(1);
draw_rectangle(x1,y1,x2,y2,0);
draw_set_alpha(1);
draw_set_color(colortext2);
imagespeed += 0.5
if imagespeed &gt; image_number  { demaragepralax = 1}
if demaragepralax = 0 {
draw_sprite_ext(spr_demarageparalax,imagespeed,view_xview+(view_wview/2),view_yview+(view_hview/2),1,1,0,c_white,1)}else{
    dist = point_distance(view_xview+(view_wview/2),view_yview+(view_hview/2),mouse_x,mouse_y)
    d2 = point_direction(view_xview+(view_wview/2),view_yview+(view_hview/2),mouse_x,mouse_y)
    distmax = 6000
    if dist &lt; distmax {}else{dist = distmax}
    distequi = 130 //plu il est bas plu la parallax est forte
    distreact = (dist/(distmax/1))
    if distreact &lt; 0.1 {distreact = 0.1}
    x2 = view_xview+(view_wview/2) 
    y2 = view_yview+(view_hview/2)
    
    scalex1 = 1+(1*((dist/6000)))
    scaley1 = 1+(1*((dist/6000)))
    scalex2 = 1+(1*((dist/3000)))
    scaley2 = 1+(1*((dist/3000)))
    scalex3 = 1+(1*((dist/1500)))
    scaley3 = 1+(1*((dist/1500)))
    scalex4 = 1+(1*((dist/750)))
    scaley4 = 1+(1*((dist/750)))
    
draw_sprite_ext(spr_paralax1,imagespeed,x2+ lengthdir_x(((dist/distequi)/distreact*1),d2)
,y2 + lengthdir_y(((dist/distequi)/distreact*1),d2),scalex1,scaley1,0,c_white,1);
draw_sprite_ext(spr_paralax2,imagespeed,x2+ lengthdir_x(((dist/distequi)/distreact*2),d2)
,y2 + lengthdir_y(((dist/distequi)/distreact*2),d2),scalex2,scaley2,0,c_white,1)
draw_sprite_ext(spr_paralax3,imagespeed,x2+ lengthdir_x(((dist/distequi)/distreact*3),d2)
,y2 + lengthdir_y(((dist/distequi)/distreact*3),d2),scalex3,scaley3,0,c_white,1)
draw_sprite_ext(spr_paralax4,imagespeed,x2+ lengthdir_x(((dist/distequi)/distreact*4),d2)
,y2 + lengthdir_y(((dist/distequi)/distreact*4),d2),scalex4,scaley4,0,c_white,1)
}

//draw_sprite_ext( spr_barfond, image_index, view_xview, view_yview, 1, 1, 0, c_white, 1 );//view_xview+685, view_yview+385

if imagespeed2 &lt; 22 {imagespeed2 += 0.5}
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+266, view_yview+395, 1.33, 1.8, 90, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+681, view_yview+163, 0.70, 1.1, 0, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+1066, view_yview+163, 0.70, 1.1, 0, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+681, view_yview+527, 0.85, 1.65, 90, c_white, 1 );
draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+1066, view_yview+527, 0.85,1.65, 90, c_white, 1 );


//draw_text_outline(view_xview + 1100,view_yview + 10," TAP 'I' FOR NEXT PAGE ")
if imagespeed2 &lt; 22 {}else{
draw_sprite_ext( spr_statsplayer, image_index, view_xview+296, view_yview+375, 1, 1, 0, c_white, 1 );

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);

draw_set_halign(fa_left);
//if global.language = 1 {
//info d'armure

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);

draw_text_outline(view_xview + 525,view_yview + 320,string(langbeta[43]),c_black)
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
draw_healthbar(view_xview+525-5, view_yview+370+2, view_xview+525+316, view_yview+370+16,
 (obj_armorloot.armortotalgear*obj_zombie.armorarmouring*obj_zombie.duraarmure*obj_zombie.maxhp/100/obj_zombie.talentbonusarmure*obj_bar.nowalchivie)/10000, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 525,view_yview + 370,string(langbeta[44])+string(obj_armorloot.armortotalgear*obj_zombie.armorarmouring*obj_zombie.duraarmure*obj_zombie.maxhp/100/obj_zombie.talentbonusarmure*obj_bar.nowalchivie),c_black)
draw_healthbar(view_xview+525-5, view_yview+390+2, view_xview+525+316, view_yview+390+16,
 obj_armorloot.armortotalgear/10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview+525 ,view_yview + 390,string(langbeta[45])+string(obj_armorloot.armortotalgear),c_black)    //total de defence de l'armure
draw_healthbar(view_xview+525-5, view_yview+410+2, view_xview+525+316, view_yview+410+16,
 obj_armorloot.armortotalgeardps/10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview+525 ,view_yview + 410,string(langbeta[46])+string(obj_armorloot.armortotalgeardps),c_black)    //total de defence de l'armure

//draw_text_outline(view_xview + 550,view_yview + 480,"Durability : "+string(obj_zombie.duraarmure))
draw_healthbar(view_xview+525-5, view_yview+430+2, view_xview+525+316, view_yview+430+16,
 obj_bar.nowalchivie, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 525,view_yview + 430,string(langbeta[47])+string(obj_bar.nowalchivie),c_black)
draw_healthbar(view_xview+525-5, view_yview+450+2, view_xview+525+316, view_yview+450+16,
 obj_zombie.armorarmouring, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 525,view_yview + 450,string(langbeta[48])+string(obj_zombie.armorarmouring),c_black)

//INFO DPS
draw_text_outline(view_xview + 911,view_yview + 630,string(langbeta[49])+string(missbulletstats),c_black)
draw_text_outline(view_xview + 911,view_yview + 650,string(langbeta[50])+string(touchbulletstats),c_black)
draw_healthbar(view_xview+911-5, view_yview+670+2, view_xview+911+316, view_yview+670+16,
 precisionstats, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 670,string(langbeta[51])+string(precisionstats),c_black)

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 911,view_yview + 320,string(langbeta[52]),c_black)
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
if obj_zombie.shootgun = 1 {

if obj_weapon.val2 &lt; 0.2 {draw_set_colour(c_white);valtitre = " [Commun] "}else
if obj_weapon.val2 &gt; 0.2 {draw_set_colour(c_green);valtitre = " [Inhabituel] "}else
if obj_weapon.val2 &gt; 0.4 {draw_set_colour(c_blue);valtitre = " [Rare] "}else
if obj_weapon.val2 &gt; 0.6 {draw_set_colour(c_purple);valtitre = " [Épique] "}else
if obj_weapon.val2 &gt; 0.8 {draw_set_colour(c_red);valtitre = " [Légendaire] "}
draw_healthbar(view_xview+911-5, view_yview+510+2, view_xview+911+316, view_yview+510+16,
 obj_weapon.val2*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 510,string(langbeta[53])+string(obj_weapon.infoweapon)+string(valtitre)+string(obj_weapon.val2*100)+" %",c_black)

//draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val2*100)+" %",c_black)
draw_set_color(colortext2);
draw_healthbar(view_xview+911-5, view_yview+370+2, view_xview+911+316, view_yview+370+16,
 (obj_armorloot.armortotalgeardps*obj_zombie.weapon2dmg*obj_zombie.weapon2bpm*obj_weapon.shootdamage*(1/obj_weapon.shootbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat)/10000, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 370,string(langbeta[54])+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon2dmg*obj_zombie.weapon2bpm*obj_weapon.shootdamage*(1/obj_weapon.shootbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat),c_black)


draw_healthbar(view_xview+911-5, view_yview+410+2, view_xview+911+316, view_yview+410+16,
 (obj_zombie.weapon2bpm-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 410,string(langbeta[55])+string(obj_zombie.weapon2bpm ),c_black)
draw_healthbar(view_xview+911-5, view_yview+430+2, view_xview+911+316, view_yview+430+16,
 (obj_zombie.weapon2bullet-1)*5, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 430,string(langbeta[56])+string(obj_zombie.weapon2bullet),c_black)
draw_healthbar(view_xview+911-5, view_yview+450+2, view_xview+911+316, view_yview+450+16,
 (obj_zombie.weapon2reload-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 450,string(langbeta[57])+string(obj_zombie.weapon2reload),c_black)
draw_healthbar(view_xview+911-5, view_yview+390+2, view_xview+911+316, view_yview+390+16,
 (obj_zombie.weapon2dmg-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 390,string(langbeta[58])+string(obj_zombie.weapon2dmg),c_black)
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_healthbar(view_xview+911-5, view_yview+530+2, view_xview+911+316, view_yview+530+16,
 (3-obj_weapon.shootprecision)*33, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 530,string(langbeta[59])+string(obj_weapon.shootprecision),c_black)
draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
 obj_weapon.shootdamage, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[60])+string(obj_weapon.shootdamage),c_black)
//draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
// obj_weapon.shootreload*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
//draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[61])+string(obj_weapon.shootreload),c_black)
draw_healthbar(view_xview+911-5, view_yview+570+2, view_xview+911+316, view_yview+570+16,
 (2-obj_weapon.shootbpm)*50, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 570,string(langbeta[62])+string(1/obj_weapon.shootbpm),c_black)
draw_healthbar(view_xview+911-5, view_yview+590+2, view_xview+911+316, view_yview+590+16,
 obj_weapon.shootchg, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 590,string(langbeta[63])+string(obj_weapon.shootchg),c_black)
//draw_text_outline(view_xview + 911,view_yview + 610,"Durabilité : "+string(global.duraarme2*10))

}
if obj_zombie.assaut = 1 {
if obj_weapon.val3 &lt; 0.2 {draw_set_colour(c_white);valtitre = " [Commun] "}else
if obj_weapon.val3 &gt; 0.2 {draw_set_colour(c_green);valtitre = " [Inhabituel] "}else
if obj_weapon.val3 &gt; 0.4 {draw_set_colour(c_blue);valtitre = " [Rare] "}else
if obj_weapon.val3 &gt; 0.6 {draw_set_colour(c_purple);valtitre = " [Épique] "}else
if obj_weapon.val3 &gt; 0.8 {draw_set_colour(c_red);valtitre = " [Légendaire] "}

draw_healthbar(view_xview+911-5, view_yview+510+2, view_xview+911+316, view_yview+510+16,
 obj_weapon.val3*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 510,string(langbeta[53])+string(obj_weapon.infoweapon)+string(valtitre)+string(obj_weapon.val3*100)+" %",c_black)

//draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val3*100)+" %",c_black)
draw_set_color(colortext2);

draw_healthbar(view_xview+911-5, view_yview+370+2, view_xview+911+316, view_yview+370+16,
 (obj_armorloot.armortotalgeardps*obj_zombie.weapon3dmg*obj_zombie.weapon3bpm*obj_weapon.assautdamage*(1/obj_weapon.assautbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat)/10000, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 370,string(langbeta[54])+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon3dmg*obj_zombie.weapon3bpm*obj_weapon.assautdamage*(1/obj_weapon.assautbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat),c_black)

draw_healthbar(view_xview+911-5, view_yview+390+2, view_xview+911+316, view_yview+390+16,
 (obj_zombie.weapon3dmg-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 390,string(langbeta[58])+string(obj_zombie.weapon3dmg),c_black)
draw_healthbar(view_xview+911-5, view_yview+410+2, view_xview+911+316, view_yview+410+16,
 (obj_zombie.weapon3bpm-1)*5, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 410,string(langbeta[55])+string(obj_zombie.weapon3bpm ),c_black)
draw_healthbar(view_xview+911-5, view_yview+430+2, view_xview+911+316, view_yview+430+16,
 (obj_zombie.weapon3bullet-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 430,string(langbeta[56])+string(obj_zombie.weapon3bullet),c_black)
draw_healthbar(view_xview+911-5, view_yview+450+2, view_xview+911+316, view_yview+450+16,
 (obj_zombie.weapon3reload-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 450,string(langbeta[57])+string(obj_zombie.weapon3reload),c_black)
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_healthbar(view_xview+911-5, view_yview+530+2, view_xview+911+316, view_yview+530+16,
 (3-obj_weapon.assautprecision)*33, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 530,string(langbeta[59])+string(obj_weapon.assautprecision),c_black)
draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
 obj_weapon.assautdamage, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[60])+string(obj_weapon.assautdamage),c_black)
//draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
// obj_weapon.assautreload*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
//draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[61])+string(obj_weapon.assautreload),c_black)
draw_healthbar(view_xview+911-5, view_yview+570+2, view_xview+911+316, view_yview+570+16,
 (2-obj_weapon.assautbpm)*50, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 570,string(langbeta[62])+string(1/obj_weapon.assautbpm),c_black)
draw_healthbar(view_xview+911-5, view_yview+590+2, view_xview+911+316, view_yview+590+16,
 obj_weapon.assautchg, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 590,string(langbeta[63])+string(obj_weapon.assautchg),c_black)
//draw_text_outline(view_xview + 911,view_yview + 610,"Weapon durability : "+string(global.duraarme3*10))
}

if obj_zombie.fusil = 1 {

if obj_weapon.val1 &lt; 0.2 {draw_set_colour(c_white);valtitre = " [Commun] "}else
if obj_weapon.val1 &gt; 0.2 {draw_set_colour(c_green);valtitre = " [Inhabituel] "}else
if obj_weapon.val1 &gt; 0.4 {draw_set_colour(c_blue);valtitre = " [Rare] "}else
if obj_weapon.val1 &gt; 0.6 {draw_set_colour(c_purple);valtitre = " [Épique] "}else
if obj_weapon.val1 &gt; 0.8 {draw_set_colour(c_red);valtitre = " [Légendaire] "}
draw_healthbar(view_xview+911-5, view_yview+510+2, view_xview+911+316, view_yview+510+16,
 obj_weapon.val1*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 510,string(langbeta[53])+string(obj_weapon.infoweapon)+string(valtitre)+string(obj_weapon.val1*100)+" %",c_black)


//draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val1*100)+" %",c_black)
draw_set_color(colortext2);
draw_healthbar(view_xview+911-5, view_yview+370+2, view_xview+911+316, view_yview+370+16,
(obj_armorloot.armortotalgeardps*obj_zombie.weapon1dmg*obj_zombie.weapon1bpm*obj_weapon.gundamage*(1/obj_weapon.gunbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat)/10000, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 370,string(langbeta[54])+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon1dmg*obj_zombie.weapon1bpm*obj_weapon.gundamage*(1/obj_weapon.gunbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat),c_black)

draw_healthbar(view_xview+911-5, view_yview+390+2, view_xview+911+316, view_yview+390+16,
 (obj_zombie.weapon1dmg-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 390,string(langbeta[58])+string(obj_zombie.weapon1dmg),c_black)
draw_healthbar(view_xview+911-5, view_yview+410+2, view_xview+911+316, view_yview+410+16,
 (obj_zombie.weapon1bpm-1)*5, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 410,string(langbeta[55])+string(obj_zombie.weapon1bpm ),c_black)
draw_healthbar(view_xview+911-5, view_yview+430+2, view_xview+911+316, view_yview+430+16,
 (obj_zombie.weapon1bullet-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 430,string(langbeta[56])+string(obj_zombie.weapon1bullet),c_black)
draw_healthbar(view_xview+911-5, view_yview+450+2, view_xview+911+316, view_yview+450+16,
 (obj_zombie.weapon1reload-1)*10, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 450,string(langbeta[57])+string(obj_zombie.weapon1reload),c_black)
draw_set_font(fnt_little16);//draw_set_font(fnt_small);
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);

draw_healthbar(view_xview+911-5, view_yview+530+2, view_xview+911+316, view_yview+530+16,
 (3-obj_weapon.gunprecision)*33, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 530,string(langbeta[59])+string(obj_weapon.gunprecision),c_black)
draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
 obj_weapon.gundamage, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[60])+string(obj_weapon.gundamage),c_black)
//draw_healthbar(view_xview+911-5, view_yview+550+2, view_xview+911+316, view_yview+550+16,
// obj_weapon.gunreload*100, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
//draw_text_outline(view_xview + 911,view_yview + 550,string(langbeta[61])+string(obj_weapon.gunreload),c_black)
draw_healthbar(view_xview+911-5, view_yview+570+2, view_xview+911+316, view_yview+570+16,
 (2-obj_weapon.gunbpm)*50, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 570,string(langbeta[62])+string(1/obj_weapon.gunbpm),c_black)
draw_healthbar(view_xview+911-5, view_yview+590+2, view_xview+911+316, view_yview+590+16,
 obj_weapon.gunchg, c_black, obj_bigstats.colortext2, obj_bigstats.colortext2, 0, true, false);
draw_text_outline(view_xview + 911,view_yview + 590,string(langbeta[63])+string(obj_weapon.gunchg),c_black)
//draw_text_outline(view_xview + 911,view_yview + 610,"Weapon durability : "+string(global.duraarme*10))

}



//GRADE ET STATS PLAYER

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 525,view_yview + 60,string(langbeta[64]),c_black)
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);

draw_text_outline(view_xview + 525,view_yview + 120,string(langbeta[65])+string(obj_zombie.idfixe),c_black)
if obj_zombie.grademetier &gt; 0 {
if not instance_exists(obj_buttonjob){
instance_create(x,y,obj_buttonjob)
}




draw_text_outline(view_xview + 525,view_yview + 140,string(langbeta[66])+string(gradestats),c_black)
}else{
draw_text_outline(view_xview + 525,view_yview + 140,string(langbeta[67])+string(gradestats),c_black)
}
draw_text_outline(view_xview  + 525 ,view_yview + 160,string(langbeta[68])+string(obj_zombie.level),c_black)
if obj_zombie.karma &gt; 0 {
draw_text_outline(view_xview  + 525 ,view_yview + 180,string(langbeta[69])+string(obj_zombie.karma),c_black)
}else{
if obj_zombie.karmaneg &gt; 0 {
draw_text_outline(view_xview  + 525 ,view_yview + 180,string(langbeta[70])+string(obj_zombie.karmaneg),c_black)
}
}
draw_text_outline(view_xview  + 525 ,view_yview + 200,string(langbeta[71])+string(diestats),c_black)
if mode4 = 0 {
draw_text_outline(view_xview  + 525,view_yview + 220,string(langbeta[72])+string(killstats),c_black)
}else{
draw_text_outline(view_xview  + 525,view_yview + 220,string(langbeta[73])+string(killnpcstats),c_black)
}
if mode4 = 0 {
if obj_guilde.guildenow = "" {
draw_text_outline(view_xview  + 525,view_yview + 240,string(langbeta[74])+string(obj_guilde.guilde),c_black)
}else{
draw_text_outline(view_xview  + 525,view_yview + 240,string(langbeta[74])+string(obj_guilde.guildenow),c_black)
}
}else{
draw_text_outline(view_xview  + 525,view_yview + 240,string(langbeta[75])+string(obj_guilde.guildesend),c_black)
}
if obj_guilde.guilde = "" {
if not instance_exists(obj_buttonguilde){
//instance_create(view_xview + 730,view_yview + 250,obj_buttonguilde)

}
}

//draw_text_outline(view_xview  + 525,view_yview + 260,"SCORE : "+string(obj_guilde.point))


//ECO-SYSTEME

draw_text_outline(view_xview + 911,view_yview + 100,string(langbeta[76])+string(obj_maladie.namemaladie),c_black)
draw_text_outline(view_xview + 911,view_yview + 120,string(langbeta[77])+string(walkstats),c_black)
draw_text_outline(view_xview + 911,view_yview + 80,string(langbeta[78])+string(nombredejourstats),c_black)

if obj_langue.languenowspeak = 0 {
draw_text_outline(view_xview + 911,view_yview + 140,string(langbeta[79])+"100 "+"%",c_black)
}
if obj_langue.languenowspeak = 1 {
draw_text_outline(view_xview + 911,view_yview + 140,"Mandarin : "+string(round(obj_langue.mandarin))+"%",c_black)
}
if obj_langue.languenowspeak = 2 {
draw_text_outline(view_xview + 911,view_yview + 140,"Hindi : "+string(round(obj_langue.hindi))+"%",c_black)
}
if obj_langue.languenowspeak = 3 {
draw_text_outline(view_xview + 911,view_yview + 140,"Anglais : "+string(round(obj_langue.anglais))+"%",c_black)
}
if obj_langue.languenowspeak = 4 {
draw_text_outline(view_xview + 911,view_yview + 140,"Espagnol : "+string(round(obj_langue.espagnol))+"%",c_black)
}
if obj_langue.languenowspeak = 5 {
draw_text_outline(view_xview + 911,view_yview + 140,"arabe : "+string(round(obj_langue.arabe))+"%",c_black)
}
if obj_langue.languenowspeak = 6 {
draw_text_outline(view_xview + 911,view_yview + 140,"indonesien : "+string(round(obj_langue.indonesien))+"%",c_black)
}
if obj_langue.languenowspeak = 7 {
draw_text_outline(view_xview + 911,view_yview + 140,"portugais : "+string(round(obj_langue.portugais))+"%",c_black)
}
if obj_langue.languenowspeak = 8 {
draw_text_outline(view_xview + 911,view_yview + 140,"francais : "+string(round(obj_langue.francais))+"%",c_black)
}
if obj_langue.languenowspeak = 9 {
draw_text_outline(view_xview + 911,view_yview + 140,"bengali : "+string(round(obj_langue.bengali))+"%",c_black)
}
if obj_langue.languenowspeak = 10 {
draw_text_outline(view_xview + 911,view_yview + 140,"russe : "+string(round(obj_langue.russe))+"%",c_black)
}
if obj_langue.languenowspeak = 11 {
draw_text_outline(view_xview + 911,view_yview + 140,"japonais : "+string(round(obj_langue.japonais))+"%",c_black)
}
if obj_langue.languenowspeak = 12 {
draw_text_outline(view_xview + 911,view_yview + 140,"allemand : "+string(round(obj_langue.allemand))+"%",c_black)
}
if obj_langue.languenowspeak = 13 {
draw_text_outline(view_xview + 911,view_yview + 140,"punjabi : "+string(round(obj_langue.punjabi))+"%",c_black)
}
if obj_langue.languenowspeak = 14 {
draw_text_outline(view_xview + 911,view_yview + 140,"javanais : "+string(round(obj_langue.javanais))+"%",c_black)
}
if obj_langue.languenowspeak = 15 {
draw_text_outline(view_xview + 911,view_yview + 140,"italien : "+string(round(obj_langue.italien))+"%",c_black)
}
draw_text_outline(view_xview + 911,view_yview + 160,string(langbeta[80])+string(obj_bar.levelalchimie2),c_black)
draw_text_outline(view_xview + 911,view_yview + 180,string(langbeta[81])+string(obj_forge.levelforge),c_black)
draw_text_outline(view_xview + 911,view_yview + 200,string(langbeta[82])+string(levelmine),c_black)
draw_text_outline(view_xview + 911,view_yview + 220,string(langbeta[83])+string(obj_healgun.level),c_black)
draw_text_outline(view_xview + 911,view_yview + 240,string(langbeta[84])+string(100 - ((obj_armorloot.vitessepoids*100)-100)),c_black)


/*}else {
//info d'armure
draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 525,view_yview + 320,"PROTECTION")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
draw_text_outline(view_xview + 525,view_yview + 370,"TOTAL ARMOURING : "+string(obj_armorloot.armortotalgear*obj_zombie.armorarmouring*obj_zombie.duraarmure*obj_zombie.maxhp/100/obj_zombie.talentbonusarmure*obj_bar.nowalchivie))
draw_text_outline(view_xview+525 ,view_yview + 390,"Total Gear Defence  = "+string(obj_armorloot.armortotalgear))    //total de defence de l'armure
draw_text_outline(view_xview+525 ,view_yview + 410,"Total Gear Damage  = "+string(obj_armorloot.armortotalgeardps))    //total de defence de l'armure

//draw_text_outline(view_xview + 550,view_yview + 480,"Durability : "+string(obj_zombie.duraarmure))
draw_text_outline(view_xview + 525,view_yview + 430,"Durability bonus : X "+string(obj_zombie.armordurability))
draw_text_outline(view_xview + 525,view_yview + 450,"Armouring bonus : X "+string(obj_zombie.armorarmouring))

//INFO DPS
draw_text_outline(view_xview + 911,view_yview + 630,"Bullet missed : "+string(missbulletstats))
draw_text_outline(view_xview + 911,view_yview + 650,"Bullet contact : "+string(touchbulletstats))
draw_text_outline(view_xview + 911,view_yview + 670,"Precision : "+string(precisionstats))

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 911,view_yview + 320,"DAMAGE")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_little);
if obj_zombie.shootgun = 1 {

if obj_weapon.val2 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val2 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val2 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val2 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val2 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text_outline(view_xview + 911,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))
draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val2*100)+" %")
draw_set_color(colortext2);
draw_text_outline(view_xview + 911,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon2dmg*obj_zombie.weapon2bpm*obj_weapon.shootdamage*(1/obj_weapon.shootbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))


draw_text_outline(view_xview + 911,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon2bpm ))
draw_text_outline(view_xview + 911,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon2bullet))
draw_text_outline(view_xview + 911,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon2reload))
draw_text_outline(view_xview + 911,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon2dmg))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 911,view_yview + 510,"Weapon precision : "+string(obj_weapon.shootprecision))
draw_text_outline(view_xview + 911,view_yview + 530,"Weapon damage : X "+string(obj_weapon.shootdamage))
draw_text_outline(view_xview + 911,view_yview + 550,"Weapon reload : X "+string(obj_weapon.shootreload))
draw_text_outline(view_xview + 911,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.shootbpm))
draw_text_outline(view_xview + 911,view_yview + 590,"Weapon capacity : "+string(obj_weapon.shootchg))
draw_text_outline(view_xview + 911,view_yview + 610,"Weapon durability : "+string(global.duraarme2*10))

}
if obj_zombie.assaut = 1 {
if obj_weapon.val3 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val3 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val3 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val3 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val3 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text_outline(view_xview + 911,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))
draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val3*100)+" %")
draw_set_color(colortext2);

draw_text_outline(view_xview + 911,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon3dmg*obj_zombie.weapon3bpm*obj_weapon.assautdamage*(1/obj_weapon.assautbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text_outline(view_xview + 911,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon3dmg))
draw_text_outline(view_xview + 911,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon3bpm ))
draw_text_outline(view_xview + 911,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon3bullet))
draw_text_outline(view_xview + 911,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon3reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);

draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 911,view_yview + 510,"Weapon precision : "+string(obj_weapon.assautprecision))
draw_text_outline(view_xview + 911,view_yview + 530,"Weapon damage : X "+string(obj_weapon.assautdamage))
draw_text_outline(view_xview + 911,view_yview + 550,"Weapon reload : X "+string(obj_weapon.assautreload))
draw_text_outline(view_xview + 911,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.assautbpm))
draw_text_outline(view_xview + 911,view_yview + 590,"Weapon capacity : "+string(obj_weapon.assautchg))
draw_text_outline(view_xview + 911,view_yview + 610,"Weapon durability : "+string(global.duraarme3*10))
}

if obj_zombie.fusil = 1 {

if obj_weapon.val1 &lt; 0.2 {draw_set_colour(c_white);valtitre = "[Common] "}else
if obj_weapon.val1 &gt; 0.2 {draw_set_colour(c_green);valtitre = "[Unusual] "}else
if obj_weapon.val1 &gt; 0.4 {draw_set_colour(c_blue);valtitre = "[Rare] "}else
if obj_weapon.val1 &gt; 0.6 {draw_set_colour(c_purple);valtitre = "[Epic] "}else
if obj_weapon.val1 &gt; 0.8 {draw_set_colour(c_red);valtitre = "[Legendary] "}
draw_text_outline(view_xview + 911,view_yview + 490,"WEAPON : "+string(obj_weapon.infoweapon))

draw_text_outline(view_xview + 911,view_yview + 470,string(valtitre)+string(obj_weapon.val1*100)+" %")
draw_set_color(colortext2);
draw_text_outline(view_xview + 911,view_yview + 370,"TOTAL DAMAGE : "+string(obj_armorloot.armortotalgeardps*obj_zombie.weapon1dmg*obj_zombie.weapon1bpm*obj_weapon.gundamage*(1/obj_weapon.gunbpm)*obj_zombie.mindmg*obj_zombie.talentbonusdegat))

draw_text_outline(view_xview + 911,view_yview + 390,"Weapon damage bonus : X "+string(obj_zombie.weapon1dmg))
draw_text_outline(view_xview + 911,view_yview + 410,"Rate of fire bonus : X "+string(obj_zombie.weapon1bpm ))
draw_text_outline(view_xview + 911,view_yview + 430,"Magazine capacity bonus : + "+string(obj_zombie.weapon1bullet))
draw_text_outline(view_xview + 911,view_yview + 450,"Speed reloading bonus : X "+string(obj_zombie.weapon1reload))
draw_set_font(fnt_little16);//draw_set_font(fnt_small);
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 911,view_yview + 510,"Weapon precision : "+string(obj_weapon.gunprecision))
draw_text_outline(view_xview + 911,view_yview + 530,"Weapon damage : X "+string(obj_weapon.gundamage))
draw_text_outline(view_xview + 911,view_yview + 550,"Weapon reload : X "+string(obj_weapon.gunreload))
draw_text_outline(view_xview + 911,view_yview + 570,"Weapon BPM : X "+string(1/obj_weapon.gunbpm))
draw_text_outline(view_xview + 911,view_yview + 590,"Weapon capacity : "+string(obj_weapon.gunchg))
draw_text_outline(view_xview + 911,view_yview + 610,"Weapon durability : "+string(global.duraarme*10))

}



//GRADE ET STATS PLAYER

draw_set_font(fnt_titreroadmovie);//draw_set_font(fnt_small);
draw_text_outline(view_xview + 525,view_yview + 60,"characteristics")
draw_set_font(fnt_sfoldrepublic);//draw_set_font(fnt_small);

draw_text_outline(view_xview + 525,view_yview + 120,"ID : "+string(obj_zombie.idfixe))
if obj_zombie.grademetier &gt; 0 {
if not instance_exists(obj_buttonjob){
instance_create(x,y,obj_buttonjob)
}


draw_text_outline(view_xview + 525,view_yview + 140,"JOB : "+string(gradestats))
}else{
draw_text_outline(view_xview + 525,view_yview + 140,"GRADE : "+string(gradestats))
}
draw_text_outline(view_xview  + 525 ,view_yview + 160,"Level : "+string(obj_zombie.level))
if obj_zombie.karma &gt; 0 {
draw_text_outline(view_xview  + 525 ,view_yview + 180,"Karma : "+string(obj_zombie.karma))
}else{
if obj_zombie.karmaneg &gt; 0 {
draw_text_outline(view_xview  + 525 ,view_yview + 180,"Karma negative: "+string(obj_zombie.karmaneg))
}
}
draw_text_outline(view_xview  + 525 ,view_yview + 200,"Dead : "+string(diestats))
if mode4 = 0 {
draw_text_outline(view_xview  + 525,view_yview + 220,"Player kill : "+string(killstats))
}else{
draw_text_outline(view_xview  + 525,view_yview + 220,"Npc kill : "+string(killnpcstats))
}
if mode4 = 0 {
if obj_guilde.guildenow = "" {
draw_text_outline(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guilde))
}else{
draw_text_outline(view_xview  + 525,view_yview + 240,"Guilde : "+string(obj_guilde.guildenow))
}
}else{
draw_text_outline(view_xview  + 525,view_yview + 240,"Guilde ID : "+string(obj_guilde.guildesend))
}
if obj_guilde.guilde = "" {
if not instance_exists(obj_buttonguilde){
//instance_create(view_xview + 730,view_yview + 250,obj_buttonguilde)

}
}

//draw_text_outline(view_xview  + 525,view_yview + 260,"SCORE : "+string(obj_guilde.point))


//ECO-SYSTEME

draw_text_outline(view_xview + 911,view_yview + 100,"Seekness : "+string(obj_maladie.namemaladie))
draw_text_outline(view_xview + 911,view_yview + 120,"Distance travelled : "+string(walkstats))
draw_text_outline(view_xview + 911,view_yview + 80,"Day Survived : "+string(nombredejourstats))

if obj_langue.languenowspeak = 0 {
draw_text_outline(view_xview + 911,view_yview + 140,"Langue Commune : "+"100 "+"%")
}
if obj_langue.languenowspeak = 1 {
draw_text_outline(view_xview + 911,view_yview + 140,"Mandarin : "+string(round(obj_langue.mandarin))+"%")
}
if obj_langue.languenowspeak = 2 {
draw_text_outline(view_xview + 911,view_yview + 140,"Hindi : "+string(round(obj_langue.hindi))+"%")
}
if obj_langue.languenowspeak = 3 {
draw_text_outline(view_xview + 911,view_yview + 140,"Anglais : "+string(round(obj_langue.anglais))+"%")
}
if obj_langue.languenowspeak = 4 {
draw_text_outline(view_xview + 911,view_yview + 140,"Espagnol : "+string(round(obj_langue.espagnol))+"%")
}
if obj_langue.languenowspeak = 5 {
draw_text_outline(view_xview + 911,view_yview + 140,"arabe : "+string(round(obj_langue.arabe))+"%")
}
if obj_langue.languenowspeak = 6 {
draw_text_outline(view_xview + 911,view_yview + 140,"indonesien : "+string(round(obj_langue.indonesien))+"%")
}
if obj_langue.languenowspeak = 7 {
draw_text_outline(view_xview + 911,view_yview + 140,"portugais : "+string(round(obj_langue.portugais))+"%")
}
if obj_langue.languenowspeak = 8 {
draw_text_outline(view_xview + 911,view_yview + 140,"francais : "+string(round(obj_langue.francais))+"%")
}
if obj_langue.languenowspeak = 9 {
draw_text_outline(view_xview + 911,view_yview + 140,"bengali : "+string(round(obj_langue.bengali))+"%")
}
if obj_langue.languenowspeak = 10 {
draw_text_outline(view_xview + 911,view_yview + 140,"russe : "+string(round(obj_langue.russe))+"%")
}
if obj_langue.languenowspeak = 11 {
draw_text_outline(view_xview + 911,view_yview + 140,"japonais : "+string(round(obj_langue.japonais))+"%")
}
if obj_langue.languenowspeak = 12 {
draw_text_outline(view_xview + 911,view_yview + 140,"allemand : "+string(round(obj_langue.allemand))+"%")
}
if obj_langue.languenowspeak = 13 {
draw_text_outline(view_xview + 911,view_yview + 140,"punjabi : "+string(round(obj_langue.punjabi))+"%")
}
if obj_langue.languenowspeak = 14 {
draw_text_outline(view_xview + 911,view_yview + 140,"javanais : "+string(round(obj_langue.javanais))+"%")
}
if obj_langue.languenowspeak = 15 {
draw_text_outline(view_xview + 911,view_yview + 140,"italien : "+string(round(obj_langue.italien))+"%")
}
draw_text_outline(view_xview + 911,view_yview + 160,"Barman : "+string(obj_bar.levelalchimie2))
draw_text_outline(view_xview + 911,view_yview + 180,"Forge: "+string(obj_forge.levelforge))
draw_text_outline(view_xview + 911,view_yview + 200,"Minor : "+string(levelmine))
draw_text_outline(view_xview + 911,view_yview + 220,"Medic : "+string(obj_healgun.level))
draw_text_outline(view_xview + 911,view_yview + 240,"Speed player : "+string(100 - ((obj_armorloot.vitessepoids*100)-100)))
}*/
}

//STATUT D'EFFET

if not obj_maladie.namemaladie = "" {
if not instance_exists(obj_virus) {
instance_create(x,y,obj_virus)
}
//draw_sprite_ext( spr_hemoragie, image_index, view_xview+310, view_yview+100, 1, 1, 0, c_white, 1 );
}

if not instance_exists(obj_languagenow){
instance_create(x,y,obj_languagenow)
}

if not instance_exists(obj_loyer){
instance_create(x,y,obj_loyer)
}

//remetre le button quand ilaunch 1
with(obj_buttonguilde){
visibility = 1
}


if not instance_exists(obj_medicament){
instance_create(x,y,obj_medicament)
}


if hemoragie = 1 {
if not instance_exists(obj_hemoragie) {
instance_create(x,y,obj_hemoragie)
}
//draw_sprite_ext( spr_hemoragie, image_index, view_xview+310, view_yview+100, 1, 1, 0, c_white, 1 );
}


if hypotermia = 1 {
if not instance_exists(obj_hypotermia) {
instance_create(x,y,obj_hypotermia)
}
//draw_sprite_ext( spr_hypotermia, image_index, view_xview+370, view_yview+100, 1, 1, 0, c_white, 1 );
}


if brasdroit = 1 or brasgauche = 1 or jambegauche = 1 or jambedroite = 1{
if not instance_exists(obj_fracture) {
instance_create(x,y,obj_fracture)
}
//draw_sprite_ext( spr_fracture, image_index, view_xview+435, view_yview+100, 1, 1, 0, c_white, 1 );
}

}else{
imagespeed2 = 0
demaragepralax = 0
imagespeed = 0
}
//NEXT PAGE



if prime = 1 {
//draw_sprite_ext( spr_prime, image_index, obj_zombie.x, obj_zombie.y-20, 1, 1, 0, c_white, 1 );
}

if loyer &gt; 0 {
//draw_sprite_ext( spr_loyer, image_index, obj_zombie.x, obj_zombie.y+20, 1, 1, 0, c_white, 1 );
}

}}}}//if not instance_exists(obj_armorpiece){
}//if chatlaunch = 0 &amp;&amp; obj_buttonguilde.chatlaunch2 = 0{
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
