<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mineur</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_speed = 0.5+random(0.3)/global.varfpsmax
mode = 0
quest = 0

path = path_add();

alarm[0] = 10

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if floor(ds_grid_get(obj_quest.questgrid, 10, quest)) &lt; 2 {//enemy pop tant que quest pas fini
//if ds_grid_get(obj_quest.questgrid, 7, quest) &lt;= obj_zombie.level {
if obj_zombie.karma &gt; 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 1 {

if ds_grid_get(obj_quest.questgrid, 10 , quest) &lt;= 1 {repeatspawn = ds_grid_get(obj_quest.questgrid,17,quest)
}else{repeatspawn = (ds_grid_get(obj_quest.questgrid,17,quest)*(2-ds_grid_get(obj_quest.questgrid, 10 , quest)))
}

if ds_grid_get(obj_quest.questgrid,14,quest) = 0 &amp;&amp; 
ds_grid_get(obj_quest.questgrid,15,quest) = 0 {
var i2;
 for (i2 = 0; i2 &lt; round((repeatspawn*1.1)); i2 += 1)
    {
var i; 
 for (i = 0; i &lt; 800; i += 1)
    {
    xvar = random_range(0,room_width)
    yvar = random_range(0,room_height) 
    nopecolli = 0
    if instance_exists(obj_enemy2){instnear = instance_nearest(xvar,yvar,obj_enemy2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 500 {
    nopecolli = 1
    }}}
    if instance_exists(obj_immobile){instnear = instance_nearest(xvar,yvar,obj_immobile)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}
    if instance_exists(obj_immobile2){instnear = instance_nearest(xvar,yvar,obj_immobile2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}
    if instance_exists(obj_talkquest){instnear = instance_nearest(xvar,yvar,obj_talkquest)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}
    if point_distance(obj_zombie.x,obj_zombie.y,xvar,yvar) &gt; 1200 &amp;&amp; nopecolli = 0{
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xvar, yvar, 2) {
    with(instance_create(xvar,yvar,obj_enemy2)){taser = 0 ;existrandom = 0;
    //show_message("+1")
    quest = other.quest;nbrpopquest = (ds_grid_get(obj_quest.questgrid,17,other.quest)+2);
    popobj = ds_grid_get(obj_quest.questgrid,17,other.quest)}
    i = 800
    }//else{i2 -= 1}
    }//else{i2 -= 1}
    }
}

}else{//x = 0 y = 0

if ds_grid_get(obj_quest.questgrid, 10 , quest) &lt; 1 {repeatspawn = ds_grid_get(obj_quest.questgrid,17,quest)
}else{repeatspawn = ds_grid_get(obj_quest.questgrid,17,quest)/((ds_grid_get(obj_quest.questgrid, 10 , quest)))}

var i3;
 for (i3 = 0; i3 &lt; (repeatspawn*1.5); i3 += 1){
    //show_message("yep")
    var i4;
     for (i4 = 0; i4 &lt; 50; i4 += 1){
     rdmrge = random_range(100,250)
     rdmrge2 = random(360)
     xxgridpath = x+lengthdir_x(rdmrge,rdmrge2)
     yygridpath = y+lengthdir_y(rdmrge,rdmrge2)
     
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xxgridpath, yygridpath, 2) {
    i4 = 50
with(instance_create(xxgridpath,yygridpath,obj_enemy2)){taser = 0 ;existrandom = 0;
quest = other.quest;nbrpopquest = ds_grid_get(obj_quest.questgrid,17,other.quest);
popobj = ds_grid_get(obj_quest.questgrid,17,other.quest)}}

}
}

/*var i3;
 for (i3 = 0; i3 &lt; (repeatspawn*1.5); i3 += 1){
    //show_message("yep")
with(instance_create(x+lengthdir_x(random_range(50,250),random(360)),y+lengthdir_y(random_range(50,250),random(360)),obj_enemy2)){taser = 0 ;existrandom = 0;
quest = other.quest;nbrpopquest = ds_grid_get(obj_quest.questgrid,17,other.quest);
popobj = ds_grid_get(obj_quest.questgrid,17,other.quest)}}*/
}

/*repeat(ds_grid_get(obj_quest.questgrid,17,quest)){
with(instance_create(x,y,obj_enemy2)){taser = 0 ;existrandom = 0;
quest = other.quest;nbrpopquest = ds_grid_get(obj_quest.questgrid,17,other.quest);
popobj = ds_grid_get(obj_quest.questgrid,13,other.quest)}}*/

}else if obj_zombie.karma &lt;= 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 2 {
repeat(ds_grid_get(obj_quest.questgrid,17,quest)){
with(instance_create(x,y,obj_stalker)){quest = other.quest;nbrpopquest = ds_grid_get(obj_quest.questgrid,17,other.quest);
popobj = ds_grid_get(obj_quest.questgrid,13,other.quest)}}

}//}
}

instance_destroy();










</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
