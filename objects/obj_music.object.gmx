<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//audio_group_load(ag_music)
audio_group_load(ag_effect)
audio_group_load(ag_ambiant)

mode1soundsave = 1
gaininro = 1

choixmusic = 1 
ini_open("savefile.ini");
obj_music.setvolume1 =  ini_read_real ("player","setvolume1", 1);//music
obj_music.setvolume2 =  ini_read_real ("player","setvolume2", 1);//effect
obj_music.setvolume3 =  ini_read_real ("player","setvolume3", 1);//ambiance
ini_close();



//audio_group_set_gain(ag_music,setvolume1,0)
audio_group_set_gain(ag_effect,setvolume2,0)
audio_group_set_gain(ag_ambiant,setvolume3,0)



alarm[0] = random_range(3000,5000)
sg = audio_create_sync_group(true);
mode1sound = choose(1,2,3,4,5,6,7,8,9)
if mode1sound = 1 {mode1sound = snd_segmenta1}
if mode1sound = 2 {mode1sound = snd_segmenta2}
if mode1sound = 3 {mode1sound = snd_segmenta3}
if mode1sound = 4 {mode1sound = snd_segmenta4}
if mode1sound = 5 {mode1sound = snd_segmenta5}
if mode1sound = 6 {mode1sound = snd_segmenta6}
if mode1sound = 7 {mode1sound = snd_segmenta7}
if mode1sound = 8 {mode1sound = snd_segmenta8}
if mode1sound = 9 {mode1sound = snd_segmenta9}
mode2sound = choose(1,2,3,4,6,7,8)
if mode2sound = 1 {mode2sound = snd_segmentb1}
if mode2sound = 2 {mode2sound = snd_segmentb2}
if mode2sound = 3 {mode2sound = snd_segmentb3}
if mode2sound = 4 {mode2sound = snd_segmentb4}
//if mode2sound = 5 {mode2sound = snd_segmentb5}
if mode2sound = 6 {mode2sound = snd_segmentb6}
if mode2sound = 7 {mode2sound = snd_segmentb7}
if mode2sound = 8 {mode2sound = snd_segmentb8}
mode3sound = choose(1,2,3,4,5,7,8,9)
if mode3sound = 1 {mode3sound = snd_segmentc1}
if mode3sound = 2 {mode3sound = snd_segmentc2}
if mode3sound = 3 {mode3sound = snd_segmentc3}
if mode3sound = 4 {mode3sound = snd_segmentc4}
if mode3sound = 5 {mode3sound = snd_segmentc5}
//if mode3sound = 6 {mode3sound = snd_segmentc6}
if mode3sound = 7 {mode3sound = snd_segmentc7}
if mode3sound = 8 {mode3sound = snd_segmentc8}
if mode3sound = 9 {mode3sound = snd_segmentc9}



audio_play_in_sync_group(sg, mode1sound);
audio_play_in_sync_group(sg, mode2sound);
audio_play_in_sync_group(sg, mode3sound);
audio_sound_gain(mode1sound, 0, 0);
audio_sound_gain(mode2sound, 0, 0);
audio_sound_gain(mode3sound, 0, 0);

audio_start_sync_group(sg);
//audio_sync_group_debug(sg);
/* test off
global.infosound = "no sound"
stopsound = 0
alarm[0] = 1000
randomize()

global.music = irandom_range(1, 29);
/*

randomize()

music = irandom_range(1, 3);

if music = 1 {
 
  
    if !audio_is_playing(snd_ambiant1) {
 if !audio_is_playing(snd_ambiant2) {
  if !audio_is_playing(snd_ambiant3) {
 audio_play_sound(snd_ambiant1,0,0)
// audio_sound_gain(snd_shootgun, 0.3, 0);
 
 }}}}
 
 if music = 2 {
 
  
    if !audio_is_playing(snd_ambiant1) {
 if !audio_is_playing(snd_ambiant2) {
  if !audio_is_playing(snd_ambiant3) {

 audio_play_sound(snd_ambiant2,0,0)
// audio_sound_gain(snd_shootgun, 0.3, 0);
 
 }}}}
 
  if music = 3 {
 
  
    if !audio_is_playing(snd_ambiant1) {
 if !audio_is_playing(snd_ambiant2) {
  if !audio_is_playing(snd_ambiant3) {

 audio_play_sound(snd_ambiant3,0,0)
// audio_sound_gain(snd_shootgun, 0.3, 0);
 
 }}}}
 
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fais peter le son
alarm[0] = 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if choixmusic = 1 {if audio_group_is_loaded(music1){}else{audio_group_load(music1);}
audio_play_sound(snd_midnight_s_ocean,1,false)}
//audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
//audio_play_sound_at(snd_midnight_s_ocean, x, y, 0, 100, 300, 1, false, 1);

if choixmusic = 2 {if audio_group_is_loaded(music2){}else{audio_group_load(music2);}
audio_play_sound(snd_holyofhole,1,false)

}
if choixmusic = 3 {if audio_group_is_loaded(music3){}else{audio_group_load(music3);}
audio_play_sound(snd_shadowop,1,false)

}
if choixmusic = 4 {if audio_group_is_loaded(music4){}else{audio_group_load(music4);}
audio_play_sound(snd_hesevil,1,false)

}
if choixmusic = 5 {if audio_group_is_loaded(music5){}else{audio_group_load(music5);}
audio_play_sound(snd_dreaded,1,false)

}
if choixmusic = 6 {if audio_group_is_loaded(music6){}else{audio_group_load(music6);}
audio_play_sound(snd_halloweensatire,1,false)

}
if choixmusic = 7 {if audio_group_is_loaded(music7){}else{audio_group_load(music7);}
audio_play_sound(snd_explorenewplace,1,false)

}
if choixmusic = 8 {if audio_group_is_loaded(music8){}else{audio_group_load(music8);}
audio_play_sound(snd_beginningnightmare,1,false)

}
if choixmusic = 9 {if audio_group_is_loaded(music9){}else{audio_group_load(music9);}
audio_play_sound(snd_wakingup,1,false)

}
if choixmusic = 10 {if audio_group_is_loaded(music10){}else{audio_group_load(music10);}
audio_play_sound(snd_halfhead,1,false)

}
if choixmusic = 11 {if audio_group_is_loaded(music11){}else{audio_group_load(music11);}
audio_play_sound(snd_windowtwo,1,false)

}
if choixmusic = 12 {if audio_group_is_loaded(music12){}else{audio_group_load(music12);}
audio_play_sound(snd_whithin,1,false)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* test off

if stopsound = 1 {
alarm[1] = 10

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//relancer des nouvea son

audio_stop_sync_group(sg);
audio_destroy_sync_group(sg);
sg = audio_create_sync_group(true);
audio_stop_sound(mode1sound);
audio_stop_sound(mode2sound);
audio_stop_sound(mode3sound);
mode1sound = choose(1,2,3,4,5,6,7,8,9)
//mode2sound = mode1sound
//mode3sound = mode1sound

if mode1sound = 1 {mode1sound = snd_segmenta1}
if mode1sound = 2 {mode1sound = snd_segmenta2}
if mode1sound = 3 {mode1sound = snd_segmenta3}
if mode1sound = 4 {mode1sound = snd_segmenta4}
if mode1sound = 5 {mode1sound = snd_segmenta5}
if mode1sound = 6 {mode1sound = snd_segmenta6}
if mode1sound = 7 {mode1sound = snd_segmenta7}
if mode1sound = 8 {mode1sound = snd_segmenta8}
if mode1sound = 9 {mode1sound = snd_segmenta9}

mode2sound = choose(1,2,3,4,6,7,8)
if instance_exists(obj_bossnet){mode2sound = 5}
if mode2sound = 1 {mode2sound = snd_segmentb1}
if mode2sound = 2 {mode2sound = snd_segmentb2}
if mode2sound = 3 {mode2sound = snd_segmentb3}
if mode2sound = 4 {mode2sound = snd_segmentb4}
if mode2sound = 5 {mode2sound = snd_segmentb5}//boss
if mode2sound = 5 {mode2sound = snd_segmentb5}
if mode2sound = 6 {mode2sound = snd_segmentb6}
if mode2sound = 7 {mode2sound = snd_segmentb7}
if mode2sound = 8 {mode2sound = snd_segmentb8}
//if mode2sound = 5 {mode2sound = snd_segmentb5}
mode3sound = choose(1,2,3,4,5,7,8,9)
if instance_exists(obj_bossnet){mode3sound = 6}
if mode3sound = 1 {mode3sound = snd_segmentc1}
if mode3sound = 2 {mode3sound = snd_segmentc2}
if mode3sound = 3 {mode3sound = snd_segmentc3}
if mode3sound = 4 {mode3sound = snd_segmentc4}
if mode3sound = 5 {mode3sound = snd_segmentc5}
if mode3sound = 6 {mode3sound = snd_segmentc6}
if mode3sound = 7 {mode3sound = snd_segmentc7}
if mode3sound = 8 {mode3sound = snd_segmentc8}
if mode3sound = 9 {mode3sound = snd_segmentc9}



//audio_play_in_sync_group(sg, mode1sound);
//audio_play_in_sync_group(sg, mode2sound);
//audio_play_in_sync_group(sg, mode3sound);
audio_play_sound(mode1sound,0,true);
audio_play_sound(mode2sound,0,true);
audio_play_sound(mode3sound,0,true);
audio_sound_gain(mode1sound, 0, 0);
audio_sound_gain(mode2sound, 0, 0);
audio_sound_gain(mode3sound, 0, 0);

//audio_start_sync_group(sg);

alarm[0] = random_range(2000,3000)
/*if room = Menu {}else{
choixmusic += choose(1,2,3,4)
if choixmusic &gt; 12 {
choixmusic = 1
}

//choixmusic = 1
if audio_group_is_loaded(music1){audio_group_unload(music1);}
if audio_group_is_loaded(music2){audio_group_unload(music2);}
if audio_group_is_loaded(music3){audio_group_unload(music3);}
if audio_group_is_loaded(music4){audio_group_unload(music4);}
if audio_group_is_loaded(music5){audio_group_unload(music5);}
if audio_group_is_loaded(music6){audio_group_unload(music6);}
if audio_group_is_loaded(music7){audio_group_unload(music7);}
if audio_group_is_loaded(music8){audio_group_unload(music8);}
if audio_group_is_loaded(music9){audio_group_unload(music9);}
if audio_group_is_loaded(music10){audio_group_unload(music10);}
if audio_group_is_loaded(music11){audio_group_unload(music11);}
if audio_group_is_loaded(music12){audio_group_unload(music12);}

alarm[2] = 10

if choixmusic = 1 {if audio_group_is_loaded(music1){}else{audio_group_load(music1);}
//audio_play_sound(snd_midnight_s_ocean,1,false)
}
//audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
//audio_play_sound_at(snd_midnight_s_ocean, x, y, 0, 100, 300, 1, false, 1);

if choixmusic = 2 {if audio_group_is_loaded(music2){}else{audio_group_load(music2);}
//audio_play_sound(snd_holyofhole,1,false)

}
if choixmusic = 3 {if audio_group_is_loaded(music3){}else{audio_group_load(music3);}
//audio_play_sound(snd_shadowop,1,false)

}
if choixmusic = 4 {if audio_group_is_loaded(music4){}else{audio_group_load(music4);}
//audio_play_sound(snd_hesevil,1,false)

}
if choixmusic = 5 {if audio_group_is_loaded(music5){}else{audio_group_load(music5);}
//audio_play_sound(snd_dreaded,1,false)

}
if choixmusic = 6 {if audio_group_is_loaded(music6){}else{audio_group_load(music6);}
//audio_play_sound(snd_halloweensatire,1,false)

}
if choixmusic = 7 {if audio_group_is_loaded(music7){}else{audio_group_load(music7);}
//audio_play_sound(snd_explorenewplace,1,false)

}
if choixmusic = 8 {if audio_group_is_loaded(music8){}else{audio_group_load(music8);}
//audio_play_sound(snd_beginningnightmare,1,false)

}
if choixmusic = 9 {if audio_group_is_loaded(music9){}else{audio_group_load(music9);}
//audio_play_sound(snd_wakingup,1,false)

}
if choixmusic = 10 {if audio_group_is_loaded(music10){}else{audio_group_load(music10);}
//audio_play_sound(snd_halfhead,1,false)

}
if choixmusic = 11 {if audio_group_is_loaded(music11){}else{audio_group_load(music11);}
//audio_play_sound(snd_windowtwo,1,false)

}
if choixmusic = 12 {if audio_group_is_loaded(music12){}else{audio_group_load(music12);}
//audio_play_sound(snd_whithin,1,false)

}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = room34 or room = room161 {
if obj_intro.step &gt; 18 {
if audio_is_playing(snd_introsegmentb){
if gaininro &gt; 0 {
gaininro -= 0.05
audio_sound_gain(snd_introsegmentb,gaininro*setvolume1,0)}else{
audio_stop_sound(snd_introsegmentb);}
}}else{
gaininro = 1

if obj_intro.step &gt; 3 {
audio_sound_gain(mode1sound, 0, 1);
audio_sound_gain(mode2sound, 0, 1);
audio_sound_gain(mode3sound, 0, 1);
audio_sound_gain(snd_introsegmentb, 1, 1);
if audio_is_playing(snd_introsegmentb){}else{
audio_play_sound(snd_introsegmentb,0,true)}
}
}

}else{
if audio_is_playing(snd_introsegmentb){
if gaininro &gt; 0 {
gaininro -= 0.05
audio_sound_gain(snd_introsegmentb,gaininro*setvolume1,0)}else{
audio_stop_sound(snd_introsegmentb);}
}



if alarm[5] &gt; 0 {
audio_sound_gain(mode1sound, 1*setvolume1, 0);
audio_sound_gain(mode2sound, 1*setvolume1, 0);
audio_sound_gain(mode3sound, 1*setvolume1, 0);}else{
if alarm[0] &lt; 150 {
var varsndgain;

varsndgain1 = audio_sound_get_gain(mode1sound); if varsndgain1 &gt; 0 {varsndgain1 -= 0.01;}
audio_sound_gain(mode1sound, varsndgain1, 0);
varsndgain2 = audio_sound_get_gain(mode2sound); if varsndgain2 &gt; 0 {varsndgain2 -= 0.01;}
audio_sound_gain(mode2sound, varsndgain2, 0);
varsndgain3 = audio_sound_get_gain(mode3sound); if varsndgain3 &gt; 0 {varsndgain3 -= 0.01;}
audio_sound_gain(mode3sound, varsndgain3, 0);

/*if varsndgain1 &lt;= 0 &amp;&amp; varsndgain2 &lt;= 0 &amp;&amp; varsndgain3 &lt;= 0 {
audio_stop_sync_group(sg);}*/

}else{


/*varsndgain = audio_sound_get_gain(mode3sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode3sound, varsndgain*setvolume1, 0);
 if varsndgain &gt; 0.6*setvolume1 {
audio_sound_gain(mode1sound, 0.2*setvolume1, 0);//dire chut à a et b si c actif
audio_sound_gain(mode2sound, 0.2*setvolume1, 0);}//dire chut à a et b si c actif
varsndgain = audio_sound_get_gain(mode2sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode2sound, varsndgain*setvolume1, 0);
 if varsndgain &gt; 0.6*setvolume1 {
audio_sound_gain(mode1sound, 0.4*setvolume1, 0);}//dire chut à a si b actif
varsndgain = audio_sound_get_gain(mode1sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode1sound, varsndgain*setvolume1, 0);
*/

    
if instance_exists(obj_enemy2){
with(obj_enemy2){if point_distance(obj_zombie.x,obj_zombie.y,x,y) &lt; 1200 {if alarm[8] &gt; 0 &amp;&amp; avertissement = 0{obj_music.alarm[3] = 300}}}}
    
    
if instance_exists(obj_enemy2){
with(obj_enemy2){if point_distance(obj_zombie.x,obj_zombie.y,x,y) &lt; 1200 {if alarm[8] &gt; 0 &amp;&amp; avertissement = 1{obj_music.alarm[4] = 300}}}}

/*if instance_exists(obj_bossnet){
with(obj_bossnet){if point_distance(obj_zombie.x,obj_zombie.y,x,y) &gt; 1200 {obj_music.alarm[3] = 150}}}
*/
if instance_exists(obj_bossnet){if mode1sound = snd_segmentb5 {}else{if alarm[0] &gt; 10 {alarm[0] = 10}}
with(obj_bossnet){if point_distance(obj_zombie.x,obj_zombie.y,x,y) &lt; 1200 {obj_music.alarm[4] = 150}}}
    


if room = Menu {}else{
if audio_is_playing(snd_snoweater){}else{

if alarm[4] &gt; 0 {
varsndgain = audio_sound_get_gain(mode3sound); 
if varsndgain &lt; 1 {varsndgain += 0.01;}
audio_sound_gain(mode3sound, varsndgain*(0.8+(setvolume1/5)), 0);

varsndgain = audio_sound_get_gain(mode1sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode1sound, varsndgain, 0);

varsndgain = audio_sound_get_gain(mode2sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode2sound, varsndgain, 0);

//audio_sound_gain(mode1sound, 0, 3);
}else{
if alarm[3] &gt; 0 {
varsndgain = audio_sound_get_gain(mode2sound);
//if setvolume1 &lt; 0.1 {show_message(setvolume1)}
if varsndgain &lt; 1 {varsndgain += 0.01;}

audio_sound_gain(mode2sound, varsndgain*(0.8+(setvolume1/5)), 0);

varsndgain = audio_sound_get_gain(mode3sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode3sound, varsndgain, 0);

varsndgain = audio_sound_get_gain(mode1sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode1sound, varsndgain, 0);
//audio_sound_gain(mode1sound, 0, 3);
}else{

varsndgain = audio_sound_get_gain(mode1sound); 
if varsndgain &lt; 1 {varsndgain += 0.01;}
audio_sound_gain(mode1sound, varsndgain*(0.8+(setvolume1/5)), 0);
//audio_sound_gain(mode1sound, varsndgain*(0.75+(setvolume1/3)), 0);

varsndgain = audio_sound_get_gain(mode3sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode3sound, varsndgain, 0);

varsndgain = audio_sound_get_gain(mode2sound); 
if varsndgain &gt; 0 {varsndgain -= 0.005;}
audio_sound_gain(mode2sound, varsndgain, 0);
}
}

//audio_play_sound(snd_segmenta1,0,false)
//audio
}}



}

if audio_is_playing(snd_guitar1) or audio_is_playing(snd_guitar2) or audio_is_playing(snd_guitar3) or audio_is_playing(snd_guitar4) or audio_is_playing(snd_guitar5) or audio_is_playing(snd_guitar6) 
or audio_is_playing(snd_guitar7) or audio_is_playing(snd_guitar8) or audio_is_playing(snd_guitarstalker1) or audio_is_playing(snd_guitarstalker2) or audio_is_playing(snd_guitarstalker3)
 or audio_is_playing(snd_guitarstalker4) or audio_is_playing(snd_guitarstalker5) or audio_is_playing(snd_guitarstalker6) or audio_is_playing(snd_guitarstalker7) or audio_is_playing(snd_guitarstalker8)
  or audio_is_playing(snd_guitarstalker9) or audio_is_playing(snd_guitarstalker10) or audio_is_playing(snd_guitarstalker11) or audio_is_playing(snd_guitarstalker12) or audio_is_playing(snd_guitarstalker13)
   or audio_is_playing(snd_guitarstalker14) or audio_is_playing(snd_guitarstalker15) or audio_is_playing(snd_guitarstalker16) or audio_is_playing(snd_guitarstalker17) or audio_is_playing(snd_guitarstalker18)
    or audio_is_playing(snd_guitarstalker19) or audio_is_playing(snd_guitarstalker20) or audio_is_playing(snd_guitarstalker21) or audio_is_playing(snd_guitarstalker22) or audio_is_playing(snd_guitarstalker23)
     or audio_is_playing(snd_guitarstalker24) or audio_is_playing(snd_guitarstalker25) or audio_is_playing(snd_guitarstalker26) or audio_is_playing(snd_guitarstalker27) or audio_is_playing(snd_guitarstalker28) {

audio_sound_gain(mode1sound, 0, 1);
audio_sound_gain(mode2sound, 0, 1);
audio_sound_gain(mode3sound, 0, 1);

alarm[0] = 100

}

//couper le son si boss existe plu
if instance_exists(obj_bossnet){audio_sound_gain(snd_segmentb5, 0, 0)
}else{
audio_sound_gain(snd_segmentb5, 0, 0)}

}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="117">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* test off

if stopsound = 0 {
stopsound = 1
alarm[1] = 10

}

audio_stop_sound(snd_ambiant0)
audio_stop_sound(snd_ambiant1)
audio_stop_sound(snd_ambiant2)
audio_stop_sound(snd_ambiant3)
audio_stop_sound(snd_ambiant4)
audio_stop_sound(snd_ambiant5)
audio_stop_sound(snd_ambiant6)
audio_stop_sound(snd_ambiant7)
audio_stop_sound(snd_ambiant8)
audio_stop_sound(snd_ambiant9)
audio_stop_sound(snd_ambiant10)
audio_stop_sound(snd_ambiant11)
audio_stop_sound(snd_ambiant12)
audio_stop_sound(snd_ambiant13)
audio_stop_sound(snd_ambiant14)
audio_stop_sound(snd_ambiant15)
audio_stop_sound(snd_ambiant16)
audio_stop_sound(snd_ambiant17)
audio_stop_sound(snd_ambiant18)
audio_stop_sound(snd_ambiant19)
audio_stop_sound(snd_ambiant20)
audio_stop_sound(snd_ambiant21)
audio_stop_sound(snd_ambiant22)
audio_stop_sound(snd_ambiant23)
audio_stop_sound(snd_ambiant24)
audio_stop_sound(snd_ambiant25)
audio_stop_sound(snd_ambiant26)
audio_stop_sound(snd_ambiant27)
audio_stop_sound(snd_ambiant28)
audio_stop_sound(snd_ambiant29)
audio_stop_sound(snd_ambiant30)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if audio_is_playing(snd_guitar1) { audio_stop_sound(snd_guitar1)} 
if audio_is_playing(snd_guitar2) { audio_stop_sound(snd_guitar2)} 
if audio_is_playing(snd_guitar3) { audio_stop_sound(snd_guitar3)}
if audio_is_playing(snd_guitar4) { audio_stop_sound(snd_guitar4)} 
if audio_is_playing(snd_guitar5) { audio_stop_sound(snd_guitar5)} 
if audio_is_playing(snd_guitar6) { audio_stop_sound(snd_guitar6)} 
if audio_is_playing(snd_guitar7) { audio_stop_sound(snd_guitar7)} 
if audio_is_playing(snd_guitar8) { audio_stop_sound(snd_guitar8)} 
if audio_is_playing(snd_guitarstalker1) { audio_stop_sound(snd_guitarstalker1)} 
if audio_is_playing(snd_guitarstalker2) { audio_stop_sound(snd_guitarstalker2)} 
if audio_is_playing(snd_guitarstalker3) { audio_stop_sound(snd_guitarstalker3)} 
if audio_is_playing(snd_guitarstalker4) { audio_stop_sound(snd_guitarstalker4)} 
if audio_is_playing(snd_guitarstalker5) { audio_stop_sound(snd_guitarstalker5)} 
if audio_is_playing(snd_guitarstalker6) { audio_stop_sound(snd_guitarstalker6)} 
if audio_is_playing(snd_guitarstalker7) { audio_stop_sound(snd_guitarstalker7)} 
if audio_is_playing(snd_guitarstalker8) { audio_stop_sound(snd_guitarstalker8)}
 if audio_is_playing(snd_guitarstalker9) { audio_stop_sound(snd_guitarstalker9)} 
 if audio_is_playing(snd_guitarstalker10) { audio_stop_sound(snd_guitarstalker10)} 
 if audio_is_playing(snd_guitarstalker11) { audio_stop_sound(snd_guitarstalker11)} 
 if audio_is_playing(snd_guitarstalker12) { audio_stop_sound(snd_guitarstalker12)} 
 if audio_is_playing(snd_guitarstalker13) { audio_stop_sound(snd_guitarstalker13)} 
 if audio_is_playing(snd_guitarstalker14) { audio_stop_sound(snd_guitarstalker14)} 
   if audio_is_playing(snd_guitarstalker15) { audio_stop_sound(snd_guitarstalker15)} 
   if audio_is_playing(snd_guitarstalker16) { audio_stop_sound(snd_guitarstalker16)} 
   if audio_is_playing(snd_guitarstalker17) { audio_stop_sound(snd_guitarstalker17)} 
   if audio_is_playing(snd_guitarstalker18) { audio_stop_sound(snd_guitarstalker18)} 
   if audio_is_playing(snd_guitarstalker19) { audio_stop_sound(snd_guitarstalker19)} 
    if audio_is_playing(snd_guitarstalker20) { audio_stop_sound(snd_guitarstalker20)} 
    if audio_is_playing(snd_guitarstalker21) { audio_stop_sound(snd_guitarstalker21)} 
    if audio_is_playing(snd_guitarstalker22) { audio_stop_sound(snd_guitarstalker22)} 
    if audio_is_playing(snd_guitarstalker23){ audio_stop_sound(snd_guitarstalker23)} 
    if audio_is_playing(snd_guitarstalker24) { audio_stop_sound(snd_guitarstalker24)} 
     if audio_is_playing(snd_guitarstalker25) { audio_stop_sound(snd_guitarstalker25)} 
     if audio_is_playing(snd_guitarstalker26) { audio_stop_sound(snd_guitarstalker26)} 
     if audio_is_playing(snd_guitarstalker27) { audio_stop_sound(snd_guitarstalker27)} 
     if audio_is_playing(snd_guitarstalker28) { audio_stop_sound(snd_guitarstalker28)}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sync_group(sg);
audio_destroy_sync_group(sg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var real_secs = audio_sync_group_get_track_pos(sg);
 var secs = real_secs mod 60;
 var mins = string(real_secs div 60);
 if (secs &gt; 9)
    {
    secs = string(secs);
    }
 else
    {
    secs = "0" + string(secs);
    }
 draw_text(32, 32, "Time = " + mins + ":" + secs);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="118">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* test off
stopsound = 0
*/

alarm[0] = 130

/*
audio_stop_sync_group(sg);
audio_destroy_sync_group(sg);
sg = audio_create_sync_group(true);

//mode1sound = choose(1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,24,25,26)
if mode1soundsave &lt; 26 {mode1soundsave = mode1soundsave+1; mode1sound = mode1soundsave; 
}else{mode1sound = 1;mode1soundsave = 1}
if mode1sound = 1 {mode1sound = snd_segmenta1}
if mode1sound = 2 {mode1sound = snd_segmenta2}
if mode1sound = 3 {mode1sound = snd_segmenta3}
if mode1sound = 4 {mode1sound = snd_segmenta4}
if mode1sound = 5 {mode1sound = snd_segmenta5}
if mode1sound = 6 {mode1sound = snd_segmenta6}
if mode1sound = 7 {mode1sound = snd_segmenta7}
if mode1sound = 8 {mode1sound = snd_segmenta8}
if mode1sound = 9 {mode1sound = snd_segmenta9}
if mode1sound = 10 {mode1sound = snd_segmentb1}
if mode1sound = 11 {mode1sound = snd_segmentb2}
if mode1sound = 12 {mode1sound = snd_segmentb3}
if mode1sound = 13 {mode1sound = snd_segmentb4}
//if mode1sound = 14{mode1sound = snd_segmentb5}
if mode1sound = 15{mode1sound = snd_segmentb6}
if mode1sound = 16{mode1sound = snd_segmentb7}
if mode1sound = 17{mode1sound = snd_segmentb8}
if mode1sound = 18{mode1sound = snd_segmentc1}
if mode1sound = 19{mode1sound = snd_segmentc2}
if mode1sound = 20{mode1sound = snd_segmentc3}
if mode1sound = 21{mode1sound = snd_segmentc4}
if mode1sound = 22{mode1sound = snd_segmentc5}
//if mode1sound = 23{mode1sound = snd_segmentc6}
if mode1sound = 24{mode1sound = snd_segmentc7}
if mode1sound = 25{mode1sound = snd_segmentc8}
if mode1sound = 26{mode1sound = snd_segmentc9}

mode2sound = mode1sound
mode3sound = mode1sound
if instance_exists(obj_bossnet){mode2sound = 5}
if mode2sound = 5 {mode2sound = snd_segmentb5}//boss
if instance_exists(obj_bossnet){mode3sound = 6}
if mode3sound = 6 {mode3sound = snd_segmentc6}


audio_play_in_sync_group(sg, mode1sound);
audio_play_in_sync_group(sg, mode2sound);
audio_play_in_sync_group(sg, mode3sound);
audio_sound_gain(mode1sound, 0, 0);
audio_sound_gain(mode2sound, 0, 0);
audio_sound_gain(mode3sound, 0, 0);

audio_start_sync_group(sg);


alarm[0] = 5000
//alarm[5] = 5000
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
