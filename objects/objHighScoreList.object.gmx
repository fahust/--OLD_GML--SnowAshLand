<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dt = 0; // This will prevent the table from drawing before we recieve the data
maingrid = ds_grid_create(2, 200);
modekeyboard = 1
enter = 0
username = ""//faust
paswd = ""//bahamut
nombredevariable = 0
gsGetList(100); // Call up the high score list, change the argument to limit how many scores to get
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(name_list);
ds_grid_destroy(maingrid);
//ds_list_destroy(score_list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dt = 1; //Set dt to one so we can draw the table
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*call for the list results, then set an alarm to switch dt to 1 so the table
will draw. This will allow time to recieve all the data before attempting to draw */

gsGetListResult(200); // Argument must match original call
alarm[0] = 50;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(name_list);
ds_grid_destroy(maingrid);
//ds_list_destroy(score_list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(name_list);
ds_grid_destroy(maingrid);
//ds_list_destroy(score_list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw High Score Table
//draw a congratulations message
xplus = 200
yplus = 200

if (room == HighScoreLIst)
    {
    //draw_text(200,20,"Great Job!###Your score of " + string(global.pscore) + " is on the wall of fame!.");
    }
// Draw a simple high score table. Obviousely could be much prettier.
//draw_text(100,100,"High Scores:##")

if dt = 1 //Create a delay in dawing the table so the data can arrive
{
draw_set_color(c_black);
    gsDrawTable(view_xview+100,view_yview+120,200,20);


draw_set_color(c_black);
if ds_grid_value_exists(maingrid, 0, 0, 2, 100000, username)
    {
    xpos = ds_grid_value_x(maingrid, 0, 0, 2, 100000, username);
    ypos = ds_grid_value_y(maingrid, 0, 0, 2, 100000, username);
    //show_message(xpos)
    if enter = 1 {
    if xpos = 0 {
    if ds_grid_get(maingrid,1,ypos) = paswd
    {
    if paswd = "none" or username = "none" {}else{
    
    
    //DEMARAGE !!!!
    with(oButton) {instance_destroy();}
global.choicenetwork = 0
//with(obj_menunoir2) instance_destroy();
obj_menunoir2.alarm[0] = 120
obj_zombie.alarm[7] = 125
instance_create(obj_zombie.x,obj_zombie.y,obj_network);
    
 draw_text(view_xview+674,view_yview+720,"CONNECTED !");
        instance_destroy();
    }}else{draw_text(view_xview+730+xplus,view_yview+615+yplus,"Login or pasword incorrect");}}else{draw_text(view_xview+730+xplus,view_yview+615+yplus,"Login or pasword incorrect");}
    }else{}}
}





draw_set_color(c_black);
draw_set_alpha(0.8);
draw_rectangle(view_xview+600+xplus, view_yview+500+yplus, view_xview+900+xplus, view_yview+540+yplus,0);
draw_rectangle(view_xview+600+xplus, view_yview+550+yplus, view_xview+900+xplus, view_yview+590+yplus,0);
draw_rectangle(view_xview+600+xplus, view_yview+600+yplus, view_xview+900+xplus, view_yview+640+yplus,0);
draw_set_alpha(1);

draw_set_color(obj_nightcycle.colortext3);
draw_text(view_xview+630+xplus,view_yview+515+yplus,"username : ");
draw_text(view_xview+630+xplus,view_yview+565+yplus,"password : ");
draw_text(view_xview+730+xplus,view_yview+515+yplus,username);//USER
draw_text(view_xview+730+xplus,view_yview+565+yplus,paswd);//PASS
    
if enter = 0 {draw_text(view_xview+680+xplus,view_yview+615+yplus,"Click to connect");}
    
        
    if modekeyboard = 1 {username = keyboard_string}
    if modekeyboard = 2 {paswd = keyboard_string}
    
var inst; 
 inst = collision_rectangle(view_xview+600+xplus, view_yview+500+yplus, view_xview+900+xplus, view_yview+540+yplus, obj_cursor, true, true); 
 if inst != noone 
    {
    if mouse_check_button_pressed(mb_left){
    keyboard_string = username
    
    
    modekeyboard = 1}
    }
    
     inst = collision_rectangle(view_xview+600+xplus, view_yview+550+yplus, view_xview+900+xplus, view_yview+590+yplus, obj_cursor, true, true); 
 if inst != noone 
    {
    if mouse_check_button_pressed(mb_left){
    keyboard_string = paswd
    
    modekeyboard = 2
    }}
    
    enter = 0
         inst = collision_rectangle(view_xview+600+xplus, view_yview+600+yplus, view_xview+900+xplus, view_yview+640+yplus, obj_cursor, true, true); 
 if inst != noone 
    {
    if mouse_check_button(mb_left){
    enter = 1
    }}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
