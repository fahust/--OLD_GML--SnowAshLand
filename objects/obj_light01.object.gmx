<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ico_light</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sl_light_active = 1

colortaudis = make_colour_rgb(24,12,0)
xx1 = 200
yy1 = 200
xx2 = 200
yy2 = 200
vraiscale = 2.66

consolarge = 2.36//3.16
colorfinaljolie = make_colour_rgb(205, 186, 150)//c_white





/*colorfinaljolie = choose(make_colour_rgb(79, 226, 179),
make_colour_rgb(139, 58, 98),//139 58 98
make_colour_rgb(75, 0, 130),
make_colour_rgb(93, 71, 139),
make_colour_rgb(188, 210, 238),
make_colour_rgb(135, 206, 235),
make_colour_rgb(154, 192, 205),
make_colour_rgb(0, 199, 140),
make_colour_rgb(67, 205, 128),
make_colour_rgb(154, 255, 154),
make_colour_rgb(202, 255, 112),
make_colour_rgb(255, 165, 0),
make_colour_rgb(205, 186, 150),
make_colour_rgb(205, 179, 139),
make_colour_rgb(205, 183, 158))*/

parenttrain = 0
colortrain = c_white
sacadetime2 = 0
//obj_zombie.lowgpu2 = 0
alarm[8] = 4
scale = 0.1
/*if not instance_exists(obj_engine){
instance_destroy();
}else{*/
color16 = c_white

alarm[5] = 10
alarm[9] = 10
alarm[7] = 150
idlightidconstruct = 0
stopordi = 0

//if global.engineloadatroom = 1 {
//obj_zombie.lowgpu2 = 2}

      
      //make a color
     colortest1 = make_colour_rgb(142,131,111)
     colorroom =   make_colour_rgb(47,91,118)//bleu tres clair mais ambiance sombre nuit
     //make_colour_rgb(97,111,67)//tres jolie vert clair militaire
     // make_colour_rgb(76,67,60)
     //make_colour_rgb(107,109,130)//gris clair simple mais efficace ,fais peut etre opti les ligt a verifier

///liste des objets projetant une ombre sur les lumières
//sacade image
alarm[4] = random(3500)
sacadetime = 0
//

colorconquest = c_white
draw = 0
mode = 0;
alarm[0] = 1;

// Variables utilisées dans Step
time = 0;
increment = 0.1;//0.1//
l = 0;
d = 0;


sl_light_xscale = 0.1
if instance_exists(obj_engine){
//if obj_zombie.lowgpu2 = 3 {}else{
SL_light_ini_begin(); // Commence l'initialisation de l'objet lumière
///*
sl_light_texture = spr_light01;  // Index de la texture de lumière
sl_light_xscale  = 2.66;         // Facteurs d'étirement de la lumière
sl_light_yscale  = 2.66;
sl_light_color   = c_red;        // Couleur de la lumière
sl_light_shadowsharpness = 0.99; // Facteur de dureté des ombres

sl_light_refresh         = true;//grosse conso avec true
sl_light_castshadow = true//True


/*if obj_zombie.lowgpu2 = 3 {sl_light_refresh = false;
sl_light_shadowsharpness = 1;
sl_light_power           = 0.6;
sl_light_shadowlength    = 1;
sl_light_shadowfactor    = 1;
sl_light_ambientpower    = 0.6;
}*/
//*/
// Liste des objets projetant une ombre
// SL_light_cast_obj(obj,mask);
//SL_light_cast_obj( obj_crate0, -1 );
if obj_zombie.lowgpu2 = 3 {}else{
if instance_exists(obj_wall){SL_light_cast_obj( obj_wall, -1 );}

if instance_exists(obj_wallarriere){SL_light_cast_obj( obj_wallarriere, -1 );}
//if instance_exists(obj_soltrain1){SL_light_cast_obj( obj_soltrain1, -1 );}
//if instance_exists(obj_soltrain2){SL_light_cast_obj( obj_soltrain2, -1 );}


if instance_exists(obj_bossnet){SL_light_cast_obj( obj_bossnet, -1 );}
if instance_exists(obj_constructwallmap){SL_light_cast_obj( obj_constructwallmap, -1 );}
//SL_light_cast_obj( obj_constructobjintrmap, -1 );

// if obj_zombie.lowgpu2 = 0 {
//SL_light_cast_obj( oOtherClient, -1 );
//SL_light_cast_obj( oOtherIA, -1 );
//SL_light_cast_obj(  obj_zombie, -1  );

if instance_exists(obj_anubis){SL_light_cast_obj( obj_anubis, -1 );}
if instance_exists(obj_barbelle){SL_light_cast_obj( obj_barbelle, -1 );}
//if instance_exists(obj_barnew){SL_light_cast_obj( obj_barnew, -1 );}
//if instance_exists(obj_anvil){SL_light_cast_obj( obj_anvil, -1 );}
if instance_exists(obj_voituredecoter){SL_light_cast_obj( obj_voituredecoter, -1 );}
//if instance_exists(obj_chestnew){SL_light_cast_obj( obj_chestnew, -1 );}
//if instance_exists(obj_puie){SL_light_cast_obj( obj_puie, -1 );}
if instance_exists(obj_croix2){SL_light_cast_obj( obj_croix2, -1 );}
if instance_exists(obj_croix3){SL_light_cast_obj( obj_croix3, -1 );}
if instance_exists(obj_croix4){SL_light_cast_obj( obj_croix4, -1 );}
if instance_exists(obj_croix5){SL_light_cast_obj( obj_croix5, -1 );}
if instance_exists(obj_croix6){SL_light_cast_obj( obj_croix6, -1 );}
if instance_exists(obj_croix8){SL_light_cast_obj( obj_croix8, -1 );}
if instance_exists(obj_croix9){SL_light_cast_obj( obj_croix9, -1 );}
if instance_exists(obj_statue1){SL_light_cast_obj( obj_statue1, -1 );}
if instance_exists(obj_statue2){SL_light_cast_obj( obj_statue2, -1 );}
if instance_exists(obj_statue3){SL_light_cast_obj( obj_statue3, -1 );}
if instance_exists(obj_statue4){SL_light_cast_obj( obj_statue4, -1 );}
if instance_exists(obj_statue5){SL_light_cast_obj( obj_statue5, -1 );}
if instance_exists(obj_statue6){SL_light_cast_obj( obj_statue6, -1 );}
if instance_exists(obj_statue7){SL_light_cast_obj( obj_statue7, -1 );}
if instance_exists(obj_statue8){SL_light_cast_obj( obj_statue8, -1 );}
if instance_exists(obj_statue9){SL_light_cast_obj( obj_statue9, -1 );}
if instance_exists(obj_statue10){SL_light_cast_obj( obj_statue10, -1 );}
if instance_exists(obj_block1){SL_light_cast_obj( obj_block1, -1 );}
if instance_exists(obj_block2){SL_light_cast_obj( obj_block2, -1 );}
if instance_exists(obj_block3){SL_light_cast_obj( obj_block3, -1 );}
if instance_exists(obj_block4){SL_light_cast_obj( obj_block4, -1 );}
if instance_exists(obj_block5){SL_light_cast_obj( obj_block5, -1 );}
if instance_exists(obj_block6){SL_light_cast_obj( obj_block6, -1 );}
if instance_exists(obj_block7){SL_light_cast_obj( obj_block7, -1 );}
if instance_exists(obj_block8){SL_light_cast_obj( obj_block8, -1 );}
if instance_exists(obj_block9){SL_light_cast_obj( obj_block9, -1 );}
if instance_exists(obj_block10){SL_light_cast_obj( obj_block10, -1 );}
if instance_exists(obj_block11){SL_light_cast_obj( obj_block11, -1 );}
if instance_exists(obj_block12){SL_light_cast_obj( obj_block12, -1 );}
if instance_exists(obj_block13){SL_light_cast_obj( obj_block13, -1 );}
//if instance_exists(obj_poubellenew){SL_light_cast_obj( obj_poubellenew, -1 );}
if instance_exists(obj_gate1){SL_light_cast_obj( obj_gate1, -1 );}
//if instance_exists(obj_sofa0){SL_light_cast_obj( obj_sofa0, -1 );}
if instance_exists(obj_gate2){SL_light_cast_obj( obj_gate2, -1 );}
//if instance_exists(obj_reactor){SL_light_cast_obj( obj_reactor, -1 );}
//if instance_exists(obj_clock){SL_light_cast_obj( obj_clock, -1 );}
//if instance_exists(obj_caisson){SL_light_cast_obj( obj_caisson, -1 );}
//if instance_exists(obj_marbre){SL_light_cast_obj( obj_marbre, -1 );}
if instance_exists(obj_propanetank){SL_light_cast_obj( obj_propanetank, -1 );}
//if instance_exists(obj_sandbag){SL_light_cast_obj( obj_sandbag, -1 );}
if instance_exists(obj_echafo){SL_light_cast_obj( obj_echafo, -1 );}
if instance_exists(obj_echafo2){SL_light_cast_obj( obj_echafo2, -1 );}
//if instance_exists(obj_cadi2){SL_light_cast_obj( obj_cadi2, -1 );}
//if instance_exists(obj_stackcash){SL_light_cast_obj( obj_stackcash, -1 );}
//if instance_exists(obj_sofabroke){SL_light_cast_obj( obj_sofabroke, -1 );}
//if instance_exists(obj_industrialnew){SL_light_cast_obj( obj_industrialnew, -1 );}
if instance_exists(obj_teepee){SL_light_cast_obj( obj_teepee, -1 );}
if instance_exists(obj_tower2){SL_light_cast_obj( obj_tower2, -1 );}



if instance_exists(obj_crate0){SL_light_cast_obj( obj_crate0, -1 );}

//if instance_exists(obj_crate02){SL_light_cast_obj( obj_crate02, -1 );}
//if instance_exists(obj_crate03){SL_light_cast_obj( obj_crate03, -1 );}
//SL_light_cast_obj( obj_shape01, -1 );
//if instance_exists(obj_shape03){SL_light_cast_obj( obj_shape03, -1 );}
//SL_light_cast_obj( obj_shape04, -1 );
//if instance_exists(obj_shape05){SL_light_cast_obj( obj_shape05, -1 );}
//if instance_exists(obj_shape06){SL_light_cast_obj( obj_shape06, -1 );}
//SL_light_cast_obj( obj_ball,    -1 );
//if instance_exists(obj_bush01){SL_light_cast_obj( obj_bush01,  -1 );}
if instance_exists(obj_vehicle){SL_light_cast_obj( obj_vehicle, -1 );}
if instance_exists(obj_arbreneige){SL_light_cast_obj( obj_arbreneige, -1 );}
if instance_exists(obj_arbremort){SL_light_cast_obj( obj_arbremort, -1 );}
//if instance_exists(obj_feuille1){SL_light_cast_obj( obj_feuille1, -1 );}
//if instance_exists(obj_feuille2){SL_light_cast_obj( obj_feuille2, -1 );}
//if instance_exists(obj_feuille3){SL_light_cast_obj( obj_feuille3, -1 );}
//if instance_exists(obj_buisson1){SL_light_cast_obj( obj_buisson1, -1 );}

if instance_exists(obj_tankneige){SL_light_cast_obj( obj_tankneige, -1 );}


//SL_light_cast_obj( obj_armurier, -1 );
//SL_light_cast_obj( obj_forgerondarme, -1 );
//SL_light_cast_obj( obj_reparateurdarme, -1 );

if instance_exists(obj_house1){SL_light_cast_obj( obj_house1, -1 );}
if instance_exists(obj_house2){SL_light_cast_obj( obj_house2, -1 );}
if instance_exists(obj_house3){SL_light_cast_obj( obj_house3, -1 );}
if instance_exists(obj_rocher1){SL_light_cast_obj( obj_rocher1, -1 );}
if instance_exists(obj_tronc){SL_light_cast_obj( obj_tronc, -1 );}
//if instance_exists(obj_ours){SL_light_cast_obj( obj_ours, -1 );}
//if instance_exists(obj_oursstop){SL_light_cast_obj( obj_oursstop, -1 );}
//if instance_exists(obj_loupstop){SL_light_cast_obj( obj_loupstop, -1 );}
//SL_light_cast_obj( obj_enemysniper, -1 );



//SL_light_cast_obj( obj_enemy2, -1 );
//SL_light_cast_obj( obj_wall, spr_wall );
//if instance_exists(obj_loup){SL_light_cast_obj( obj_loup, -1 );}
//SL_light_cast_obj( obj_enemyshootgun, -1 );
//SL_light_cast_obj( obj_enemyassaut, -1 );

//if instance_exists(obj_barricade1){SL_light_cast_obj( obj_barricade1, -1 );}
//if instance_exists(obj_barricade2){SL_light_cast_obj( obj_barricade2, -1 );}
//if instance_exists(obj_barricade3){SL_light_cast_obj( obj_barricade3, -1 );}
//if instance_exists(obj_barricade4){SL_light_cast_obj( obj_barricade4, -1 );}
//if instance_exists(obj_barricade5){SL_light_cast_obj( obj_barricade5, -1 );}
//if instance_exists(obj_barricade6){SL_light_cast_obj( obj_barricade6, -1 );}
//if instance_exists(obj_barricade7){SL_light_cast_obj( obj_barricade7, -1 );}










if instance_exists(obj_house4){SL_light_cast_obj( obj_house4,     -1 );}
if instance_exists(obj_house5){SL_light_cast_obj( obj_house5,      -1 );}

if instance_exists(obj_house7){SL_light_cast_obj( obj_house7,     -1 );}
if instance_exists(obj_house8){SL_light_cast_obj( obj_house8,   -1 );}
if instance_exists(obj_house9){SL_light_cast_obj( obj_house9,      -1 );}
if instance_exists(obj_house10){SL_light_cast_obj( obj_house10,   -1 );}

if instance_exists(obj_house12){SL_light_cast_obj( obj_house12,     -1 );}
if instance_exists(obj_house13){SL_light_cast_obj( obj_house13,  -1 );}
if instance_exists(obj_house14){SL_light_cast_obj( obj_house14,      -1 );}
if instance_exists(obj_housebroke){SL_light_cast_obj( obj_housebroke,     -1 );}


if instance_exists(obj_tente){SL_light_cast_obj( obj_tente,      -1 );}
if instance_exists(obj_tente2){SL_light_cast_obj( obj_tente2,     -1 );}
if instance_exists(obj_tente3){SL_light_cast_obj( obj_tente3,   -1 );}
if instance_exists(obj_tente4){SL_light_cast_obj( obj_tente4,      -1 );}





if instance_exists(obj_etageafoin){SL_light_cast_obj( obj_etageafoin,       -1 );}

//if instance_exists(obj_ascensseur){SL_light_cast_obj( obj_ascensseur,       -1 );}
//SL_light_cast_obj( obj_comptoir,       -1 );
//SL_light_cast_obj( obj_comptoir2,      -1 );
//SL_light_cast_obj( obj_bibliotheque,      -1 );
//SL_light_cast_obj( obj_bibliotheque2,      -1 );
//SL_light_cast_obj( obj_bibliotheque3,      -1 );
//SL_light_cast_obj( obj_cuisiniere,       -1 );
//SL_light_cast_obj( obj_cuisiniere2,      -1 );
//SL_light_cast_obj( obj_chaise,     -1 );
//SL_light_cast_obj( obj_chaise2,      -1 );
//SL_light_cast_obj(  obj_chaise3,      -1 );
//SL_light_cast_obj( obj_chaisetomber,     -1 );
//SL_light_cast_obj( obj_cercueil,     -1 );
//SL_light_cast_obj( obj_bureau,      -1 );
//SL_light_cast_obj(  obj_table,      -1 );
//SL_light_cast_obj( obj_tabletorture,       -1 );
//SL_light_cast_obj( obj_torture,       -1 );
//SL_light_cast_obj( obj_torture2,      -1 );
//SL_light_cast_obj( obj_table2,      -1 );
//SL_light_cast_obj( obj_table3,       -1 );
//SL_light_cast_obj( obj_statue,       -1 );
//SL_light_cast_obj( obj_tablepoisson,       -1 );
//SL_light_cast_obj( obj_tableforgeron,      -1 );
//SL_light_cast_obj( obj_vaisselle,      -1 );
//SL_light_cast_obj( obj_tablefruit,      -1 );
//SL_light_cast_obj( obj_table4,      -1 );
//SL_light_cast_obj( obj_etagere,      -1 );
//SL_light_cast_obj( obj_four,       -1 );
//SL_light_cast_obj( obj_four2,      -1 );
//SL_light_cast_obj( obj_table5,      -1 );
//SL_light_cast_obj( obj_table6,      -1 );
//SL_light_cast_obj( obj_table7,     -1 );
//SL_light_cast_obj( obj_table8,       -1 );
//SL_light_cast_obj( obj_table9,      -1 );
//SL_light_cast_obj( obj_tablejeu,     -1 );
//SL_light_cast_obj( obj_table10,      -1 );
//SL_light_cast_obj( obj_table11,       -1 );
//SL_light_cast_obj( obj_etagerevin,  -1 );
//SL_light_cast_obj( obj_burreau,      -1 );

//if instance_exists(obj_crucifier){SL_light_cast_obj( obj_crucifier,       -1 );}
//if instance_exists(obj_crucifier2){SL_light_cast_obj( obj_crucifier2,     -1 );}
if instance_exists(obj_arbremort2){SL_light_cast_obj( obj_arbremort2,       -1 );}
//SL_light_cast_obj( obj_sleepingbagsnow,      -1 );
if instance_exists(obj_tenteneige1){SL_light_cast_obj( obj_tenteneige1,      -1 );}
if instance_exists(obj_tenteneige2){SL_light_cast_obj( obj_tenteneige2,      -1 );}
//SL_light_cast_obj( obj_brouette,      -1 );
if instance_exists(obj_machineculture){SL_light_cast_obj( obj_machineculture,      -1 );}

if instance_exists(obj_debaras1){SL_light_cast_obj( obj_debaras1,      -1 );}
if instance_exists(obj_debaras2){SL_light_cast_obj( obj_debaras2,      -1 );}
if instance_exists(obj_debaras3){SL_light_cast_obj( obj_debaras3,       -1 );}
if instance_exists(obj_debaras4){SL_light_cast_obj( obj_debaras4,       -1 );}
if instance_exists(obj_debaras5){SL_light_cast_obj( obj_debaras5,      -1 );}
if instance_exists(obj_debaras6){SL_light_cast_obj( obj_debaras6,       -1 );}
//SL_light_cast_obj( obj_debaras7,       -1 );
if instance_exists(obj_debaras8){SL_light_cast_obj( obj_debaras8,       -1 );}


if instance_exists(obj_rockwhite1){SL_light_cast_obj( obj_rockwhite1,       -1 );}
if instance_exists(obj_rockwhite2){SL_light_cast_obj( obj_rockwhite2,      -1 );}
if instance_exists(obj_rockwhite3){SL_light_cast_obj( obj_rockwhite3,       -1 );}
if instance_exists(obj_rockwhite4){SL_light_cast_obj( obj_rockwhite4,       -1 );}
if instance_exists(obj_rockwhite5){SL_light_cast_obj( obj_rockwhite5,       -1 );}
if instance_exists(obj_rockwhite6){SL_light_cast_obj( obj_rockwhite6,       -1 );}
if instance_exists(obj_rockwhite7){SL_light_cast_obj( obj_rockwhite7,       -1 );}

if instance_exists(obj_chest01){SL_light_cast_obj( obj_chest01,      -1 );}
if instance_exists(obj_chest02){SL_light_cast_obj( obj_chest02,       -1 );}
if instance_exists(obj_chest03){SL_light_cast_obj( obj_chest03,       -1 );}
if instance_exists(obj_chest04){SL_light_cast_obj( obj_chest04,       -1 );}
if instance_exists(obj_chest05){SL_light_cast_obj( obj_chest05,       -1 );}
if instance_exists(obj_chest06){SL_light_cast_obj( obj_chest06,       -1 );}

if instance_exists(obj_wall2){SL_light_cast_obj( obj_wall2,       -1 );}


//SL_light_cast_obj( obj_debris1,       -1 );
//SL_light_cast_obj( obj_debris2,       -1 );
//if instance_exists(obj_spike1){SL_light_cast_obj( obj_spike1,       -1 );}
//if instance_exists(obj_spike2){SL_light_cast_obj( obj_spike2,       -1 );}
//if instance_exists(obj_spike3){SL_light_cast_obj( obj_spike3,      -1 );}


if instance_exists(obj_feuille7){SL_light_cast_obj( obj_feuille7,      -1 );}
//if instance_exists(obj_feuille8){SL_light_cast_obj( obj_feuille8,      -1 );}
//if instance_exists(obj_feuille9){SL_light_cast_obj( obj_feuille9,      -1 );}
//if instance_exists(obj_feuille10){SL_light_cast_obj( obj_feuille10,      -1 );}
//if instance_exists(obj_feuille11){SL_light_cast_obj( obj_feuille11,      -1 );}

//SL_light_cast_obj( obj_marchand,      -1 );


if instance_exists(obj_train2){SL_light_cast_obj( obj_train2,      -1 );}
if instance_exists(obj_train3){SL_light_cast_obj( obj_train3,      -1 );}
if instance_exists(obj_train4){SL_light_cast_obj( obj_train4,      -1 );}
if instance_exists(obj_train5){SL_light_cast_obj( obj_train5,      -1 );}



if instance_exists(obj_vehicule1){SL_light_cast_obj( obj_vehicule1,      -1 );}
if instance_exists(obj_vehicule2){SL_light_cast_obj( obj_vehicule2,      -1 );}
if instance_exists(obj_vehicule5){SL_light_cast_obj( obj_vehicule5,      -1 );}
if instance_exists(obj_vehicule6){SL_light_cast_obj( obj_vehicule6,      -1 );}
if instance_exists(obj_vehicule7){SL_light_cast_obj( obj_vehicule7,      -1 );}
if instance_exists(obj_vehicule11){SL_light_cast_obj( obj_vehicule11,      -1 );}
if instance_exists(obj_vehicule12){SL_light_cast_obj( obj_vehicule12,      -1 );}
if instance_exists(obj_vehicule13){SL_light_cast_obj( obj_vehicule13,      -1 );}
if instance_exists(obj_vehicule16){SL_light_cast_obj( obj_vehicule16,      -1 );}
if instance_exists(obj_vehicule18){SL_light_cast_obj( obj_vehicule18,      -1 );}
if instance_exists(obj_vehicule24){SL_light_cast_obj( obj_vehicule24,      -1 );}
if instance_exists(obj_vehicule25){SL_light_cast_obj( obj_vehicule25,      -1 );}
if instance_exists(obj_vehicule26){SL_light_cast_obj( obj_vehicule26,      -1 );}
if instance_exists(obj_hummerarmed){SL_light_cast_obj( obj_hummerarmed,      -1 );}


//SL_light_cast_obj( obj_barrel3,      -1 );

//SL_light_cast_obj( obj_barragevehicule,      -1 );
//SL_light_cast_obj( obj_labotaryitem,      -1 );
if instance_exists(obj_tentemilitary){SL_light_cast_obj( obj_tentemilitary,      -1 );}

if instance_exists(obj_tower){SL_light_cast_obj( obj_tower,      -1 );}
//SL_light_cast_obj( obj_grillage,      -1 );




//SL_light_cast_obj( obj_beton1,  -1 );
//SL_light_cast_obj( obj_beton2,  -1 );

if instance_exists(obj_immeuble1neige){SL_light_cast_obj( obj_immeuble1neige,      -1 );}
if instance_exists(obj_immeuble2neige){SL_light_cast_obj( obj_immeuble2neige,      -1 );}
if instance_exists(obj_immeuble22neige){SL_light_cast_obj( obj_immeuble22neige,      -1 );}
if instance_exists(obj_immeuble3neige){SL_light_cast_obj( obj_immeuble3neige,      -1 );}
if instance_exists(obj_immeuble4neige){SL_light_cast_obj( obj_immeuble4neige,      -1 );}
if instance_exists(obj_immeuble5neige){SL_light_cast_obj( obj_immeuble5neige,      -1 );}
if instance_exists(obj_immeuble6neige){SL_light_cast_obj( obj_immeuble6neige,      -1 );}
if instance_exists(obj_immeuble7neige){SL_light_cast_obj( obj_immeuble7neige,      -1 );}
if instance_exists(obj_immeuble1){SL_light_cast_obj( obj_immeuble1,      -1 );}
if instance_exists(obj_immeuble2){SL_light_cast_obj( obj_immeuble2,      -1 );}
if instance_exists(obj_immeuble22){SL_light_cast_obj( obj_immeuble22,      -1 );}
if instance_exists(obj_immeuble3){SL_light_cast_obj( obj_immeuble3,      -1 );}
if instance_exists(obj_immeuble4){SL_light_cast_obj( obj_immeuble4,      -1 );}
if instance_exists(obj_immeuble5){SL_light_cast_obj( obj_immeuble5,      -1 );}
if instance_exists(obj_immeuble6){SL_light_cast_obj( obj_immeuble6,      -1 );}
if instance_exists(obj_immeuble7){SL_light_cast_obj( obj_immeuble7,      -1 );}

//SL_light_cast_obj( obj_etagere,      -1 );
//SL_light_cast_obj( obj_etagere3,      -1 );
//SL_light_cast_obj( obj_ressource1,      -1 );
//SL_light_cast_obj( obj_ressource2,      -1 );
//SL_light_cast_obj( obj_ressource3,      -1 );
//SL_light_cast_obj( obj_burreau,      -1 );
//SL_light_cast_obj( obj_burreau3,      -1 );
//SL_light_cast_obj( obj_canape,      -1 );
//SL_light_cast_obj( obj_lit1,      -1 );
//SL_light_cast_obj( obj_lit2,      -1 );
//SL_light_cast_obj( obj_lit3,      -1 );
//SL_light_cast_obj( obj_lit4,      -1 );
//SL_light_cast_obj( obj_tv,      -1 );
//SL_light_cast_obj( obj_wc,      -1 );
//SL_light_cast_obj( obj_four3,      -1 );
//SL_light_cast_obj( obj_evier,      -1 );
//SL_light_cast_obj( obj_duvet,      -1 );
//SL_light_cast_obj( obj_baignoire,      -1 );
if instance_exists(obj_doorbunker){SL_light_cast_obj( obj_doorbunker,      -1 );}
//SL_light_cast_obj( obj_exo,      -1 );



//le 30 / 10
//SL_light_cast_obj(   obj_frigo,   -1 );
//if instance_exists(obj_barrel3){SL_light_cast_obj(   obj_barrel3,  -1 );}
//SL_light_cast_obj(   obj_lavabo,   -1 );
//SL_global_cast_obj( 0,  obj_banccity1,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_banccity2,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_banccity3,   -1,    1, 1 );
//SL_light_cast_obj(   obj_armoirevide,   -1 );
if instance_exists(obj_arbreneige4){SL_light_cast_obj(    obj_arbreneige4,    -1 );}
if instance_exists(obj_container3){SL_light_cast_obj(   obj_container3,    -1 );}
if instance_exists(obj_container4){SL_light_cast_obj(   obj_container4,    -1 );}
if instance_exists(obj_container5){SL_light_cast_obj(   obj_container5,   -1 );}
if instance_exists(obj_container6){SL_light_cast_obj(    obj_container6,   -1 );}
//SL_light_cast_obj(   obj_crategrunge1,   -1,    1, 1 );
//SL_light_cast_obj(  obj_crategrunge2,   -1,    1, 1 );
//SL_light_cast_obj(   obj_crategrunge3,   -1,    1, 1 );
//SL_light_cast_obj(   obj_crategrunge4,   -1,    1, 1 );
//SL_light_cast_obj(   obj_crategrunge5,   -1,    1, 1 );
//SL_light_cast_obj(   obj_crategrunge6,   -1,    1, 1 );
//SL_light_cast_obj(   obj_crategrunge7,   -1,    1, 1 );
//SL_light_cast_obj(   spr_crategrunge8,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_burreaugrunge,   -1,    1, 1 );
//SL_light_cast_obj(   obj_armoiregrunge,     -1 );
//SL_global_cast_obj( 0, obj_pianogrunge,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_chaisegrunge1,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_chaisegrunge2,   -1,    1, 1 );
//SL_light_cast_obj(   obj_fueltankgrunge,    -1 );
//SL_light_cast_obj(   obj_generatorgrunge,   -1 );
//SL_light_cast_obj(   obj_structuregrunge,  -1 );
//SL_global_cast_obj( 0, obj_shoppingbasketgrunge,   -1,    1, 1 );
//SL_light_cast_obj(   obj_tobogangrunge,   -1 );
//SL_light_cast_obj(   obj_tobogansnow,    -1 );
//SL_global_cast_obj( 0, obj_sofagrunge1,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_sofagrunge2,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_sofagrunge3,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_tabouretgrunge,   -1,    1, 1 );
//SL_light_cast_obj(   obj_balancoiresnow,    -1 );
//SL_global_cast_obj( 0, obj_tablegrunge,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_tvgrunge,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_wcgrunge,   -1,    1, 1 );
if instance_exists(obj_abribus){SL_light_cast_obj(  obj_abribus,    -1 );}
//SL_light_cast_obj(   obj_feucirculation,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_panneau1,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_panneau2,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_panneau3,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_panneau4,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_poteauelectrique,   -1,    1, 1 );

if instance_exists(obj_ambulancegrunge){SL_light_cast_obj(   obj_ambulancegrunge,    -1 );}
if instance_exists(obj_ambulancegrunge2){SL_light_cast_obj(    obj_ambulancegrunge2,    -1 );}
if instance_exists(obj_camionretournegrunge){SL_light_cast_obj(   obj_camionretournegrunge,    -1 );}
if instance_exists(obj_busgrunge){SL_light_cast_obj(    obj_busgrunge,    -1 );}
if instance_exists(obj_camiongrunge){SL_light_cast_obj(   obj_camiongrunge,   -1 );}
if instance_exists(obj_camiongrunge2){SL_light_cast_obj(   obj_camiongrunge2,   -1 );}
if instance_exists(obj_camiongrunge3){SL_light_cast_obj(   obj_camiongrunge3,    -1 );}
if instance_exists(obj_camiongrunge4){SL_light_cast_obj(   obj_camiongrunge4,    -1 );}
if instance_exists(obj_camiongrunge5){SL_light_cast_obj(    obj_camiongrunge5,    -1 );}
if instance_exists(obj_camiongrunge6){SL_light_cast_obj(   obj_camiongrunge6,     -1 );}
if instance_exists(obj_vehiculegrunge){SL_light_cast_obj(   obj_vehiculegrunge,    -1 );}
if instance_exists(obj_vehiculegrunge2){SL_light_cast_obj(    obj_vehiculegrunge2,    -1 );}
if instance_exists(obj_vehiculegrunge3){SL_light_cast_obj(   obj_vehiculegrunge3,    -1 );}
if instance_exists(obj_vehiculegrunge4){SL_light_cast_obj(  obj_vehiculegrunge4,    -1 );}
if instance_exists(obj_vehiculegrunge5){SL_light_cast_obj(   obj_vehiculegrunge5,    -1 );}
if instance_exists(obj_vehiculegrunge6){SL_light_cast_obj(   obj_vehiculegrunge6,    -1 );}
if instance_exists(obj_vehiculegrunge7){SL_light_cast_obj(   obj_vehiculegrunge7,    -1 );}
if instance_exists(obj_vehiculegrunge8){SL_light_cast_obj(  obj_vehiculegrunge8,     -1 );}
if instance_exists(obj_vehiculegrunge9){SL_light_cast_obj(   obj_vehiculegrunge9,  -1 );}
if instance_exists(obj_vehiculegrunge10){SL_light_cast_obj(   obj_vehiculegrunge10,    -1 );}
if instance_exists(obj_vehiculegrunge11){SL_light_cast_obj(   obj_vehiculegrunge11,     -1 );}
if instance_exists(obj_vehiculegrunge12){SL_light_cast_obj(   obj_vehiculegrunge12,   -1 );}
if instance_exists(obj_vehiculegrunge13){SL_light_cast_obj(   obj_vehiculegrunge13,     -1 );}
if instance_exists(obj_vehiculegrunge14){SL_light_cast_obj(   obj_vehiculegrunge14,   -1 );}
if instance_exists(obj_vehiculegrunge15){SL_light_cast_obj(   obj_vehiculegrunge15,     -1 );}
if instance_exists(obj_vehiculegrunge16){SL_light_cast_obj(    obj_vehiculegrunge16,    -1 );}
if instance_exists(obj_vehiculegrunge17){SL_light_cast_obj(   obj_vehiculegrunge17,   -1 );}
if instance_exists(obj_wagongrunge1){SL_light_cast_obj(    obj_wagongrunge1,     -1 );}
if instance_exists(obj_wagongrunge2){SL_light_cast_obj(    obj_wagongrunge2,    -1 );}
if instance_exists(obj_wagongrunge3){SL_light_cast_obj(   obj_wagongrunge3,     -1 );}
if instance_exists(obj_wagongrunge4){SL_light_cast_obj(    obj_wagongrunge4,     -1 );}
if instance_exists(obj_wagongrunge5){SL_light_cast_obj(   obj_wagongrunge5,     -1 );}
if instance_exists(obj_wagongrunge6){SL_light_cast_obj(   obj_wagongrunge6,    -1 );}
//SL_global_cast_obj( 0,  obj_banc1,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_banc2,   -1,    1, 1 );
//SL_light_cast_obj(   obj_cratemetro1,    -1 );
//SL_light_cast_obj(  obj_cratemetro2,     -1 );
//SL_global_cast_obj( 0,  obj_lampemetro,   -1,    1, 1 );
//SL_global_cast_obj( 0,  obj_entremetro,   -1,    1, 1 );
//SL_global_cast_obj( 0, obj_lampadaire,   -1,    1, 1 );
//SL_light_cast_obj(   obj_plot,   -1 );
if instance_exists(obj_wallmine){SL_light_cast_obj(   obj_wallmine,   -1 );}
//SL_global_cast_obj( 0, obj_souche,   -1,    1, 1 );


if instance_exists(obj_vehiculegrunge18){SL_light_cast_obj(   obj_vehiculegrunge18,      -1 );}
if instance_exists(obj_vehiculegrunge19){SL_light_cast_obj(  obj_vehiculegrunge19,      -1 );}
if instance_exists(obj_vehiculegrunge20){SL_light_cast_obj(  obj_vehiculegrunge20,        -1 );}
if instance_exists(obj_vehiculegrunge21){SL_light_cast_obj(  obj_vehiculegrunge21,        -1 );}
if instance_exists(obj_vehiculegrunge22){SL_light_cast_obj(   obj_vehiculegrunge22,       -1 );}
if instance_exists(obj_vehiculegrunge23){SL_light_cast_obj(  obj_vehiculegrunge23,       -1 );}
if instance_exists(obj_vehiculegrunge24){SL_light_cast_obj(   obj_vehiculegrunge24,       -1 );}
if instance_exists(obj_vehiculegrunge25){SL_light_cast_obj(  obj_vehiculegrunge25,       -1 );}
if instance_exists(obj_vehiculegrunge26){SL_light_cast_obj(  obj_vehiculegrunge26,        -1 );}
if instance_exists(obj_vehiculegrunge27){SL_light_cast_obj(  obj_vehiculegrunge27,        -1 );}
if instance_exists(obj_vehiculegrunge28){SL_light_cast_obj(   obj_vehiculegrunge28,       -1 );}
if instance_exists(obj_vehiculegrunge29){SL_light_cast_obj(  obj_vehiculegrunge29,        -1 );}
if instance_exists(obj_vehiculegrunge30){SL_light_cast_obj(   obj_vehiculegrunge30,       -1 );}
if instance_exists(obj_vehiculegrunge31){SL_light_cast_obj(  obj_vehiculegrunge31,        -1 );}
if instance_exists(obj_vehiculegrunge32){SL_light_cast_obj(  obj_vehiculegrunge32,        -1 );}
if instance_exists(obj_vehiculegrunge33){SL_light_cast_obj(  obj_vehiculegrunge33,       -1 );}
if instance_exists(obj_vehiculegrunge34){SL_light_cast_obj(  obj_vehiculegrunge34,        -1 );}
if instance_exists(obj_vehiculegrunge35){SL_light_cast_obj(  obj_vehiculegrunge35,       -1 );}
if instance_exists(obj_vehiculegrunge36){SL_light_cast_obj(  obj_vehiculegrunge36,        -1 );}
if instance_exists(obj_vehiculegrunge37){SL_light_cast_obj( obj_vehiculegrunge37,       -1 );}
if instance_exists(obj_vehiculegrunge38){SL_light_cast_obj(  obj_vehiculegrunge38,        -1 );}
if instance_exists(obj_vehiculegrunge39){SL_light_cast_obj(  obj_vehiculegrunge39,       -1 );}
if instance_exists(obj_vehiculegrunge40){SL_light_cast_obj(   obj_vehiculegrunge40,       -1 );}
if instance_exists(obj_vehiculegrunge41){SL_light_cast_obj(  obj_vehiculegrunge41,       -1 );}
if instance_exists(obj_vehiculegrunge42){SL_light_cast_obj(  obj_vehiculegrunge42,       -1 );}
if instance_exists(obj_vehiculegrunge43){SL_light_cast_obj(   obj_vehiculegrunge43,        -1 );}
if instance_exists(obj_vehiculegrunge44){SL_light_cast_obj(   obj_vehiculegrunge44,      -1 );}
if instance_exists(obj_vehiculegrunge45){SL_light_cast_obj(   obj_vehiculegrunge45,       -1 );}
if instance_exists(obj_vehiculegrunge46){SL_light_cast_obj(  obj_vehiculegrunge46,       -1 );}

if instance_exists(obj_camiongrunge7){SL_light_cast_obj(  obj_camiongrunge7,       -1);}

if instance_exists(obj_busgrunge2){SL_light_cast_obj(  obj_busgrunge2,        -1 );}
if instance_exists(obj_busgrunge3){SL_light_cast_obj(  obj_busgrunge3,        -1 );}
if instance_exists(obj_grue){SL_light_cast_obj(  obj_grue,        -1 );}
if instance_exists(obj_helico){SL_light_cast_obj(   obj_helico,         -1 );}
if instance_exists(obj_fusee){SL_light_cast_obj(  obj_fusee,         -1 );}

//SL_global_cast_obj(  obj_portemissile,        -1 );
//SL_global_cast_obj(  obj_benne,         -1);
//SL_global_cast_obj(  obj_barremetal,        -1 );
if instance_exists(obj_missilelauncher){SL_light_cast_obj(   obj_missilelauncher,         -1);}
//SL_global_cast_obj(   obj_nukeetsocle,       -1);
//SL_global_cast_obj(   obj_nuke,        -1);
if instance_exists(obj_tourellearmy1){SL_light_cast_obj(  obj_tourellearmy1,        -1 );}
if instance_exists(obj_tourellearmy2){SL_light_cast_obj(  obj_tourellearmy2,         -1 );}
if instance_exists(obj_tourellearmy3){SL_light_cast_obj(   obj_tourellearmy3,         -1 );}
//SL_global_cast_obj(  obj_ordimuro,        -1 );}
//SL_global_cast_obj(  obj_cadi,         -1 );}

//SL_global_cast_obj(   obj_btr70body,        -1 );}
//SL_global_cast_obj(  obj_btr80body,       -1 );}
//SL_global_cast_obj(  obj_challengerbody,       -1 );}
//SL_global_cast_obj(   obj_pzkbody,         -1 );}
//SL_global_cast_obj(  obj_tigerbody,       -1 );}
//SL_global_cast_obj(  obj_turanbody,        -1 );}
//SL_global_cast_obj(  obj_zsubody,        -1 );}

if instance_exists(obj_eglisemur){SL_light_cast_obj( obj_eglisemur, -1 );}
if instance_exists(obj_egliseext){SL_light_cast_obj( obj_egliseext, -1 );}
if instance_exists(obj_murdeglace){SL_light_cast_obj( obj_murdeglace, -1 );}


if instance_exists(obj_bigrocher){SL_light_cast_obj( obj_bigrocher,     -1 );}

//if instance_exists(obj_cerf){SL_light_cast_obj( obj_cerf,     -1 );}
//if instance_exists(obj_barrilnuke){SL_light_cast_obj( obj_barrilnuke,     -1 );}

if instance_exists(obj_bigrock1){SL_light_cast_obj( obj_bigrock1,     -1 );}
if instance_exists(obj_bigrock2){SL_light_cast_obj( obj_bigrock2,     -1 );}
if instance_exists(obj_bigrock3){SL_light_cast_obj( obj_bigrock3,     -1 );}
if instance_exists(obj_bigrock4){SL_light_cast_obj( obj_bigrock4,     -1 );}
if instance_exists(obj_bigrock5){SL_light_cast_obj( obj_bigrock5,     -1 );}
if instance_exists(obj_bigrock6){SL_light_cast_obj( obj_bigrock6,     -1 );}
if instance_exists(obj_bigrock7){SL_light_cast_obj( obj_bigrock7,     -1 );}
if instance_exists(obj_bigrock8){SL_light_cast_obj( obj_bigrock8,     -1 );}
if instance_exists(obj_montagne1){SL_light_cast_obj( obj_montagne1,     -1 );}
if instance_exists(obj_montagne2){SL_light_cast_obj( obj_montagne2,     -1 );}
if instance_exists(obj_montagne3){SL_light_cast_obj( obj_montagne3,     -1 );}
//if instance_exists(obj_murconstruct){SL_light_cast_obj( obj_murconstruct,     -1 );}
//if instance_exists(obj_murconstruct2){SL_light_cast_obj( obj_murconstruct2,     -1 );}
//if instance_exists(obj_murfortress){SL_light_cast_obj( obj_murfortress,     -1 );}
if instance_exists(obj_portedeprison){SL_light_cast_obj( obj_portedeprison,     -1 );}

if instance_exists(obj_walltole){SL_light_cast_obj( obj_walltole,     -1 );}

//if instance_exists(obj_bossfinalpnj){SL_light_cast_obj( obj_bossfinalpnj,     -1 );}
//if instance_exists(obj_litcamp){SL_light_cast_obj( obj_litcamp,     -1 );}
//if instance_exists(obj_mineur){SL_light_cast_obj( obj_mineur,     -1 );}

//if instance_exists(obj_caissebottle){SL_light_cast_obj( obj_caissebottle,          -1 );}
if instance_exists(obj_bache){SL_light_cast_obj(  obj_bache,          -1 );}
//if instance_exists(obj_barilvide){SL_light_cast_obj(  obj_barilvide,      -1 );}
if instance_exists(obj_indus1){SL_light_cast_obj( obj_indus1,     -1 );}
if instance_exists(obj_indus2){SL_light_cast_obj(  obj_indus2,     -1 );}
if instance_exists(obj_indus3){SL_light_cast_obj(  obj_indus3,      -1 );}
if instance_exists(obj_indus4){SL_light_cast_obj(  obj_indus4,      -1 );}
if instance_exists(obj_helicodown){SL_light_cast_obj(  obj_helicodown,      -1 );}
//if instance_exists(obj_barilbleu){SL_light_cast_obj(  obj_barilbleu,       -1 );}
if instance_exists(obj_barragebeton){SL_light_cast_obj(  obj_barragebeton,      -1 );}
//if instance_exists(obj_caissemine){SL_light_cast_obj(  obj_caissemine,     -1 );}
if instance_exists(obj_ruine1){SL_light_cast_obj(  obj_ruine1,     -1 );}
if instance_exists(obj_ruine2){SL_light_cast_obj( obj_ruine2,      -1 );}





// }









}


//SL_light_cast_obj( obj_vehicle, -1 );

SL_light_ini_end(); // Termine l'initialisation de l'objet lumière

//}
}

/*}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Libère la mémoire utilisée par les surfaces
//if obj_zombie.lowgpu2 = 3 {}else{
if instance_exists(obj_engine){
if alarm[8] &lt; 0 {
SL_light_free();}
}//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[9] = 20
//sl_light_refresh         = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode = 7 or mode = 11 or mode = 14 or mode = 15 or mode = 16 or mode = 17 {}else{
SL_light_cast_obj( obj_bossnet, -1 );
SL_light_cast_obj( obj_zombie, -1 );
SL_light_cast_obj( obj_enemy2, -1 );
SL_light_cast_obj( obj_villageois, -1 );
SL_light_cast_obj( obj_stalker, -1 );

SL_light_cast_obj( obj_gardeintro, -1 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pas utilisé pour l'instant ,pour rallumer light temps apres hack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// lumière saccade
//alarm[4] = random (1500)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw = 1
//instance_create(x,y,obj_light)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*if mode != 3  &amp;&amp; mode != 6  &amp;&amp; mode != 13 &amp;&amp; mode != 14 &amp;&amp; mode != 15 &amp;&amp; mode != 16
&amp;&amp; mode != 17 &amp;&amp; mode != 19 &amp;&amp; mode != 20 &amp;&amp; mode != 21 &amp;&amp; mode != 22 &amp;&amp; mode != 23
SL_light_cast_obj(obj_zombie,spr_zombie_mask);

if ((mode=9) or (mode=6) or (mode=18)) SL_light_cast_obj(obj_plant01,-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[8] &lt; 0 {
if instance_exists(obj_engine){

//colorfinaljolie = c_white

//make_colour_rgb(79, 226, 179),
//make_colour_rgb(79, 226, 179),
//make_colour_rgb(79, 226, 179),


if obj_engine.stepengine &gt;= 30 {
if sl_light_active = 1 {


if parenttrain &gt; 0 { if instance_exists(parenttrain){}else{instance_destroy();}}

if instance_exists(obj_engine){
//if obj_zombie.lowgpu2 = 3 {}else{
depth = 101

//LIGHT CONSTRUCT
if alarm[8] &lt; 0 {

//GENERATEUR PROCHE
if alarm[7] &lt; 0 {

if room = room119 or room = room115 or room = room116 or room = room117 or room = room118 {
oklight = 0
//repeat(500){
with(obj_constructobjintrmap){
if point_distance(x,y,other.x,other.y) &lt; 2400 {
if craftnowobject = 19 {

other.oklight = 1

}}}//}

if oklight = 0 {instance_deactivate_object(id);}}
}

if instance_exists(idlightidconstruct){
if idlightidconstruct &gt; 0 {
x = idlightidconstruct.x
y = idlightidconstruct.y
}}else{if idlightidconstruct &gt; 0 { }}
/*
if idlightidconstruct &gt; 0 {
light = 0
with(obj_constructobjintrmap){
if point_distance(x,y,other.x,other.y) &lt; 150 {
if craftnowobject = 19 {
if guildeid = obj_guilde.guildesend {
other.light = 1
}}}}

if light = 0 {instance_destroy();}
if instance_exists(idlightidconstruct){
x = idlightidconstruct.x
y = idlightidconstruct.y}
}*/






/*if obj_zombie.lowgpu = 1 {
if alarm[2] &lt; 1{
alarm[2] = 15
}
}*/


// Actualise la position de la lumière
sl_light_x = x;
sl_light_y = y;

// Configurations des différentes lumières déterminées par la var 'mode' déclarée dans l'event creation code de l'éditeur de room //
switch mode
{
case 1: // Lumière blanche saccadée
{
sl_light_xscale          = 3;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
sl_light_power           = random(5);
sl_light_shadowlength    = obj_hudoff.statopti[2]//5;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 4.04;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.3;

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &gt;= 185 sl_light_refresh = false;
else sl_light_refresh = true;
} break;

case 2: // Lumière jaune
{
sl_light_xscale          = 2;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_yellow;
sl_light_power           = 0.9;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.03;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;

if fps!=0 path_speed=0.4*(60/fps);
} break;

case 3: // Lumière orange grésillante fixe
{
sl_light_xscale          = 2.3;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_orange;
sl_light_power           = 0.5 + random(0.2);
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.04;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;
sl_light_refresh         = false;
} break;

case 4: // Lumière jaune clignotante
{
sl_light_xscale          = 1.33;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_yellow;
sl_light_ambientpower    = 0.25;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.045;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.4;

// Clignotement de la lumière
time += 0.03*60/max(fps,1) if time&gt;=pi*2 time=0;

sl_light_power  = 0.33 + (sin(time)+1) / 3;
sl_light_xscale = 0.8 + 0.7*sl_light_power;
sl_light_yscale = sl_light_xscale;
} break;

case 5: // Lumière rouge/orangé saccadée
{
sl_light_xscale          = 1.86;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = make_color_rgb(255,83,0);
sl_light_power           = 0.8 + random(0.7);
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.045;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.1;
} break;

case 6: // Projecteur blanc fixe
{
sl_light_angle = image_angle
sl_light_texture         = spr_light02;
sl_light_xscale          = 1;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = c_red//make_color_rgb(149,219,79);
sl_light_power           = 0.8;
sl_light_ambientpower    = 0.25;
sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.28;
sl_light_refresh         = true;
} break;

case 7: // Lumière blanche
{
sl_light_xscale          = 5.26;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
sl_light_power           = 0.7;//0.7
sl_light_ambientpower    = 0.5;//0.3
sl_light_shadowlength    = obj_hudoff.statopti[2]//2;//2
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.9;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}

//
//sl_light_xscale          = 3.55;
//sl_light_yscale          = sl_light_xscale;
//sl_light_color           = make_color_rgb(255,255,230);
//sl_light_power           = 0.9;
//sl_light_ambientpower    = 0.3;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;

// Mouvement
time += 0.035*60/max(fps,1) if time&gt;=pi*2 time=0;
l  = sin(time)*22;
d += 0.4*60/max(fps,1) if d&gt;=360 d=0;

x = xstart + lengthdir_x(l,d);
y = ystart + lengthdir_y(l,d);
} break;

case 8: // Projecteur blanchâtre
{
sl_light_texture         = spr_light02;
sl_light_xscale          = 4;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = make_color_rgb(255,245,176);
sl_light_power           = 0.7 + random(0.1);
sl_light_ambientpower    = 0.15;
sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.27;

// Rotation du projecteur
if sl_light_angle&gt;60 increment=-0.08 else if sl_light_angle&lt;30 increment=0.08;
if fps!=0 sl_light_angle+=increment*(60/fps);
} break;

case 9: // Feu
{
sl_light_x               = x - 0.8 + random(1.6);
sl_light_y               = y - 0.8 + random(1.6);
sl_light_xscale          = 2;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = make_color_rgb(245+random(10),90+random(5),random(5));
sl_light_power           = 0.17 + (0.63+random(0.2)) * (-global.sl_ambient_light+1);
sl_light_ambientpower    = 0.2;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.032;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.1;
} break;

case 10: // Gyrophare rouge
{
sl_light_texture         = spr_light03;
sl_light_xscale          = 2;
sl_light_yscale          = sl_light_xscale;
sl_light_power           = 1;
sl_light_shadowlength    = 3.5//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.032;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;

// Rotation de la lumière
if fps!=0 sl_light_angle+=1.7*(60/fps);
if sl_light_angle&gt;=360 sl_light_angle=0;

if view_yview[0]+view_hview[0]&lt;y sl_light_active=false else sl_light_active=true;
} break;

case 11: // Lumière blanche 2
{
sl_light_texture         = spr_light02;
sl_light_xscale          = 3.45;
sl_light_yscale          = sl_light_xscale;
sl_light_angle           = 270;
sl_light_color           = colorfinaljolie;
sl_light_power           = 1;
sl_light_ambientpower    = 0.2;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;
} break;

case 12: // Gyrophare jaune/orangé
{
sl_light_texture         = spr_light03;
sl_light_xscale          = 2.6;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = make_color_rgb(255,172,0);
sl_light_power           = 0.73;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.05;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.23;

// Rotation de la lumière
if fps!=0 sl_light_angle+=1.92*(60/fps);
if sl_light_angle&gt;=360 sl_light_angle=0;
} break;

case 13: // Lumière rouge fixe 1 toute petite pour vehicule
{

sl_light_refresh      = false;
sl_light_xscale          = 0.5;
sl_light_yscale          = sl_light_xscale;
sl_light_power           = 1;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.032;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.2;
} break;

case 14: // petite lumière metro
{
sl_light_texture = spr_light01;
sl_light_xscale          = 3.56;
sl_light_yscale          = 3.56;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.4;//0.7
sl_light_ambientpower    = 0.01;//0.3
//sl_light_shadowlength    = obj_hudoff.statopti[2]//0.9;//2 a eviter
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 0.1; //a eviter
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.38;//0.22
sl_light_castshadow = true
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
} break;

case 15: // Lumière blanche fixe
{

sl_light_ambientpower    = 0;//n exister pas avant 
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014//plu c bas mieu c // 1 minimum
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.6
sl_light_shadowlength    = obj_hudoff.statopti[2]//3//VRAIMENT LONGUEUR DES OMBRES

}else {

sl_light_shadowlength    = obj_hudoff.statopti[2]//0; //n exister pas avant 
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.24 //0.38 pour 4 sample //0.78 le 19/03
}



if obj_zombie.lightnowroom = 0 or obj_zombie.lightnowroom = 2{
//sacade l'image toutes les 1500 alarm 4
sl_light_power           = 0.9
if alarm[4] &lt; 0 {
if sacadetime &lt; random_range(10,150) {
sacadetime += 1
sl_light_power           = random(0.5);//5
if obj_economie.lightcrash = 0 {
if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 1500 {
if audio_is_playing(snd_elec1) or  audio_is_playing(snd_elec2) or
audio_is_playing(snd_elec3) or audio_is_playing(snd_elec4) {}else{
audioelec = choose(1,2,3,4)
if audioelec = 1 {audio_play_sound_at(snd_elec1, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 2 {audio_play_sound_at(snd_elec2, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 3 {audio_play_sound_at(snd_elec3, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 4 {audio_play_sound_at(snd_elec4, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
}}}
}else{
alarm[4] = random(2500)
sacadetime = 0
sl_light_power           = 0.9//0.7
}
}
//

sl_light_texture = spr_light01;
if instance_exists(obj_soundambiant){
if global.sl_time &lt; 10 or global.sl_time &gt; 20 
{


if obj_economie.lightcrash = 0 {
sl_light_xscale          = 3.26;//3.56;
sl_light_yscale          = 3.26;//3.56;
}else if obj_economie.lightcrash = 1 {
//if alarm[4] &lt; 0 {
if sacadetime2 &lt; random_range(10,40) {
sacadetime2 += 1
sl_light_power           = random(0.4);//5
if audio_is_playing(snd_elec1) or  audio_is_playing(snd_elec2) or
 audio_is_playing(snd_elec3) or audio_is_playing(snd_elec4) {}else{
 audioelec = choose(1,2,3,4)
if audioelec = 1 {audio_play_sound_at(snd_elec1, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 2 {audio_play_sound_at(snd_elec2, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 3 {audio_play_sound_at(snd_elec3, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
if audioelec = 4 {audio_play_sound_at(snd_elec4, x, y,0,global.falloff_ref, global.falloff_max, 1, false, 1)}
}}else{sacadetime2 = 0}
}else if obj_economie.lightcrash = 2 {
sl_light_power = 0
}

}else{
sl_light_xscale          = 0;
sl_light_yscale          = 0;
}
}else{
if global.interieur = 1 {
sl_light_xscale          = 4.56;//5.16
sl_light_yscale          = 4.56;//5.16
}else{
sl_light_xscale          = 2.16;
sl_light_yscale          = 2.16;
}
}
sl_light_color           = colorfinaljolie;
if obj_zombie.lightnowroom = 2 {sl_light_color = c_red;//sl_light_xscale = sl_light_xscale/ 1.5;sl_light_yscale = sl_light_xscale;
}
//sl_light_power           = 0.4;//0.7
//sl_light_ambientpower    = 0.4;//0.3
//sl_light_shadowlength    = obj_hudoff.statopti[2]//0.9;//2 a eviter


//if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  or obj_zombie.lowgpu2 = 1  {



if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else{

if alarm[9] &lt; 2 {
sl_light_refresh         = true;//grosse conso avec true
}else{sl_light_refresh         = false;}}
//sl_light_castshadow = true//True//enlever le 27 03 18
/*}else {
sl_light_refresh         = false;//grosse conso avec true
sl_light_castshadow = true//True
}*/
}

if obj_zombie.lightnowroom = 1 {
sl_light_xscale          = 0;
sl_light_yscale          = 0;
}



}

//light ambiance
if global.grotte = 1 {//dans start zombie
sl_light_color = c_aqua
}

if global.stalkerlight = 1 {//dans start zombie
sl_light_power           = 0.9;
//sl_light_ambientpower    = 1;
sl_light_color = colorroom

}
if global.prawlerlight = 1 {//dans start zombie
//sl_light_power           = 1;
//sl_light_ambientpower    = 1;
sl_light_color = c_red

}



 break;
 
 case 35.5: // train test
{
sl_light_angle = image_angle
sl_light_ambientpower    = 0;//n exister pas avant 
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014//plu c bas mieu c // 1 minimum
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.6
sl_light_shadowlength    = obj_hudoff.statopti[2]//3//VRAIMENT LONGUEUR DES OMBRES

}else {

sl_light_shadowlength    = obj_hudoff.statopti[2]//0; //n exister pas avant 
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.24 //0.38 pour 4 sample //0.78 le 19/03
}

//sl_light_power           = 0.6
sl_light_texture = spr_light06;
/*if global.sl_time &lt; 10 or global.sl_time &gt; 20 
{*/
sl_light_xscale          = 1.26;//3.56;
sl_light_yscale          = 1.26;//3.56;
/*}else{
sl_light_xscale          = 0;
sl_light_yscale          = 0;
}*/

sl_light_color           = colortrain;

//if obj_zombie.lowgpu2 = 0 or obj_zombie.lowgpu2 = 2  {
//sl_light_refresh         = true;//grosse conso avec true
//}else{sl_light_refresh         = false;}
sl_light_refresh         = true;

}
break;

 case 36.5: // train test 2
{
sl_light_angle = image_angle
//sl_light_ambientpower    = 0;//n exister pas avant 
//if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014//plu c bas mieu c // 1 minimum
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.6
//sl_light_shadowlength    = obj_hudoff.statopti[2]//3//VRAIMENT LONGUEUR DES OMBRES

/*}else {

sl_light_shadowlength    = obj_hudoff.statopti[2]//0; //n exister pas avant 
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.035; //a eviter//1.014
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.6;//0.24 //0.38 pour 4 sample //0.78 le 19/03
}*/

//sl_light_power           = 0.6
sl_light_texture = spr_light02;
//if global.sl_time &lt; 10 or global.sl_time &gt; 20 
//{
sl_light_xscale          = 2.26;//3.56;
sl_light_yscale          = 2.26;//3.56;
/*}else{
sl_light_xscale          = 0;
sl_light_yscale          = 0;
}*/

sl_light_color           = colortrain;

//if obj_zombie.lowgpu2 = 0 or obj_zombie.lowgpu2 = 2  {
//sl_light_refresh         = true;//grosse conso avec true
//}else{sl_light_refresh         = false;}
sl_light_refresh         = true;

}
break;

case 16: // 2 eme lumiere blanche opti plus grande
{

if room = room133 {sl_light_xscale          = 5.06;}else{sl_light_xscale          = 5.56;}



sl_light_yscale          = sl_light_xscale;
sl_light_color           = color16;
if room = room133 {sl_light_ambientpower          = 0;}else{sl_light_ambientpower = 0.1;}
if room = room133 or room = room139 {sl_light_power          = 1;}else{sl_light_power          = 0.9;}
if room = room133 or room = room139 {sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.014; 
}//1.014parfait}//1.034bof
if room = room133 or room = room139 {if global.sl_time &lt; 10 or global.sl_time &gt; 19 {}else{sl_light_power = 0.3}}

sl_light_shadowlength    = obj_hudoff.statopti[2]//4;//3ok5trebienmairam
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1;
if room = room133 {sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 0.3;
}else{sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 1;
}//0.3
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 1;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
if alarm[9] &lt; 2 {
sl_light_refresh         = true;//grosse conso avec true
}else{sl_light_refresh         = false;}}
} break;


case 17: // Lumière blanche fixe
{
sl_light_texture = spr_light01;
sl_light_xscale          = 2.86;
sl_light_yscale          = 2.86;
sl_light_color           = colorconquest;
//sl_light_power           = 0.4;//0.7
//sl_light_ambientpower    = 0.4;//0.3
//sl_light_shadowlength    = obj_hudoff.statopti[2]//0.9;//2
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 0.9;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.22;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
} break;

case 18: // Phare de véhicule
{
//if global.sl_ambient_light &lt; 0.5
//{
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 4;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = make_color_rgb(255,245,220);
sl_light_power           = 0.8;
sl_light_ambientpower    = 0.15;
sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
} break;

case 19: // Lumière jaune fixe
{
sl_light_power           = 0.9;
sl_light_ambientpower    = 0.05;
sl_light_color           = c_yellow;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.18;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_xscale          = 2.66;
sl_light_yscale          = sl_light_xscale;
sl_light_refresh         = false;
} break;

case 20: // Lumière blanche fixe
{
sl_light_power           = 0.88;
sl_light_ambientpower    = 0.1;
sl_light_color           = colorfinaljolie;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.1;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_xscale          = 3.2;
sl_light_yscale          = sl_light_xscale;
sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
sl_light_refresh         = false;
} break;

case 21: // Lumière verdâtre fixe
{
sl_light_power           = 1;
sl_light_ambientpower    = 0.1;
sl_light_color           = make_color_rgb(230,255,150);
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.14;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_xscale          = 3;
sl_light_yscale          = sl_light_xscale;
sl_light_shadowlength    = obj_hudoff.statopti[2]//3;
sl_light_refresh         = false;
} break;

case 22: // Lumière bleutée fixe
{
sl_light_power           = 0.8;
sl_light_ambientpower    = 0;
sl_light_color           = make_color_rgb(190,190,255);
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.15;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.02;
sl_light_xscale          = 3;
sl_light_yscale          = sl_light_xscale;
sl_light_refresh         = false;
} break;

case 23: // feu
{
sl_light_texture = spr_light01;  // Index de la texture de lumière
sl_light_xscale  = 2.66;         // Facteurs d'étirement de la lumière
sl_light_yscale  = 2.66;
sl_light_color   = c_red;        // Couleur de la lumière
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.22; // Facteur de dureté des ombres
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
} break;

case 24: // Lumière mouvante blanche
{
sl_light_xscale          = 2.2;
sl_light_yscale          = 2.2;
sl_light_color           = colorfinaljolie;
sl_light_power           = 0.8;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.33;

if fps!=0 path_speed=2*(60/fps);
} break;

case 25: // Phare de tourelle
{
//if global.sl_ambient_light &lt; 0.5
//{
if obj_zombie.lightnowroom = 0 {
if instance_exists(obj_turretenemy){
turretenemy = instance_nearest(x,y,obj_turretenemy)
sl_light_angle = turretenemy.image_angle ;

sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 4;
sl_light_yscale          = sl_light_xscale;
if turretenemy.stalker = 0 {
sl_light_color           = c_red;}else{
sl_light_color           = c_blue;}
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}}else{
sl_light_xscale          = 0;
}

}
break;

case 26: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_btr70){
turretenemy = instance_nearest(x,y,obj_btr70)
sl_light_angle = turretenemy.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;

case 27: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_btr80){
turretenemy1 = instance_nearest(x,y,obj_btr80)
sl_light_angle = turretenemy1.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;


case 28: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_challenger){
turretenemy2 = instance_nearest(x,y,obj_challenger)
sl_light_angle = turretenemy2.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;



case 29: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_pzk){
turretenemy3 = instance_nearest(x,y,obj_pzk)
sl_light_angle = turretenemy3.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;



case 30: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_tiger){
turretenemy4 = instance_nearest(x,y,obj_tiger)
sl_light_angle = turretenemy4.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;


case 31: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_turan){
turretenemy5 = instance_nearest(x,y,obj_turan)
sl_light_angle = turretenemy5.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}break;



case 32: // Phare de char btr70
{
//if global.sl_ambient_light &lt; 0.5
//{
if instance_exists(obj_zsu){
turretenemy6 = instance_nearest(x,y,obj_zsu)
sl_light_angle = turretenemy6.image_angle ;
}
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 5;
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}

case 33 : 

if global.interieur = 1 {
sl_light_xscale          = consolarge;
sl_light_yscale          = consolarge;
}else{
sl_light_xscale          = consolarge;
sl_light_yscale          = consolarge;
}

if room = room34 {sl_light_xscale = 2.5}
if room = room34 {sl_light_yscale = 2.5}

sl_light_color           = c_red;
//sl_light_power           = 0.4;//0.7
//sl_light_ambientpower    = 0.4;//0.3
//sl_light_shadowlength    = obj_hudoff.statopti[2]//0.9;//2 a eviter


/*if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  
{*/

sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.172; //a eviter
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.9;//0.22 //0.38 pour 4 sample //0.78 le 19/03

sl_light_refresh         = true;//grosse conso avec true
//sl_light_castshadow = true//True
/*}else {
sl_light_refresh         = false;//grosse conso avec true
//sl_light_castshadow = true//True
}*/



 break;
 
 case 34: // 2 eme lumiere blanche opti plus grande
{

if room = room133 {sl_light_xscale          = 2.06;}else{sl_light_xscale          = 2.56;}



sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
if room = room133 {sl_light_ambientpower          = 0;}else{sl_light_ambientpower          = 0.1;}
if room = room133 {sl_light_power          = 1;}else{sl_light_power          = 0.5;}
if room = room133 {sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.054; 
}//1.014parfait}//1.034bof
if room = room133 {if global.sl_time &lt; 10 or global.sl_time &gt; 19 {}else{sl_light_power          = 0.3}}

sl_light_shadowlength    = obj_hudoff.statopti[2]//4;//3ok5trebienmairam
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1;
if room = room133 {sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 0.7;
}else{sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 1;
}//0.3
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 1;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
} break;

case 37: // Phare de camera
{
//if global.sl_ambient_light &lt; 0.5
//{
if obj_zombie.lightnowroom = 0 {
if instance_exists(obj_camera){
turretenemy = instance_nearest(x,y,obj_camera)
sl_light_angle = turretenemy.image_angle ;
x = turretenemy.x+lengthdir_x(50,turretenemy.image_angle)
y = turretenemy.y+lengthdir_y(50,turretenemy.image_angle)
sl_light_active          = true;
sl_light_texture         = spr_light05;
sl_light_xscale          = 2.5;
sl_light_yscale          = sl_light_xscale;
if instance_exists(turretenemy){
if turretenemy.stalker = 0 {
sl_light_color           = c_white;
if audio_is_playing(snd_alarmrelou){
sl_light_color           = c_red;}

//sl_light_power           = 0.8;
//sl_light_ambientpower    = 0.15;
//sl_light_shadowlength    = obj_hudoff.statopti[2]//2;
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.025;
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0.17;
//}
//else sl_light_active     = false;
}}else{instance_destroy();}}else{
instance_destroy();//sl_light_xscale          = 0;
}

}else{sl_light_active          = false;
sl_light_xscale          = 0;
sl_light_yscale          = sl_light_xscale;}
}
break;



/* case 35: // lumiere wagon
{



sl_light_xscale = 1
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
if room = room133 {sl_light_ambientpower          = 0;}else{sl_light_ambientpower          = 0.8;}
if room = room133 {sl_light_power          = 1;}else{sl_light_power          = 0.8;}
if room = room133 {sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.054; }//1.014parfait}//1.034bof
if room = room133 {if global.sl_time &lt; 10 or global.sl_time &gt; 19 {}else{sl_light_power          = 0.5}}

sl_light_shadowlength    = obj_hudoff.statopti[2]//4;//3ok5trebienmairam
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1;
if room = room133 {sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 0.7;}else{sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 1;}//0.3
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 1;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
sl_light_texture         = spr_soltrain;
} break;

 case 36: // lumiere wagon
{



sl_light_xscale = 1
sl_light_yscale          = sl_light_xscale;
sl_light_color           = colorfinaljolie;
if room = room133 {sl_light_ambientpower          = 0;}else{sl_light_ambientpower          = 0.8;}
if room = room133 {sl_light_power          = 1;}else{sl_light_power          = 0.8;}
if room = room133 {sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1.054; }//1.014parfait}//1.034bof
if room = room133 {if global.sl_time &lt; 10 or global.sl_time &gt; 19 {}else{sl_light_power          = 0.5}}

sl_light_shadowlength    = obj_hudoff.statopti[2]//4;//3ok5trebienmairam
//sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 1;
if room = room133 {sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 0.7;}else{sl_light_shadowsharpness    = obj_hudoff.statopti[9]//          = 1;}//0.3
//sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 1;//0.22
if obj_zombie.lowgpu2 = 0  or obj_zombie.lowgpu2 = 2  {
sl_light_refresh         = true;//grosse conso avec true
}else {
sl_light_refresh         = false;//grosse conso avec true
}
sl_light_texture         = spr_solengine;
} break;
*/
}

//if image_xscale = 1  {

//image_yscale = sl_light_yscale
//}


if obj_zombie.lowgpu2 = 3 {sl_light_refresh = false;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 0;
sl_light_power           = 0.8;
sl_light_shadowlength    = obj_hudoff.statopti[2]//0;
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 0;
sl_light_ambientpower    = 0.8;
}

}




//}
/*
sl_light_shadowlength    = obj_hudoff.statopti[2]//10;//2
sl_light_shadowfactor    = obj_hudoff.statopti[3]//    = 10;
sl_light_shadowsharpness    = obj_hudoff.statopti[9]// = 10;//0.22
*/
}



}
if sl_light_xscale &gt; 2.66 {vraiscale = sl_light_xscale}}}


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if obj_zombie.lowgpu2 = 3 {}else{
if instance_exists(obj_engine) &amp;&amp; alarm[8] &lt; 0 {
if obj_engine.alarm[10] &lt; 0 {
SL_light_free();
draw_clear_alpha( c_white, 0);
instance_destroy();}}//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.firstbug = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
