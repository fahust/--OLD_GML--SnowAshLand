<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-70000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar showquest;

if date_get_timezone() != timezone_utc
   {
   date_set_timezone(timezone_utc);
   }
   
   //questglobalvar = 0 // A SAVE

alarm[0] = 30
global.questglobalnow = -1
path = path_add();
succesload = 0
showquest = false
questpannel = 0
imagespeed2 = 0
demaragepralax = 0
imagespeed = 0
imagespeed3 = 0
imagespeed4 = 0
imagespeed5 = 0

coloricon = c_black

global.questutile = 0



alarm[1] = 5000




ligne = 1
typechoosequest = 1

queteglobalnow = 0//HYPRA IMPORTANT
coterwinglobalnow = 0//HYPRA IMPORTANT
envoidepnt = 0

territoiregrid = ds_grid_create(4, 500);
ds_grid_resize(territoiregrid, 4, 500);
ds_grid_clear(territoiregrid, 0);

ini_open("quest.ini");
ds_grid_read(territoiregrid, ini_read_string("territoiregrid", "grid2", ""));
//ds_grid_read(questgrid, ini_read_string("quest", "grid", ""));
ini_close();




gridmap = ds_grid_create(10, 10);
ds_grid_resize(gridmap, 10, 10);
ds_grid_clear(gridmap, "");


questgrid = ds_grid_create(50, 500);
ds_grid_resize(questgrid, 50, 500);
ds_grid_clear(questgrid, "");

ini_open("quest.ini");
ds_grid_read(questgrid, ini_read_string("quest", "grid", ""));
//ds_grid_read(questgrid, ini_read_string("quest", "grid", ""));
ini_close();



//show_message(questgrid)
questgridvisibilite = ds_grid_create(50, 500);
ds_grid_resize(questgridvisibilite, 50, 500);
ds_grid_clear(questgridvisibilite, "");

/*    ini_open("quest2.ini");
ds_grid_read(questgridvisibilite, ini_read_string("quest", "questgridvisibilite", ""));
ini_close();*/


//x1 = questvisible //
//x2 = questvisibletitre //pareil pour le titre
//x3 = questinfotitre //le titre de la quete
//x4 = questinfo //la description de la quete
//x5 = questrewardkarma //la récompenses money
//x6 = questrewarditem //la recompenses objet
//x7 = questconditionlvl // nivo necessaire
//x8 = questask // la demande surement a suppr
//x9 = questblablabla //le blabla de celui qui donne la quete (contexte) //IMOBILE
//x10 = questactive // la ou en est le joueur dans la quete 0 = pas lancer ,1 lancer ,2 fini
//x11 = questactivenow // pour le guy donneur de quete je crois
//x12 = questblabla //le blabla de celui qui donne la quete (contexte)
//x13 = popobjet //faire pop une cible de quete ou pop principal cible//proteger groupe de soldat / cargaison le temps du transfert / 
//x14 = xpop //le x de objet ou le x final de l escort
//x15 = ypop //le y de objet ou le y final de l escort
//x16 = roompop //la room de objet
//x17 = nbrpop //le nbr d objet a faire pop autor de l objet principal (pour si besoin d'enemi en plus)//MAIS AUSSI le nombre d obj a ramener askobjquest
//x18 = quetegentilmechant //si karma negatif  ou positif certaines quete ou d'autres
//x19 = quetetype //1 = principal /2 = general (server) / 3 = personnal /4 finished /5 learn
//x20 = blablafinal
//x21 = objdemander a ramener
//x22 = immobile faire apparaitre un starter immobile//DONNE AUSSI STATUT PRINCIPAL SI &gt;= 2
//x23 = xdepart pour escort ou donneur d obj ect
//x24 = ydepart pour escort ou donneur d obj ect
//x25 = angledupopobj
//x26 = suitedequete
//x27 = blabladujoueur entre deux blabla chiant a faire putain on verra plus tard faire sans
//x28 = objdedepart
//x29 = roomdedepart
//x30 = suitedequete 
//x31 = Blabla de l escort pendant transport
//x32 = Blabla radio communication direct en debut de quete surtout pour les princiapl //EN FIAT NON C EN FIN DE QUEST
//x33 = sprite de l'obj final //mode2
//x34 = sprite de l'obj immobile //mode2
//x35 = experience donner en fin de quete
//x36 = name ou grade de l'ia a ramener //pr obj_rameneriaquest
//x37 = immobile fais apparaitre un starter immoblie 2
//x38 = ximmobile2
//x39 = yimmobile2
//x40 = roomimmobile2
//x41 = spriteimmobile2
//x42 = ciblequest
//x43 = imageangleimmobile2
//x44 = number de la quest

//obj_nightcycle

//ds_grid_set(questgrid,

   /* ini_open("savefile.ini")
    
for (i = 0; i &lt; 400; i += 1){
questinfotitre[i] = ""//ini_read_real ("player","questinfo"+string(i),"None");
questinfo[i] = ini_read_real ("player","questinfo"+string(i),"None");
questrewardkarma[i] = ini_read_real ("player","questrewardkarma"+string(i),0);
questrewarditem[i] = ini_read_real ("player","questrewarditem"+string(i),0);
questconditionlvl[i] = ini_read_real ("player","questconditionlvl"+string(i),0);
questask[i] = ini_read_real ("player","questask"+string(i),0);//demande de la quete 100 = reussi
questblablabla[i] = ini_read_real ("player","questblablabla"+string(i),"");
questactive[i] = ini_read_real ("player","questactive"+string(i),0);//1 active // 2 finish // 3 rendu
}


var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
 var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questblabla[i11] = questinfo[i11]}
*/


mode = 1
mode2 = 1

global.quest1debut = 0

questvisible[1] = "none"
questvisible[2] = "none"
questvisible[3] = "none"
questvisible[4] = "none"
questvisible[5] = "none"
questvisible[6] = "none"
questvisible[7] = "none"
questvisible[8] = "none"
questvisible[9] = "none"
questvisible[10] = "none"
questvisible[11] = "none"
questvisible[12] = "none"
questvisible[13] = "none"
questvisible[14] = "none"
questvisible[15] = "none"
questvisible[16] = "none"
questvisible[17] = "none"
questvisible[18] = "none"
questvisible[19] = "none"
questvisible[20] = "none"
questvisible[21] = "none"
questvisible[22] = "none"
questvisible[23] = "none"
questvisible[24] = "none"
questvisible[25] = "none"
questvisible[26] = "none"
questvisible[27] = "none"
questvisible[28] = "none"
questvisible[29] = "none"
questvisible[30] = "none"

questvisibletitre[1] = "none"
questvisibletitre[2] = "none"
questvisibletitre[3] = "none"
questvisibletitre[4] = "none"
questvisibletitre[5] = "none"
questvisibletitre[6] = "none"
questvisibletitre[7] = "none"
questvisibletitre[8] = "none"
questvisibletitre[9] = "none"
questvisibletitre[10] = "none"
questvisibletitre[11] = "none"
questvisibletitre[12] = "none"
questvisibletitre[13] = "none"
questvisibletitre[14] = "none"
questvisibletitre[15] = "none"
questvisibletitre[16] = "none"
questvisibletitre[17] = "none"
questvisibletitre[18] = "none"
questvisibletitre[19] = "none"
questvisibletitre[20] = "none"
questvisibletitre[21] = "none"
questvisibletitre[22] = "none"
questvisibletitre[23] = "none"
questvisibletitre[24] = "none"
questvisibletitre[25] = "none"
questvisibletitre[26] = "none"
questvisibletitre[27] = "none"
questvisibletitre[28] = "none"
questvisibletitre[29] = "none"
questvisibletitre[30] = "none"


globalx1 = -1
globalx2 = -1
globalx3 = -1
globalx4 = -1
globalx5 = -1
globalx6 = -1
globalx7 = -1
globalx8 = -1
globalx9 = -1
globalx10 = -1
globalx11 = -1
globalx12 = -1
globalx13 = -1
globalx14 = -1
globalx15 = -1
globalx16 = -1
globalx17 = -1
globalx18 = -1
globalx19 = -1
globalx20 = -1
globalx21 = -1
globalx22 = -1
globalx23 = -1
globalx24 = -1
globalx25 = -1
globalx26 = -1
globalx27 = -1
globalx28 = -1
globalx29 = -1
globalx30 = -1
globalx31 = -1
globalx32 = -1
globalx33 = -1
globalx34 = -1
globalx35 = -1
globalx36 = -1
globalx37 = -1
globalx38 = -1
globalx39 = -1
globalx40 = -1
globalx41 = -1
globalx42 = -1
globalx43 = -1
globalx44 = -1
globalx45 = -1
/*
    ini_open("savefile.ini")
    
for (i = 0; i &lt; 400; i += 1){
questinfotitre[i] = ""//ini_read_real ("player","questinfo"+string(i),"None");
questinfo[i] = ini_read_real ("player","questinfo"+string(i),"None");
questrewardkarma[i] = ini_read_real ("player","questrewardkarma"+string(i),0);
questrewarditem[i] = ini_read_real ("player","questrewarditem"+string(i),0);
questconditionlvl[i] = ini_read_real ("player","questconditionlvl"+string(i),0);
questask[i] = ini_read_real ("player","questask"+string(i),0);//demande de la quete 100 = reussi
questblablabla[i] = ini_read_real ("player","questblablabla"+string(i),"");
questactive[i] = ini_read_real ("player","questactive"+string(i),0);//1 active // 2 finish // 3 rendu
}*/
  
    
   // ini_close();
/*
for (i = 0; i &lt; 400; i += 1){
questinfo[i] = "None" 
questrewardkarma[i] = 0 //
questrewarditem[i] = 0 //
questconditionlvl[i] = 0 //condition de level pr lancer quest
questask[i] = 0 //ce qu'il faut faire arriver a 100 ca fini et situation passe a 3 : rendre
questactive[i] = 0 //situation de la quete
}*/



/*questinfo[6] = "
Torenandu, le chef des bashims, veut déclarer la guerre aux centaures,
mais est incapable de communiquer. Prévenez les habitants du territoire 
des bashims que la guerre va être déclarée."*/



/*var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
 var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questblabla[i11] = questinfo[i11]}
*/

quest1 = ""
quest2 = ""


onetime2 = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//inutilise

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = Menu or room = room34 or room = room161 {}else{




//if ds_grid_get(obj_quest.territoiregrid,3,room) &gt;= 50 {
repeatspawn1 = (ds_grid_get(obj_quest.territoiregrid,3,room)/300)*random_range(0.8+(obj_zombie.level/500),1+(obj_zombie.level/500))
//}else{repeatspawn1 = 0}
//if ds_grid_get(obj_quest.territoiregrid,3,room) &lt; 50 {
repeatspawn2 = ((100-(ds_grid_get(obj_quest.territoiregrid,3,room)))/300)*random_range(0.8+(obj_zombie.level/500),1+(obj_zombie.level/500))
/*show_message(ds_grid_get(obj_quest.territoiregrid,3,room))
show_message(repeatspawn1)
show_message(repeatspawn2)*/
taillepieceparia = 1 



if room_width &gt; room_height {taillepieceparia = 1+((room_width/2000)/3)
if room_width &lt; 2000 {//repeatspawn1 = 0 ; 
repeatspawn2 = 0}
}else{taillepieceparia = 1+((room_height/2000)/3);if room_height &lt; 2000 {
//repeatspawn1 = 0 ;
 repeatspawn2 = 0}}

//VRAI VALEUR AU DESSUS JUST REPEATSPAWN UTILE
taillepieceparia = 1 + (((room_width+room_height)/300)/1)//150 BEAUCOUP



//}else{repeatspawn2 = 0}
//show_message(repeatspawn2)
//if ds_grid_get(obj_quest.territoiregrid,3,room) = 0 {
abusepasvillageois = 1
    if global.interieur = 1 {
    abusepasvillageois = 2
    }
    
     //show_message((repeatspawn2*taillepieceparia)/abusepasvillageois)
     //show_message((repeatspawn1*taillepieceparia))
     
     
if ds_grid_get(obj_quest.territoiregrid,3,room) &gt; 0 {
if room = room163 {}else{
var i3;
 for (i3 = 0; i3 &lt; round(((repeatspawn1*taillepieceparia)/abusepasvillageois)/obj_team.joueurtotal); i3 += 1)
    {
var i4;
 for (i4 = 0; i4 &lt; 800; i4 += 1)
    {
    xvar = random_range(0,room_width)
    yvar = random_range(0,room_height)
    nopecolli = 0
    /*if instance_exists(obj_crate02){instnear = instance_nearest(xvar,yvar,obj_crate02)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_crate03){instnear = instance_nearest(xvar,yvar,obj_crate03)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_shape03){instnear = instance_nearest(xvar,yvar,obj_shape03)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_shape05){instnear = instance_nearest(xvar,yvar,obj_shape05)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_villageois){instnear = instance_nearest(xvar,yvar,obj_villageois)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_stalker){instnear = instance_nearest(xvar,yvar,obj_stalker)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_enemy2){instnear = instance_nearest(xvar,yvar,obj_enemy2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}*/
    
    if point_distance(obj_zombie.x,obj_zombie.y,xvar,yvar) &gt; 1200 {
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xvar, yvar, 2) {
    with(instance_create(xvar,yvar,obj_stalker)){//taser = 0 ;existrandom = 0;
    
    //show_message("+1")
    }i4 = 800}}}}}
    
    
    ///VILLAGEOIS
    
    
    
    abusepasvillageois = 1
    if global.interieur = 1 {
    abusepasvillageois = 2
    }
    
var i3;
 for (i3 = 0; i3 &lt; round((repeatspawn1*taillepieceparia)/abusepasvillageois); i3 += 1)
    {
var i4;
 for (i4 = 0; i4 &lt; 800; i4 += 1)
    {
    xvar = random_range(0,room_width)
    yvar = random_range(0,room_height)
    nopecolli = 0
    /*if instance_exists(obj_crate02){instnear = instance_nearest(xvar,yvar,obj_crate02)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_crate03){instnear = instance_nearest(xvar,yvar,obj_crate03)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_shape03){instnear = instance_nearest(xvar,yvar,obj_shape03)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_shape05){instnear = instance_nearest(xvar,yvar,obj_shape05)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_villageois){instnear = instance_nearest(xvar,yvar,obj_villageois)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_stalker){instnear = instance_nearest(xvar,yvar,obj_stalker)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}
    if instance_exists(obj_enemy2){instnear = instance_nearest(xvar,yvar,obj_enemy2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 100 {
    nopecolli = 1
    }}}*/
    
    
    
    if point_distance(obj_zombie.x,obj_zombie.y,xvar,yvar) &gt; 400  &amp;&amp; nopecolli = 0{
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xvar, yvar, 2) {
    with(instance_create(xvar,yvar,obj_villageois)){//taser = 0 ;existrandom = 0;
    
    //show_message("+1")
    }i4 = 800}}}}
    
    }
    
    
 ///ENEMY !!!!!!!!!!!!!!!!!!!!
 
    if global.interieur = 1 {
    multiple = 2.5}else{
    multiple = 2.5}
var i5;
 for (i5 = 0; i5 &lt; round((repeatspawn2*(taillepieceparia*multiple))/obj_team.joueurtotal); i5 += 1)
    {
var i6;
 for (i6 = 0; i6 &lt; 800; i6 += 1)
    {
    if room = room2 or room = room93 or room = room35 or room = room23
     or room = room40 or room =  room57 or room =  room59 or room =  room133
     or room = room134 or room =  room135 or room =  room136 or room =  room137
     or room =  room138 or room =  room140 or room =  room155 or room =  room156
      or room = room102 or room = room103 or room = room104
      or room = room105 or room = room106 or room = room107 or room = room108 
      or room = room109 or room = room143 or room = room144 
      {}else{
    xvar = random_range(0,room_width)
    yvar = random_range(0,room_height)
    nopecolli = 0
    if instance_exists(obj_enemy2){instnear = instance_nearest(xvar,yvar,obj_enemy2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 500 {
    nopecolli = 1
    }}}
    if instance_exists(obj_immobile){instnear = instance_nearest(xvar,yvar,obj_immobile)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}
    if instance_exists(obj_immobile2){instnear = instance_nearest(xvar,yvar,obj_immobile2)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}
    if instance_exists(obj_talkquest){instnear = instance_nearest(xvar,yvar,obj_talkquest)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 1000 {
    nopecolli = 1
    }}}//DANS POP ENEMY QUEST A CHANGER AUSSI LE NOPE COLLI
    if point_distance(obj_zombie.x,obj_zombie.y,xvar,yvar) &gt; 1100  &amp;&amp; nopecolli = 0{
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xvar, yvar, 2) {
    with(instance_create(xvar,yvar,obj_enemy2)){//taser = 0 ;existrandom = 0;
    //show_message("+1")
    //show_message("-1")
    }i6 = 800}}}}}
    
    
        if global.interieur = 0 {
    multiple = 2.5
var i5;
 for (i5 = 0; i5 &lt; round(((repeatspawn2*(taillepieceparia*multiple))/2)/obj_team.joueurtotal); i5 += 1)
    {
var i6;
 for (i6 = 0; i6 &lt; 800; i6 += 1)
    {
    if room = room2 or room = room93 or room = room35 or room = room23
     or room = room40 or room =  room57 or room =  room59 or room =  room133
     or room = room134 or room =  room135  
     or room =  room138 or room =  room140 or room =  room155 or room =  room156
      or room = room102 or room = room103 or room = room104
      or room = room105 or room = room106 or room = room107 or room = room108 
      or room = room109 or room = room143 or room = room144 
      {}else{
    xvar = random_range(0,room_width)
    yvar = random_range(0,room_height)
    nopecolli = 0
    if instance_exists(obj_ephemere){instnear = instance_nearest(xvar,yvar,obj_ephemere)
    if instance_exists(instnear){if point_distance(xvar,yvar,instnear.x,instnear.y) &lt; 500 {
    nopecolli = 1
    }}}
    if point_distance(obj_zombie.x,obj_zombie.y,xvar,yvar) &gt; 1100  &amp;&amp; nopecolli = 0{
    if mp_grid_path(global.grid, path, obj_zombie.x, obj_zombie.y, xvar, yvar, 2) {
    with(instance_create(xvar,yvar,obj_ephemere)){//taser = 0 ;existrandom = 0;
    //show_message("+1")
    //show_message("-1")
    }i6 = 800}}}}}
    }

//}
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
var i2;
 for (i2 = 0; i2 &lt; 500; i2 += 1)
    {
    if i2 = room2 or i2 = room93 or i2 = room35 or i2 = room23
     or i2 = room40 or i2 =  room57 or i2 =  room59 or i2 =  room133
     or i2 = room134 or i2 =  room135 or i2 =  room136 or i2 =  room137
     or i2 =  room138 or i2 =  room140 or i2 =  room155 or i2 =  room156
      or i2 = room102 or i2 = room103 or i2 = room104
      or i2 = room105 or i2 = room106 or i2 = room107 or i2 = room108 
      or i2 = room109 or i2 = room143 or i2 = room144 
      {}else{
vargridget = ds_grid_get(territoiregrid,3,i2)
if vargridget &gt; 0 {
ds_grid_add(territoiregrid,3,i2 ,-0.1); }}}
alarm[1] = 5000


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if ds_grid_get(questgrid,10, 250) = "" {
//STYLE DE QUEST
scr_roomgrid();
var i;//principal
 for (i = 249; i &lt; 350; i += 1)
    {
ds_grid_set(questgrid, 19, i, 1); //activequest 0 / 1 / 2
}
var i;//learn
 for (i = 199; i &lt; 249; i += 1)
    {
ds_grid_set(questgrid, 19, i, 5); //activequest 0 / 1 / 2
}
var i;//global
 for (i = 350; i &lt; 400; i += 1)
    {
ds_grid_set(questgrid, 19, i, 2); //activequest 0 / 1 / 2
}
var i;//secondaire
 for (i = 1; i &lt; 200; i += 1)
    {
ds_grid_set(questgrid, 19, i, 3); //activequest 0 / 1 / 2
}


// ACTIVE QUEST
var i;
 for (i = 0; i &lt; 500; i += 1)
    {
  
ds_grid_set(questgrid, 10, i, 0); //activequest 0 / 1 / 2
}
var i;
 for (i = 0; i &lt; 500; i += 1)
    {
ds_grid_set(questgrid, 5, i, 0); //activequest 0 / 1 / 2
}
/*var i;
 for (i = 149; i &lt; 186; i += 1)
    { 
ds_grid_set(questgrid, 10, i, 1); //activequest 0 / 1 / 2
}*/
var i;
 for (i = 149; i &lt; 250; i += 1)
    { 
ds_grid_set(questgrid, 10, i, 1); //activequest 0 / 1 / 2
}
var i;
 for (i = 0; i &lt; 500; i += 1)
    { 
ds_grid_set(questgrid,33,i, choose(1,2,3)); //activequest 0 / 1 / 2
ds_grid_set(questgrid,34,i, choose(1,2,3)); //activequest 0 / 1 / 2
}









var i;
 for (i = 0; i &lt; 500; i += 1)
    { 
ds_grid_set(questgrid, 20, i, ""); //BLABLAFINAL 0 / 1 / 2
}
ds_grid_set(questgrid,10,250, 1);



}

var i;
 for (i = 0; i &lt; 500; i += 1)
    { 
ds_grid_set(questgrid, 44, i, i);  
}

scr_principal();
scr_tuto();

scr_questmain();
scr_questlearn();
scr_questglobal();
scr_questsecpatrol();
scr_questsec();




if global.language = 1 {
scr_questsecFRtxt();scr_questsecpatrolFRtxt();scr_questlearnFRtxt();scr_questmainFRtxt();scr_questglobalFR();}else{
scr_questsecENGtxt();scr_questsecpatrolENGtxt();scr_questlearnENGtxt();scr_questmainENGtxt();scr_questglobalENG();}

with(obj_nightcycle){
if global.language = 1 {
scr_cassetteFR();}else{
scr_cassetteENG();}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TEST TIME 
/*with(obj_engine){
sl_timespeed = 0.05
}
if keyboard_check_pressed(ord("E")) {global.day = choose(1,2,3,4,5,6)}*/
/*if keyboard_check_pressed(ord("E")) {
with(obj_wind){
if alarm[0] &gt; 10 {alarm[0] = 10}
}}
if keyboard_check_pressed(ord("A")) {
with(obj_superwind){
intensite += 1
//if alarm[0] &gt; 10 {alarm[0] = 10}
}}*/

if showquest = false {
//mode = 0
if instance_exists(obj_quitquest){with(obj_quitquest){instance_destroy();}}
}
if showquest = true {
if instance_exists(obj_quitquest){}else{
with(instance_create(x,y,obj_quitquest)){}
}
//if mode = 0 {
if instance_exists(obj_buttonquest){}else{
with(instance_create(x,y,obj_buttonquest)){mode = 5}
with(instance_create(x,y,obj_buttonquest)){mode = 4}
with(instance_create(x,y,obj_buttonquest)){mode = 3}
with(instance_create(x,y,obj_buttonquest)){mode = 2}
with(instance_create(x,y,obj_buttonquest)){mode = 1}
}
//}else{//if instance_exists(obj_buttonquest){with(obj_buttonquest){instance_destroy();}}
//}
}else{if instance_exists(obj_buttonquest){with(obj_buttonquest){instance_destroy();}}
if instance_exists(obj_quitquest){with(obj_quitquest){instance_destroy();}}
}








if global.quest1debut = 1{
quest1 = "Found 5 Health"
}




//questdoctor

if global.doctorquest = 2 &amp;&amp; onetime2 = 0{

obj_zombie.bandagesave -= 5 ;scr_itemdrop(3);scr_itemdrop(3);scr_itemdrop(3);scr_itemdrop(3);scr_itemdrop(3);
onetime2 = 1
global.doctorquest = 3
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SUCCESS STEAM
if global.steam_api = true &amp;&amp; global.demo = 0 {
if succesload &lt; 50 {succesload += 1}else{succesload = 0}


//Vaincre touts les élites une fois



//Abuser des bonnes choses
//scr_usedrink


//Prenez le pouvoir
if obj_zombie.idfixe = obj_economie.leaderidrecu {obj_quest.succes[2] += 1}

//Libérer tout les prisonniers
if succesload = 1 {
if obj_controllerstalker.idlibere1 = 1 { 
if obj_controllerstalker.idlibere2 = 1 {
if obj_controllerstalker.idlibere3 = 1 {
if obj_controllerstalker.idlibere4 = 1 {
if obj_controllerstalker.idlibere5 = 1 {
if obj_controllerstalker.idlibere6 = 1 {
if obj_controllerstalker.idlibere7 = 1 {
if obj_controllerstalker.idlibere8 = 1 {
if obj_controllerstalker.idlibere9 = 1 {
if obj_controllerstalker.idlibere10 = 1 {
if obj_controllerstalker.idlibere11 = 1 {
if obj_controllerstalker.idlibere12 = 1 {
if obj_controllerstalker.idlibere13 = 1 {
if obj_controllerstalker.idlibere14 = 1 {
if obj_controllerstalker.idlibere15 = 1 {
if obj_controllerstalker.idlibere16 = 1 {
if obj_controllerstalker.idlibere17 = 1 {
if obj_controllerstalker.idlibere18 = 1 {
if obj_controllerstalker.idlibere19 = 1 {
if obj_controllerstalker.idlibere20 = 1 {
if obj_controllerstalker.idlibere21 = 1 {
if obj_controllerstalker.idlibere22 = 1 {
if obj_controllerstalker.idlibere23 = 1 {
if obj_controllerstalker.idlibere24 = 1 {
if obj_controllerstalker.idlibere25 = 1 {
if obj_controllerstalker.idlibere26 = 1 {
if obj_controllerstalker.idlibere27 = 1 {
if obj_controllerstalker.idlibere28 = 1 {
if obj_controllerstalker.idlibere29 = 1 {
if obj_controllerstalker.idlibere30 = 1 {
if obj_controllerstalker.idlibere31 = 1 {
if obj_controllerstalker.idlibere32 = 1 {
if obj_controllerstalker.idlibere33 = 1 {
if obj_controllerstalker.idlibere34 = 1 {
if obj_controllerstalker.idlibere35 = 1 {
if obj_controllerstalker.idlibere36 = 1 {
if obj_controllerstalker.idlibere37 = 1 {
if obj_controllerstalker.idlibere38 = 1 {
if obj_controllerstalker.idlibere39 = 1 {
if obj_controllerstalker.idlibere40 = 1 {
if obj_controllerstalker.idlibere41 = 1 {
if obj_controllerstalker.idlibere42 = 1 {
if obj_controllerstalker.idlibere43 = 1 {
if obj_controllerstalker.idlibere44 = 1 {
if obj_controllerstalker.idlibere45 = 1 {
if obj_controllerstalker.idlibere46 = 1 {
if obj_controllerstalker.idlibere47 = 1 {
if obj_controllerstalker.idlibere48 = 1 {
if obj_controllerstalker.idlibere49 = 1 {
if obj_controllerstalker.idlibere50 = 1 {obj_quest.succes[3] += 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
}

//Faire un plat divin
//scr_cuisine

//Assassiner 500 faucheurs sans être détecté
//obj_enemy2.destroy

//Ne tuer personne pendant 7 jours


//Apprendre toutes les langues
if succesload = 2 {
if obj_langue.mandarin &gt; 99 &amp;&amp; obj_langue.hindi &gt; 99 &amp;&amp;  obj_langue.anglais &gt; 99 &amp;&amp; obj_langue.espagnol &gt; 99 &amp;&amp;  obj_langue.arabe &gt; 99 &amp;&amp; obj_langue.indonesien &gt; 99 &amp;&amp; 
 obj_langue.portugais &gt; 99 &amp;&amp; obj_langue.francais &gt; 99 &amp;&amp;  obj_langue.bengali &gt; 99 &amp;&amp; obj_langue.russe &gt; 99 &amp;&amp;  obj_langue.japonais &gt; 99 &amp;&amp; obj_langue.allemand &gt; 99 &amp;&amp; 
  obj_langue.punjabi &gt; 99 &amp;&amp; obj_langue.javanais &gt; 99 &amp;&amp;  obj_langue.italien &gt; 99 {
  obj_quest.succes[7] += 1
  }}
//Entraîner un patrouilleur jusqu'au niveau maximal
if succesload = 3 {
if obj_controllerstalker.mode1 &gt;= 99 or 
 obj_controllerstalker.mode2 &gt;= 99 or
 obj_controllerstalker.mode3 &gt;= 99 or
 obj_controllerstalker.mode4 &gt;= 99 or
 obj_controllerstalker.mode5 &gt;= 99 or
 obj_controllerstalker.mode6 &gt;= 99 or
 obj_controllerstalker.mode7 &gt;= 99 or
 obj_controllerstalker.mode8 &gt;= 99 or
 obj_controllerstalker.mode9 &gt;= 99 or
 obj_controllerstalker.mode10 &gt;= 99 or
 obj_controllerstalker.mode11 &gt;= 99 or
 obj_controllerstalker.mode12 &gt;= 99 or
 obj_controllerstalker.mode13 &gt;= 99 or
 obj_controllerstalker.mode14 &gt;= 99 or
 obj_controllerstalker.mode15 &gt;= 99 or
 obj_controllerstalker.mode16 &gt;= 99 or
 obj_controllerstalker.mode17 &gt;= 99 or
 obj_controllerstalker.mode18 &gt;= 99 or
 obj_controllerstalker.mode19 &gt;= 99 or
 obj_controllerstalker.mode20 &gt;= 99 or
 obj_controllerstalker.mode21 &gt;= 99 or
 obj_controllerstalker.mode22 &gt;= 99 or
 obj_controllerstalker.mode23 &gt;= 99 or
 obj_controllerstalker.mode24 &gt;= 99 or
 obj_controllerstalker.mode25 &gt;= 99 or
 obj_controllerstalker.mode26 &gt;= 99 or
 obj_controllerstalker.mode27 &gt;= 99 or
 obj_controllerstalker.mode28 &gt;= 99 or
 obj_controllerstalker.mode29 &gt;= 99 or
 obj_controllerstalker.mode30 &gt;= 99 or
 obj_controllerstalker.mode31 &gt;= 99 or
 obj_controllerstalker.mode32 &gt;= 99 or
 obj_controllerstalker.mode33 &gt;= 99 or
 obj_controllerstalker.mode34 &gt;= 99 or
 obj_controllerstalker.mode35 &gt;= 99 or
 obj_controllerstalker.mode36 &gt;= 99 or
 obj_controllerstalker.mode37 &gt;= 99 or
 obj_controllerstalker.mode38 &gt;= 99 or
 obj_controllerstalker.mode39 &gt;= 99 or
 obj_controllerstalker.mode40 &gt;= 99 or
 obj_controllerstalker.mode41 &gt;= 99 or
 obj_controllerstalker.mode42 &gt;= 99 or
 obj_controllerstalker.mode43 &gt;= 99 or
 obj_controllerstalker.mode44 &gt;= 99 or
 obj_controllerstalker.mode45 &gt;= 99 or
 obj_controllerstalker.mode46 &gt;= 99 or
 obj_controllerstalker.mode47 &gt;= 99 or
 obj_controllerstalker.mode48 &gt;= 99 or
 obj_controllerstalker.mode49 &gt;= 99 or
 obj_controllerstalker.mode50 &gt;= 99 {obj_quest.succes[8] += 1}
 }
//Attraper aux moins une fois toutes les maladies
//obj_maladie.step
if succesload = 4 {
if obj_maladie.maladieeu[1] &amp;&amp;  obj_maladie.maladieeu[2] &amp;&amp;  obj_maladie.maladieeu[3] &amp;&amp;  obj_maladie.maladieeu[4] &amp;&amp; 
 obj_maladie.maladieeu[5] &amp;&amp;  obj_maladie.maladieeu[6] &amp;&amp;  obj_maladie.maladieeu[7] &amp;&amp;  obj_maladie.maladieeu[8] {
 obj_quest.succes[9] += 1
 }}
 
//Monter de grade en grade jusqu'à devenir général de votre faction
if obj_zombie.grademetier = 29 or  obj_zombie.grademetier = 33 or  obj_zombie.grademetier = 39 {
obj_quest.succes[10] += 1
}
//Obtenez une note de 1 / 5 au prêt des autres joueurs
//Obtenez une note de 2 / 5 au prêt des autres joueurs
//Obtenez une note de 3 / 5 au prêt des autres joueurs
//Obtenez une note de 4 / 5 au prêt des autres joueurs
//Obtenez une note de 5 / 5 au prêt des autres joueurs

//trouver la cité des éphémères
//fonder une guilde de 50 joueurs
//Rendre le peuple heureux et prospère
//Faites de votre politique une tyranie 
//Eliminer le dirigeant
//Remplir les prisons
//




if obj_quest.succes[0] &gt; 1 {if(!steam_get_achievement("achieve1")) steam_set_achievement("achieve1");}
if obj_quest.succes[1] &gt; 1 {if(!steam_get_achievement("achieve2")) steam_set_achievement("achieve2");}
if obj_quest.succes[2] &gt; 1 {if(!steam_get_achievement("achieve3")) steam_set_achievement("achieve3");}
if obj_quest.succes[3] &gt; 1 {if(!steam_get_achievement("achieve4")) steam_set_achievement("achieve4");}
if obj_quest.succes[4] &gt; 1 {if(!steam_get_achievement("achieve5")) steam_set_achievement("achieve5");}
if obj_quest.succes[5] &gt; 500 {if(!steam_get_achievement("achieve6")) steam_set_achievement("achieve6");}
if obj_quest.succes[6] &gt; 1 {if(!steam_get_achievement("achieve7")) steam_set_achievement("achieve7");}
if obj_quest.succes[7] &gt; 1 {if(!steam_get_achievement("achieve8")) steam_set_achievement("achieve8");}
if obj_quest.succes[8] &gt; 1 {if(!steam_get_achievement("achieve9")) steam_set_achievement("achieve9");}
if obj_quest.succes[9] &gt; 1 {if(!steam_get_achievement("achieve10")) steam_set_achievement("achieve10");}
if obj_quest.succes[10] &gt; 1 {if(!steam_get_achievement("achieve11")) steam_set_achievement("achieve11");}
if obj_quest.succes[11] &gt; 1 {if(!steam_get_achievement("achieve12")) steam_set_achievement("achieve12");}
if obj_quest.succes[12] &gt; 1 {if(!steam_get_achievement("achieve13")) steam_set_achievement("achieve13");}
if obj_quest.succes[13] &gt; 1 {if(!steam_get_achievement("achieve14")) steam_set_achievement("achieve14");}
if obj_quest.succes[14] &gt; 1 {if(!steam_get_achievement("achieve15")) steam_set_achievement("achieve15");}
if obj_quest.succes[15] &gt; 1 {if(!steam_get_achievement("achieve16")) steam_set_achievement("achieve16");}
if obj_quest.succes[16] &gt; 1 {if(!steam_get_achievement("achieve17")) steam_set_achievement("achieve17");}
if obj_quest.succes[17] &gt; 1 {if(!steam_get_achievement("achieve18")) steam_set_achievement("achieve18");}
if obj_quest.succes[18] &gt; 1 {if(!steam_get_achievement("achieve19")) steam_set_achievement("achieve19");}
if obj_quest.succes[19] &gt; 1 {if(!steam_get_achievement("achieve20")) steam_set_achievement("achieve20");}
if obj_quest.succes[20] &gt; 1 {if(!steam_get_achievement("achieve21")) steam_set_achievement("achieve21");}
if obj_quest.succes[21] &gt; 1 {if(!steam_get_achievement("achieve22")) steam_set_achievement("achieve22");}
if obj_quest.succes[22] &gt; 1 {if(!steam_get_achievement("achieve23")) steam_set_achievement("achieve23");}
if obj_quest.succes[23] &gt; 1 {if(!steam_get_achievement("achieve24")) steam_set_achievement("achieve24");}
if obj_quest.succes[24] &gt; 1 {if(!steam_get_achievement("achieve25")) steam_set_achievement("achieve25");}
if obj_quest.succes[25] &gt; 1 {if(!steam_get_achievement("achieve26")) steam_set_achievement("achieve26");}
if obj_quest.succes[26] &gt; 1 {if(!steam_get_achievement("achieve27")) steam_set_achievement("achieve27");}
if obj_quest.succes[27] &gt; 1 {if(!steam_get_achievement("achieve28")) steam_set_achievement("achieve28");}
if obj_quest.succes[28] &gt; 1 {if(!steam_get_achievement("achieve29")) steam_set_achievement("achieve29");}
if obj_quest.succes[29] &gt; 1 {if(!steam_get_achievement("achieve30")) steam_set_achievement("achieve30");}
if obj_quest.succes[30] &gt; 1 {if(!steam_get_achievement("achieve31")) steam_set_achievement("achieve31");}
if obj_quest.succes[31] &gt; 1 {if(!steam_get_achievement("achieve32")) steam_set_achievement("achieve32");}
if obj_quest.succes[32] &gt; 1 {if(!steam_get_achievement("achieve33")) steam_set_achievement("achieve33");}
if obj_quest.succes[33] &gt; 1 {if(!steam_get_achievement("achieve34")) steam_set_achievement("achieve34");}
if obj_quest.succes[34] &gt; 1 {if(!steam_get_achievement("achieve35")) steam_set_achievement("achieve35");}
if obj_quest.succes[35] &gt; 1 {if(!steam_get_achievement("achieve36")) steam_set_achievement("achieve36");}
if obj_quest.succes[36] &gt; 1 {if(!steam_get_achievement("achieve37")) steam_set_achievement("achieve37");}
if obj_quest.succes[37] &gt; 1 {if(!steam_get_achievement("achieve38")) steam_set_achievement("achieve38");}
if obj_quest.succes[38] &gt; 1 {if(!steam_get_achievement("achieve39")) steam_set_achievement("achieve39");}
if obj_quest.succes[39] &gt; 1 {if(!steam_get_achievement("achieve40")) steam_set_achievement("achieve40");}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EVENT


/*splitquest = 0
questinfovar = ds_grid_get(obj_quest.questgrid,3,384)
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
quest = 384
finished = 1}

with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = ds_grid_get(obj_quest.questgrid,6, 384)}
if ds_grid_get(obj_quest.questgrid,32, 384) = "" {}else{
obj_nightcycle.walkienow = ds_grid_get(obj_quest.questgrid,32, 384)}
obj_zombie.karma += ds_grid_get(obj_quest.questgrid,5, 384)
ds_grid_set(obj_quest.questgrid, 10, 384,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, 384,4)//la mêttre dans les quetes fini*/



//EVENT BLIZAR ARDENT
if global.questglobalnow+369 = 377 {
if obj_superwind.intensite &lt; 300 {obj_superwind.intensite += 0.01}}

//RESSOURCES double prix 389
//dans obj_ventebouton step

//RESSOURCES moitier prix 388
//dans obj_achatbouton step

//obj_villageois alarm[1]  392
//pandémie

// obj_gouteur 384

//dans obj_buttoncomerce draw line 134

//MARCHANT LEGENDAIRE 27

if instance_exists(obj_engine){
if global.questglobalnow = floor(current_hour) {}else{
//if global.sl_time&gt;=0 &amp;&amp; global.sl_time&lt;=0.01 {
var i;//global
 for (i = 370; i &lt; 400; i += 1)
    {
/* ds_grid_set(questgrid,5,i, 2000)//la récompenses money
ds_grid_set(questgrid,6,i, 121)//la recompenses objet
ds_grid_set(questgrid,7,i, 0)//cdtion lvl
ds_grid_set(questgrid,13,i, 1)//popobj
ds_grid_set(questgrid,14,i, 700)//xpop
ds_grid_set(questgrid,15,i, 700)//ypop
ds_grid_set(questgrid,16,i, -1)//roompopobj
ds_grid_set(questgrid,17,i, 5)//nbrpopobjet
ds_grid_set(questgrid,18,i, 1)//karma 1 pos 2 neg
ds_grid_set(questgrid,19,i, 2)//karma 1 pos 2 neg
*/
ds_grid_set(questgrid, 10, i, 0); //activequest 0 / 1 / 2
}
//if floor(current_hour) = 1 {

global.questglobalnow = current_hour
//show_message(global.questglobalnow)
questglobalvar = global.questglobalnow 
ds_grid_set(questgrid, 10, questglobalvar+369, 1);

questinfovar = ds_grid_get(obj_quest.questgrid,3, questglobalvar+369)
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
finished = 4
}

//}
//}
}
global.questglobalnow  = questglobalvar 
}


  
      //) + ":" + string(current_minute) + "." + string(current_second));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode &gt; 1 {mode -= 1}//changer de page de quete

//if mode = 0 {if mode2 &lt; 26 {mode2 += 1}}//descendre les button
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mode &lt; 500 &amp;&amp; mode &gt; 0{mode += 1}//changer de page de quete
//if mode = 0 {if mode2 &gt; 1 {mode2 -= 1}}//descendre les button
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//alarm[3] = 2

global.questutile = 0//POUR JULIAN VEROL POP UNE FOIS

envoidepnt = 0





///createobjetquest




//if ds_grid_get(obj_quest.questgrid, 7, quest) &lt;= obj_zombie.level {




iadejaexistante = 0



//POP EVENT GLOBAL

if global.questglobalnow+369 = 374 {if room = room131 {

with(instance_create(7712,4032,obj_marchant)){
marchantnbr = 26
}

}}

if global.questglobalnow+369 = 381 {if room = room124 {

with(instance_create(2240,2464,obj_challengerbody)){
angleturret = -90
}

}}







iroom = 0
var i11;

 for (i11 = 0; i11 &lt; 700; i11 += 1){
 iroom += 1
 
   if room = ds_grid_get(questgrid,40, i11) {
  //IMOBILE DONEUR DE QUETE ET D OBJ ou juste deco DEUX
  if ds_grid_get(questgrid,37, i11) = 1 &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,38, i11),ds_grid_get(questgrid,39, i11),
obj_immobile2)) {quest = other.iroom-1;objdepart = ds_grid_get(other.questgrid,23, other.iroom-1) 
mode2 = ds_grid_get(obj_quest.questgrid,41,other.iroom-1);
image_angle = ds_grid_get(obj_quest.questgrid,43,other.iroom-1)}
}

}else if room = obj_quest.globalx40 {
  //IMOBILE DONEUR DE QUETE ET D OBJ ou juste deco DEUX
  if obj_quest.globalx40 = 1 &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx38,obj_quest.globalx39,
obj_immobile2)) {quest = obj_quest.globalx44;objdepart = obj_quest.globalx23
mode2 = obj_quest.globalx41;
image_angle = obj_quest.globalx43}
}
}
 
 
 
  if room = ds_grid_get(questgrid,29, i11) {
  //IMOBILE DONEUR DE QUETE ET D OBJ ou juste deco
  if ds_grid_get(questgrid,22, i11) = 1 &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,23, i11),ds_grid_get(questgrid,24, i11),
obj_immobile)) {quest = other.iroom-1;objdepart = ds_grid_get(other.questgrid,23, other.iroom-1) 
mode2 = ds_grid_get(obj_quest.questgrid,34,other.iroom-1);}
}
//pop de l escort
if ds_grid_get(questgrid,13, i11) = 6  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,23, i11),ds_grid_get(questgrid,24, i11),
obj_escortquest)) {quest = other.iroom-1;}
}

}else if room = obj_quest.globalx29 {
  //IMOBILE DONEUR DE QUETE ET D OBJ ou juste deco
  if obj_quest.globalx22 = 1 &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx23,obj_quest.globalx24,
obj_immobile)) {quest = obj_quest.globalx44;objdepart = obj_quest.globalx23
mode2 = obj_quest.globalx34;}
}
//pop de l escort
if obj_quest.globalx13 = 6  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx23,obj_quest.globalx24,
obj_escortquest)) {quest = obj_quest.globalx44}
}

}
 
 if room = ds_grid_get(questgrid,16, i11)//ds_grid_get(questgrid,7, i11) &lt;= obj_zombie.level 
 //&amp;&amp; ds_grid_get(questgrid,19, i11) = typechoosequest 
 or room = obj_quest.globalx16 {

 
if room = ds_grid_get(questgrid,16, i11)// &amp;&amp; ds_grid_get(questgrid, 7, i11) &lt;= obj_zombie.level 
or room = obj_quest.globalx16 {
///KARMA POSITIF
 if obj_zombie.karma &gt; 0 //&amp;&amp; ds_grid_get(questgrid,18, i11) = 1 
 {
 //show_message(ds_grid_get(questgrid,16,258))
 
 
if ds_grid_get(questgrid,13, i11) = 1 &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
if ds_grid_get(questgrid,42, i11) &gt;= 2 {}else{
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_talkquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}


}}else if obj_quest.globalx13 = 1 &amp;&amp; obj_quest.globalx10 = 1 {
if obj_quest.globalx42 &gt;= 2 {}else{
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_talkquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}}

if ds_grid_get(questgrid,13, i11) = 2 {
if floor(ds_grid_get(questgrid,10, i11)) &lt; 2 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_enemypopquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
iadejaexistante = 1
}
}else if obj_quest.globalx13 = 2 {
if floor(obj_quest.globalx10) &lt; 2 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_enemypopquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
iadejaexistante = 1
}
}

if ds_grid_get(questgrid,13, i11) = 3  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_piratereparerquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}

}else if obj_quest.globalx13 = 3  &amp;&amp; obj_quest.globalx10 = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_piratereparerquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}

if ds_grid_get(questgrid,13, i11) = 4  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_protegerquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}

}else if obj_quest.globalx13 = 4  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_protegerquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}

if ds_grid_get(questgrid,13, i11) = 5  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_transportquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 5  &amp;&amp; obj_quest.globalx10 = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_transportquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}

/*if ds_grid_get(questgrid,13, i11) = 7  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_suitedequete)) {quest = other.iroom-1;}
}*/
if ds_grid_get(questgrid,13, i11) = 8  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_prisonerquest)) {quest = other.iroom-1;
}
}else if obj_quest.globalx13 = 8  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_prisonerquest)) {quest = obj_quest.globalx44;
}
}

if ds_grid_get(questgrid,13, i11) = 9  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_askobjquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 9  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_askobjquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}

if ds_grid_get(questgrid,13, i11) = 10  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_discutionquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 10  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_discutionquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}

if ds_grid_get(questgrid,13, i11) = 11 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_incursionquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 11 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_incursionquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}
if ds_grid_get(questgrid,13, i11) = 12  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_rameneriaquest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 12  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_rameneriaquest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}
if ds_grid_get(questgrid,13, i11) = 13  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_embuscadequest)) {quest = other.iroom-1;mode2 = ds_grid_get(obj_quest.questgrid,33,other.iroom-1);}
}else if obj_quest.globalx13 = 13  &amp;&amp; floor(obj_quest.globalx10) = 1 {
with(instance_create(obj_quest.globalx14,obj_quest.globalx15,
obj_embuscadequest)) {quest = obj_quest.globalx44;mode2 = obj_quest.globalx33;}
}
}else if obj_zombie.karma &lt;= 0 &amp;&amp; ds_grid_get(questgrid,18, i11) = 0 {
//KARMA NEGATIF
if ds_grid_get(questgrid,13, i11) = 1  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_talkquest)) {quest = other.iroom-1}
}
if ds_grid_get(questgrid,13, i11) = 2  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_enemypopquest)) {quest = other.iroom-1}
//iadejaexistante = 1
}
if ds_grid_get(questgrid,13, i11) = 3  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_piratereparerquest)) {quest = other.iroom-1}
}
if ds_grid_get(questgrid,13, i11) = 4  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_protegerquest)) {quest = other.iroom-1}
}
if ds_grid_get(questgrid,13, i11) = 5  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_transportquest)) {quest = other.iroom-1;}
}
if ds_grid_get(questgrid,13, i11) = 6  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_escortquest)) {quest = other.iroom-1;}
}
if ds_grid_get(questgrid,13, i11) = 7  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_suitedequete)) {quest = other.iroom-1;}
}
if ds_grid_get(questgrid,13, i11) = 8  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_prisonerquest)) {quest = other.iroom-1;}
}
if ds_grid_get(questgrid,13, i11) = 9  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_askobjquest)) {quest = other.iroom-1;}
}
if ds_grid_get(questgrid,13, i11) = 10  &amp;&amp; floor(ds_grid_get(questgrid,10, i11)) = 1 {
with(instance_create(ds_grid_get(questgrid,14, i11),ds_grid_get(questgrid,15, i11),
obj_discutionquest)) {quest = other.iroom-1;}
}

}
}

}
}


if iadejaexistante = 0 {
alarm[2] = 4}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_clear(questgrid, -1);
ds_grid_destroy(questgrid);
ds_grid_clear(questgridvisibilite, -1);
ds_grid_destroy(questgridvisibilite);
ds_grid_clear(territoiregrid, -1);
ds_grid_destroy(territoiregrid);
ds_grid_clear(gridmap, -1);
ds_grid_destroy(gridmap);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if showquest = true {

draw_set_alpha(1);

draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
//draw_set_valign(fa_top);
draw_set_color(obj_bigstats.colortext2);

if imagespeed2 &lt; 22 {imagespeed2 += 0.5}
if imagespeed3 &lt; 8 {imagespeed3 += 0.5}
draw_sprite_ext( spr_hudae4, imagespeed3, view_xview+1165,view_yview+400, 2.5, 2.2, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+144, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+410, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+664, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+919, view_yview+446, 1, 1, 0, c_white, 1 );


//draw_sprite_ext(spr_biginfo,0,view_xview+1180,view_yview+200,0.42,0.40,0,c_white,0.9)

/*for (i2 = 1; i2 &lt; 30; i2 += 1){
 questvisible[i2] = 0}
//pour enregistrer les premieres quetes active sur la liste des quest visible dans le menu
for (i = 1; i &lt; 300; i += 1){
if questactive[i] = 1 {
for (i2 = 1; i2 &lt; 30; i2 += 1){
if questvisible[i2] = 0 {
questvisible[i2] = i
i2 = 30
}}}}*/


if mode = 0 {

}else{

titrevisible = ds_grid_get(questgridvisibilite,3, mode)
textvisible = ds_grid_get(questgridvisibilite,4, mode)


//textvisible = questinfo[mode]//questgrid//questgridvisibilite
draw_text_ext(view_xview+1005,view_yview+225,string(mode)+" . "+string(textvisible),20,330)//titrevisible
draw_set_halign(fa_right);
//draw_text_ext(view_xview+1340,view_yview+585,string(lieuvisible),20,330)//titrevisible
draw_set_halign(fa_left);
//draw_text_ext(view_xview+1015, view_yview+220,textvisible ,20,330);//questinfo[questvisible[mode]]//
if typechoosequest = 2 &amp;&amp; coterwinglobalnow &gt; 0 {
draw_healthbar(view_xview+1005, view_yview+185, view_xview+1055, view_yview+195
, coterwinglobalnow/10, c_black, c_red, c_blue, 0, true, true)
}
if ds_grid_get(questgridvisibilite,10, mode) &gt; 0 {varpercentquest = (ds_grid_get(questgridvisibilite,10, mode)-1)*100
draw_healthbar(view_xview+1085, view_yview+485+50, view_xview+1185, view_yview+495+50
, varpercentquest, c_black, c_white, c_white, 0, true, true)
draw_sprite_ext(spr_quest,0,view_xview+1025, view_yview+490+50,0.5,0.5,0,obj_bigstats.colortext2,1)

//lieuvisible2 = scr_map(ds_grid_get(questgridvisibilite,21, mode));

if point_distance(view_xview+1055, view_yview+490+50,mouse_x,mouse_y) &lt; 35 {
coloricon = obj_bigstats.colortext2
lieuvisible = scr_map(ds_grid_get(questgridvisibilite,16, mode));
if global.language = 1 {obj_cursor.infoall = "Appuie sur E pour suivre : "+string(lieuvisible)}else{
obj_cursor.infoall = "Push E to follow : "+string(lieuvisible)}
if keyboard_check_pressed(ord("E")) or mouse_check_button_pressed(mb_left) {
//show_message(
/*if ds_grid_get(questgridvisibilite,10, mode) &gt;= 2 {
ds_grid_set(questgrid,10, ds_grid_get(questgridvisibilite,44, mode),1)
globalx1 = ds_grid_get(questgridvisibilite,1, mode)
globalx2 = ds_grid_get(questgridvisibilite,2, mode)
globalx3 = ds_grid_get(questgridvisibilite,3, mode)
globalx4 = ds_grid_get(questgridvisibilite,4, mode)
globalx5 = ds_grid_get(questgridvisibilite,5, mode)
globalx6 = ds_grid_get(questgridvisibilite,6, mode)
globalx7 = ds_grid_get(questgridvisibilite,7, mode)
globalx8 = ds_grid_get(questgridvisibilite,8, mode)
globalx9 = ds_grid_get(questgridvisibilite,9, mode)
globalx10 = ds_grid_get(questgridvisibilite,10, mode)
globalx11 = ds_grid_get(questgridvisibilite,11, mode)
globalx12 = ds_grid_get(questgridvisibilite,12, mode)
globalx13 = ds_grid_get(questgridvisibilite,13, mode)
globalx14 = ds_grid_get(questgridvisibilite,14, mode)
globalx15 = ds_grid_get(questgridvisibilite,15, mode)
globalx16 = ds_grid_get(questgridvisibilite,16, mode)
globalx17 = ds_grid_get(questgridvisibilite,17, mode)
globalx18 = ds_grid_get(questgridvisibilite,18, mode)
globalx19 = ds_grid_get(questgridvisibilite,19, mode)
globalx20 = ds_grid_get(questgridvisibilite,20, mode)
globalx21 = ds_grid_get(questgridvisibilite,21, mode)
globalx22 = ds_grid_get(questgridvisibilite,22, mode)
globalx23 = ds_grid_get(questgridvisibilite,23, mode)
globalx24 = ds_grid_get(questgridvisibilite,24, mode)
globalx25 = ds_grid_get(questgridvisibilite,25, mode)
globalx26 = ds_grid_get(questgridvisibilite,26, mode)
globalx27 = ds_grid_get(questgridvisibilite,27, mode)
globalx28 = ds_grid_get(questgridvisibilite,28, mode)
globalx29 = ds_grid_get(questgridvisibilite,29, mode)
globalx30 = ds_grid_get(questgridvisibilite,30, mode)
globalx31 = ds_grid_get(questgridvisibilite,31, mode)
globalx32 = ds_grid_get(questgridvisibilite,32, mode)
globalx33 = ds_grid_get(questgridvisibilite,33, mode)
globalx34 = ds_grid_get(questgridvisibilite,34, mode)
globalx35 = ds_grid_get(questgridvisibilite,35, mode)
globalx36 = ds_grid_get(questgridvisibilite,36, mode)
globalx37 = ds_grid_get(questgridvisibilite,37, mode)
globalx38 = ds_grid_get(questgridvisibilite,38, mode)
globalx39 = ds_grid_get(questgridvisibilite,39, mode)
globalx40 = ds_grid_get(questgridvisibilite,40, mode)
globalx41 = ds_grid_get(questgridvisibilite,41, mode)
globalx42 = ds_grid_get(questgridvisibilite,42, mode)
globalx43 = ds_grid_get(questgridvisibilite,43, mode)
globalx44 = ds_grid_get(questgridvisibilite,44, mode)
globalx45 = ds_grid_get(questgridvisibilite,45, mode)

global.questglobalnow = ds_grid_get(questgridvisibilite,44, mode)// mode//ds_grid_get(questgridvisibilite,10, mode)
}*/
global.roomdonneurdequest = ds_grid_get(questgridvisibilite,29, mode)
global.roomcible = ds_grid_get(questgridvisibilite,16, mode)
}
}else{coloricon = c_black}

//ABANDONNER LA QUETE
coloricon4 = c_black
if point_distance(view_xview+1230, view_yview+490+50,mouse_x,mouse_y) &lt; 25 {
coloricon4 = obj_bigstats.colortext2
if global.language = 1 {obj_cursor.infoall = "Appuie sur E pour abandonner la quête"}else{
obj_cursor.infoall = "Push E to abandoned quest"}

nope = 0
if ds_grid_get(questgridvisibilite,19, mode) = 4 or
 ds_grid_get(questgridvisibilite,19, mode) = 5 {}else{
 if ds_grid_get(questgridvisibilite,44, mode) &gt;= 150 &amp;&amp;
 ds_grid_get(questgridvisibilite,44, mode) &lt;= 185 {nope = 1}
  if ds_grid_get(questgridvisibilite,44, mode) &gt;= 200 &amp;&amp;
 ds_grid_get(questgridvisibilite,44, mode) &lt; 400 {nope = 1}

if keyboard_check_pressed(ord("E")) &amp;&amp; nope = 0 {

ds_grid_set(questgrid,10, ds_grid_get(questgridvisibilite,44, mode),0)   

}}}else{}
//if point_distance(view_xview+1055, view_yview+490+50,mouse_x,mouse_y) &lt; 20 {
//obj_cursor.infoall = ds_grid_get(questgridvisibilite,21, mode)}
draw_sprite_ext(spr_questrash,0,view_xview+1230, view_yview+490+50,0.5,0.5,0,coloricon4,1)
draw_sprite_ext(spr_quest2,0,view_xview+1055, view_yview+490+50,0.5,0.5,0,coloricon,1)
//draw_text_ext(view_xview+1005,view_yview+510,"rewards",20,330)//RecompensesObjet
draw_sprite_ext(spr_chest,0,view_xview+1025, view_yview+520+50,0.5,0.5,0,obj_bigstats.colortext2,1)
draw_sprite_ext(spr_items,ds_grid_get(questgridvisibilite,6, mode),view_xview+1055, view_yview+520+50,0.5,0.5,0,obj_bigstats.colortext2,1)

draw_sprite_ext(spr_monaie,0,view_xview+1025, view_yview+550+50,0.5,0.5,0,obj_bigstats.colortext2,1)
draw_text_ext(view_xview+1055,view_yview+540+50,string(ds_grid_get(questgridvisibilite,5, mode)),20,330)//RecompensesObjet
//draw_text_ext(view_xview+1255,view_yview+540+50,string(ds_grid_get(questgridvisibilite,10, mode)),20,330)//RecompensesObjet
}
//draw_text(view_xview+1060,view_yview+240,questinfo[questvisible[mode]])
}}else{imagespeed2 = 0
imagespeed3 = 0
demaragepralax = 0
imagespeed = 0}






/*if instance_exists(obj_guyqestsecondaire){
nearquestguy = instance_nearest(obj_zombie.x,obj_zombie.y,obj_guyqestsecondaire)
if point_distance(nearquestguy.x,nearquestguy.y,obj_zombie.x,obj_zombie.y) &lt; 120 {
///QUEST PANNEL DEMANDE DIRECT
questpannel = 0
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){if questactivenow[i11] = 1 {questpannel = i11}}
//ds_grid_get(questgrid,11, questvisible[mode])

if questpannel &gt; 0 {
draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
//draw_set_valign(fa_top);

if imagespeed4 &lt; 8 {imagespeed4 += 0.5}
if imagespeed5 &lt; 16 {imagespeed5 += 0.5}
draw_sprite_ext( spr_hudae4, imagespeed4, view_xview+650,view_yview+400, 4, 3.5, 0, c_white, 1 );
draw_sprite_ext( spr_hudae9, imagespeed5, view_xview+650,view_yview+170+110, 0.9, 0.9, 0, c_white, 1 );
draw_sprite_ext( spr_hudae9, imagespeed5, view_xview+650,view_yview+490+110, 0.9, 0.9, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed5, view_xview+650,view_yview+170, 1.07, 0.9, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed5, view_xview+650,view_yview+390, 1.07, 0.9, 0, c_white, 1 );
//draw_sprite_ext(spr_biginfo,0,view_xview+650,view_yview+150,0.7,0.5,0,c_white,0.9)
draw_set_color(c_white);
draw_text_ext(view_xview+390, view_yview+70,questblablabla[questpannel] ,20,500);//blabla du pnj
draw_set_color(obj_bigstats.colortext2);
draw_text_ext(view_xview+390, view_yview+300,questinfo[questpannel] ,20,500);//résumé de la quete
draw_set_color(c_silver);
draw_text_ext(view_xview+390, view_yview+645,"Reward money : "+string(questrewardkarma[questpannel])+" Karma" ,20,500);//
draw_text_ext(view_xview+390, view_yview+620,"Reward item : "+string(questrewarditem[questpannel])+" " ,20,500);//

if not instance_exists(obj_acceptquest){instance_create(x,y,obj_acceptquest)
}else{

if position_meeting(mouse_x,mouse_y,obj_acceptquest){
if keyboard_check_pressed(ord("E")){
questactive[questpannel] = 1;
questpannel = 0;
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
 with(obj_acceptquest){instance_destroy();}
with(obj_denniedquest){instance_destroy();}
 }}}

if not instance_exists(obj_denniedquest){instance_create(x,y,obj_denniedquest)
}else{
if position_meeting(mouse_x,mouse_y,obj_denniedquest){
if keyboard_check_pressed(ord("E")){
questpannel = 0
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
with(obj_acceptquest){instance_destroy();}
with(obj_denniedquest){instance_destroy();}
}}}
}else{imagespeed4 = 0;imagespeed5 = 0;}
}}*/



/*if showquest = true {

draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
//draw_set_valign(fa_top);
draw_set_color(obj_bigstats.colortext2);

if imagespeed2 &lt; 22 {imagespeed2 += 0.5}
if imagespeed3 &lt; 8 {imagespeed3 += 0.5}
draw_sprite_ext( spr_hudae4, imagespeed3, view_xview+1165,view_yview+400, 2.5, 2.2, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+144, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+410, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+664, view_yview+446, 1, 1, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed2, view_xview+919, view_yview+446, 1, 1, 0, c_white, 1 );


//draw_sprite_ext(spr_biginfo,0,view_xview+1180,view_yview+200,0.42,0.40,0,c_white,0.9)

for (i2 = 1; i2 &lt; 30; i2 += 1){
 questvisible[i2] = 0}
//pour enregistrer les premieres quetes active sur la liste des quest visible dans le menu
for (i = 1; i &lt; 300; i += 1){
if questactive[i] = 1 {
for (i2 = 1; i2 &lt; 30; i2 += 1){
if questvisible[i2] = 0 {
questvisible[i2] = i
i2 = 30
}}}}


if mode = 0 {
draw_sprite_ext(spr_hudae8, imagespeed2,view_xview+1180-20,view_yview+220+35,0.60,0.28,0,c_white,1)
draw_text(view_xview+1025,view_yview+195+40,"QUEST ACTIVE : "+string(0+mode2))
draw_text(view_xview+1025,view_yview+215+40,questinfotitre[questvisible[0+mode2]])//questinfotitre//questvisibletitre

draw_sprite_ext(spr_hudae8, imagespeed2,view_xview+1025+155-20,view_yview+265+25+35,0.60,0.28,0,c_white,1)
draw_text(view_xview+1025,view_yview+265+40,"QUEST ACTIVE : "+string(1+mode2))
draw_text(view_xview+1025,view_yview+285+40,questinfotitre[questvisible[1+mode2]])//questinfotitre//questvisibletitre


draw_sprite_ext(spr_hudae8, imagespeed2,view_xview+1025+155-20,view_yview+335+25+35,0.60,0.28,0,c_white,1)
draw_text(view_xview+1025,view_yview+335+40,"QUEST ACTIVE : "+string(2+mode2))
draw_text(view_xview+1025,view_yview+355+40,questinfotitre[questvisible[2+mode2]])//questinfotitre//questvisibletitre


draw_sprite_ext(spr_hudae8, imagespeed2,view_xview+1025+155-20,view_yview+405+25+35,0.60,0.28,0,c_white,1)
draw_text(view_xview+1025,view_yview+405+40,"QUEST ACTIVE : "+string(3+mode2))
draw_text(view_xview+1025,view_yview+425+40,questinfotitre[questvisible[3+mode2]])//questinfotitre//questvisibletitre


draw_sprite_ext(spr_hudae8, imagespeed2,view_xview+1025+155-20,view_yview+475+25+35,0.60,0.28,0,c_white,1)
draw_text(view_xview+1025,view_yview+475+40,"QUEST ACTIVE : "+string(4+mode2))
draw_text(view_xview+1025,view_yview+495+40,questinfotitre[questvisible[4+mode2]])//questinfotitre//questvisibletitre


}else{
//textvisible = questinfo[mode]
draw_text(view_xview+1015,view_yview+190,"QUEST ACTIVE \#"+string(mode))
draw_text_ext(view_xview+1015, view_yview+220, questinfo[questvisible[mode]],20,330);
//draw_text(view_xview+1060,view_yview+240,questinfo[questvisible[mode]])
}}else{imagespeed2 = 0
imagespeed3 = 0
demaragepralax = 0
imagespeed = 0}






if instance_exists(obj_guyqestsecondaire){
nearquestguy = instance_nearest(obj_zombie.x,obj_zombie.y,obj_guyqestsecondaire)
if point_distance(nearquestguy.x,nearquestguy.y,obj_zombie.x,obj_zombie.y) &lt; 120 {
///QUEST PANNEL DEMANDE DIRECT
questpannel = 0
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){if questactivenow[i11] = 1 {questpannel = i11}}


if questpannel &gt; 0 {
draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
//draw_set_valign(fa_top);

if imagespeed4 &lt; 8 {imagespeed4 += 0.5}
if imagespeed5 &lt; 16 {imagespeed5 += 0.5}
draw_sprite_ext( spr_hudae4, imagespeed4, view_xview+650,view_yview+400, 4, 3.5, 0, c_white, 1 );
draw_sprite_ext( spr_hudae9, imagespeed5, view_xview+650,view_yview+170+110, 0.9, 0.9, 0, c_white, 1 );
draw_sprite_ext( spr_hudae9, imagespeed5, view_xview+650,view_yview+490+110, 0.9, 0.9, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed5, view_xview+650,view_yview+170, 1.07, 0.9, 0, c_white, 1 );
//draw_sprite_ext( spr_hudae8, imagespeed5, view_xview+650,view_yview+390, 1.07, 0.9, 0, c_white, 1 );
//draw_sprite_ext(spr_biginfo,0,view_xview+650,view_yview+150,0.7,0.5,0,c_white,0.9)
draw_set_color(c_white);
draw_text_ext(view_xview+390, view_yview+70,questblablabla[questpannel] ,20,500);//blabla du pnj
draw_set_color(obj_bigstats.colortext2);
draw_text_ext(view_xview+390, view_yview+300,questinfo[questpannel] ,20,500);//résumé de la quete
draw_set_color(c_silver);
draw_text_ext(view_xview+390, view_yview+645,"Reward money : "+string(questrewardkarma[questpannel])+" Karma" ,20,500);//
draw_text_ext(view_xview+390, view_yview+620,"Reward item : "+string(questrewarditem[questpannel])+" " ,20,500);//

if not instance_exists(obj_acceptquest){instance_create(x,y,obj_acceptquest)
}else{

if position_meeting(mouse_x,mouse_y,obj_acceptquest){
if keyboard_check_pressed(ord("E")){
questactive[questpannel] = 1;
questpannel = 0;
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
 with(obj_acceptquest){instance_destroy();}
with(obj_denniedquest){instance_destroy();}
 }}}

if not instance_exists(obj_denniedquest){instance_create(x,y,obj_denniedquest)
}else{
if position_meeting(mouse_x,mouse_y,obj_denniedquest){
if keyboard_check_pressed(ord("E")){
questpannel = 0
var i11;
 for (i11 = 0; i11 &lt; 300; i11 += 1){questactivenow[i11] = 0}
with(obj_acceptquest){instance_destroy();}
with(obj_denniedquest){instance_destroy();}
}}}
}else{imagespeed4 = 0;imagespeed5 = 0;}
}}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_zombie.chatlaunch = 0 &amp;&amp; obj_buttonguilde.chatlaunch2 = 0{
///EXIT TOUT AUTRE MENU
if instance_exists(obj_hudoffbutton) {if obj_hudoff.hudoff = 1 {obj_hudoff.hudoff = 0
if instance_exists(obj_hudoffbutton){with(obj_hudoffbutton){instance_destroy();}}}}

if obj_armorloot.ilaunch &gt; 0 {obj_armorloot.alarm[1] = 1}

if obj_economie.ilaunch = 1 {obj_economie.ilaunch = 0
if instance_exists(obj_buttoneconomie){with(obj_buttoneconomie){instance_destroy();}}}

if showinv = true {showinv = false ;obj_inventory.showinv3 = false}

if showmap = true {showmap = false}

//if showquest = true{with(obj_quest){if showquest = true {showquest = false}questpannel = 0;}}
///EXIT TOUT AUTRE MENU FIN
if showquest = true {showquest = false}else{showquest = true}}
//draw_sprite_ext(spr_biginfo,0,0,mouse_y+0,0.37,0.22,0,c_white,0.9)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*show_message(ds_grid_get(questgrid,4, 1))
show_message(ds_grid_get(questgridvisibilite,4, 1))*/

//ds_grid_add(territoiregrid,3,room,1)
//ds_grid_set(questgrid,10,254, 1);
//obj_zombie.EXP += 1*obj_zombie.level

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message(instance_number(obj_enemy2))
//ds_grid_add(territoiregrid,3,room,-1)
//if room = room139 {room_goto(room64)}else{room_goto(room139)}
//with(instance_create(obj_zombie.x+10,obj_zombie.y+10,obj_enemy2)){nameia = "Julian Verol"}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if showquest = true {showquest = false}
questpannel = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
