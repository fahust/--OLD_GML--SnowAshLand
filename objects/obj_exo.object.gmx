<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_exo1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sBlood</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///faudra charger la save armure et dura
exomodel = global.exomodel //model un deux et trois pour commencer avec laser court ,laser long ,et lance flamme 
exoprotect = global.exoprotect
exodura = global.exodura
exoprotectmax = global.exoprotectmax
exoduramax = global.exoduramax
roomexo = obj_zombie.roomexosave //premier lieu ou apres save
if obj_zombie.exo = 0 {
x = global.exox
y = global.exoy
}
repair = 0
key_upgrade    = keyboard_check(ord('A'))
//visible
if obj_zombie.exo = 1 {
visible = false
}


//test gun et battery
exobattery = global.exobattery
exobatterygunmax = 100//plutot inule pour l'instant
exobatterygunnow = 100
rechargement = 0



Sname=part_system_create();

particle1=part_type_create()
part_system_depth(Sname,-100000)
part_type_shape(particle1,pt_shape_flare);
part_type_size(particle1,2,2,0.01,0);
part_type_speed(particle1,12,35,0.01,0);
part_type_direction(particle1,0,0,0,0);
part_type_orientation(particle1,0,0,0,0,1);
part_type_color3(particle1,33023,255,65535);
part_type_alpha2(particle1,0.80,1);
part_type_scale(particle1,1,0.6);
part_type_gravity(particle1,0,270);
part_type_life(particle1,12,22);
part_type_blend(particle1,1);

particle2=part_type_create()

part_type_shape(particle2,pt_shape_flare);
part_type_size(particle2,1,1,0.01,0);
part_type_speed(particle2,40,65,0.01,0);
part_type_direction(particle2,0,0,0,0);
part_type_orientation(particle2,0,0,0,0,1);
part_type_color3(particle2,c_red,c_orange,c_red);
part_type_alpha2(particle2,1,1);
part_type_scale(particle2,1,0.02);
part_type_gravity(particle2,0,270);
part_type_life(particle2,27,28);
part_type_blend(particle2,1);


particle3=part_type_create()
part_type_shape(particle3,pt_shape_sphere);
part_type_size(particle3,0.60,0.60,0,0);
part_type_speed(particle3,36.5,38,0,0);
part_type_direction(particle3,20,160,0,0);
part_type_orientation(particle3,90,90,0,0,1);
part_type_color2(particle3,c_navy,16777215);//12632256
part_type_alpha1(particle3,1);
part_type_scale(particle3,1,0.30);
part_type_gravity(particle3,0,270);
part_type_life(particle3,30,30);
part_type_blend(particle3,1);

partlng = 1000
lngsolid = 1000
lifeminpart = 12
lifemaxpart = 22
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cadence de tir
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_zombie.exo = 1 {
key_out    = keyboard_check_pressed(ord('A'))
}
//enregistrement de la variable de room
roomexosave = string(roomexo)

//battery du gun mecha
if exobatterygunnow &lt; 100 {
exobatterygunnow += 0.2
if exobatterygunnow &gt; 95 {
rechargement = 0
}
}

//battery du mecha
if obj_zombie.exo = 1 {
if exobattery &gt; 0 {
exobattery -= 0.001
}else{
visible = true
x = obj_zombie.x
y = obj_zombie.y
roomexo = global.roomplayer
obj_zombie.exo = 0
}

if exoprotect &lt; 0 {
visible = true
x = obj_zombie.x
y = obj_zombie.y
roomexo = global.roomplayer
obj_zombie.exo = 0
}
}


// affichage des sprite ,freeze ,ombre et colli perso
if exomodel = 1 {

image_index = spr_robot3
sprite_index = spr_robot3
if obj_zombie.exo = 1 {
obj_zombie.freeze += 0.01
obj_zombie.sprite_index = spr_none
}else{
obj_zombie.sprite_index = spr_zombieshadow
}
}

if exomodel = 3 {

image_index = spr_exo
sprite_index = spr_exo
if obj_zombie.exo = 1 {
obj_zombie.freeze += 0.03
obj_zombie.sprite_index = spr_exo
}else{
obj_zombie.sprite_index = spr_zombieshadow
}
}

if exomodel = 2 {

image_index = spr_exo2
sprite_index = spr_exo2
if obj_zombie.exo = 1 {
obj_zombie.freeze += 0.02
obj_zombie.sprite_index = spr_exo2
}else{
obj_zombie.sprite_index = spr_zombieshadow
}
}

if exomodel = 4 {

image_index = spr_exo3
sprite_index = spr_exo3
if obj_zombie.exo = 1 {
obj_zombie.freeze += 0.04
obj_zombie.sprite_index = spr_exo3
}else{
obj_zombie.sprite_index = spr_zombieshadow
}
}


//disparition si le joueur est dans le mecha
if obj_zombie.exo = 1 {
if (key_out) {
visible = true
x = obj_zombie.x
y = obj_zombie.y
roomexo = global.roomplayer
obj_zombie.exo = 0


}
}



//disparait si pas même pièce
if roomexo = global.roomplayer {
if obj_zombie.exo = 0 {
visible = true
}
}else {

visible = false

}

//pour afficher la vie

pourcentexoprotect = exoprotect / exoprotectmax
pourcentexoprotectfinal2 = pourcentexoprotect * 100

pourcentexodura = exodura / exoduramax
pourcentexodurafinal2 = pourcentexodura * 100


//particule direction des armes du mecha
dirpart = obj_zombie.image_angle
if place_free(obj_zombie.x+lengthdir_x(50,dirpart), obj_zombie.y+lengthdir_y(50,dirpart))
{
if place_free(obj_zombie.x+lengthdir_x(100,dirpart), obj_zombie.y+lengthdir_y(100,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(150,dirpart), obj_zombie.y+lengthdir_y(150,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(200,dirpart), obj_zombie.y+lengthdir_y(200,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(250,dirpart), obj_zombie.y+lengthdir_y(250,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(300,dirpart), obj_zombie.y+lengthdir_y(300,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(350,dirpart), obj_zombie.y+lengthdir_y(350,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(400,dirpart), obj_zombie.y+lengthdir_y(400,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(450,dirpart), obj_zombie.y+lengthdir_y(450,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(500,dirpart), obj_zombie.y+lengthdir_y(500,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(550,dirpart), obj_zombie.y+lengthdir_y(650,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(600,dirpart), obj_zombie.y+lengthdir_y(600,dirpart)){
if place_free(obj_zombie.x+lengthdir_x(700,dirpart), obj_zombie.y+lengthdir_y(700,dirpart)){

part_type_life(particle1,12,22);//test


}else {
part_type_life(particle1,12,22);
}
}else {
part_type_life(particle1,10,17);
}
}else {
part_type_life(particle1,8,15);
}
}else {
part_type_life(particle1,7,13);
}
}else {
part_type_life(particle1,7,12);
}
}else {
part_type_life(particle1,5,10);
}
}else {
part_type_life(particle1,5,8);
}
}else {
part_type_life(particle1,5,6);
}
}else {
part_type_life(particle1,2,4);
}
}else {
part_type_life(particle1,1,2);
}
}else {
part_type_life(particle1,1,1);
}
}else {
part_type_life(particle1,1,1);
}


}else {
part_type_life(particle1,1,1);
}







if place_free(obj_zombie.x+lengthdir_x(50,obj_zombie.image_angle), obj_zombie.y+lengthdir_y(50,obj_zombie.image_angle)){

}else {
part_type_life(particle1,1,2);
}

//part_type_life(particle1,partlng/160,partlng/160);//test distant object



part_type_direction(particle1,obj_zombie.image_angle-+random(10),obj_zombie.image_angle-+random(10),0,0);
part_type_direction(particle2,obj_zombie.image_angle,obj_zombie.image_angle,0,0);
part_type_direction(particle3,obj_zombie.image_angle-70,obj_zombie.image_angle+70,0,0);




repair = 0





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


// Left-mouse click

    
    
   //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
      
  //   }
    
    
    // Screenshake
   // alarm[0] = 4;
   // shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_enter    = keyboard_check_pressed(ord('E'))
key_upgrade    = keyboard_check(ord('A'))
if roomexo = global.roomplayer {
if obj_zombie.exo = 0 {
 global.interacthud = "Tap E for enter / Tap A for upgrade"
}


if (key_enter) {

visible = false
obj_zombie.exo = 1

}
}

if obj_zombie.exo = 0 {
if (key_upgrade) {
repair = 1
if exoprotect &lt; 999 {
exoprotect += 0.15

}

if exodura &lt; 10 {
exodura += 0.005


}


}else{
repair = 0
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

dir = point_direction(obj_zombie.x, obj_zombie.y, mouse_x,mouse_y);

if obj_zombie.exo = 1 {
if exobatterygunnow &gt; 0 {
if rechargement = 0 {
exobatterygunnow -= 0.5
}
}else{
rechargement = 1
obj_zombie.shootexo = 0//test pour arreter le tir du multi quand rechargement
}

if rechargement = 0 {

if exomodel = 3 {//lance flamme
part_particles_create(Sname,obj_zombie.x+lengthdir_x(130,obj_zombie.image_angle),obj_zombie.y+lengthdir_y(130,obj_zombie.image_angle),particle1,10);
//degat
if alarm[0] &lt; 0 {
instance_create(x,y,obj_shake)
with (instance_create(obj_zombie.x, obj_zombie.y, obj_flamme)) {
team = obj_zombie.teamnow

 //audio_play_sound(snd_fusil,1,0)
    obj_flamme.speed = 35/ global.varfpsmax
    direction = other.dir;
    
    
    }
    alarm[0] = 2*global.varfpsmax
    obj_zombie.shootexo = 1
    }

}

if exomodel = 4 {//onde de choc
if alarm[0] &lt; 0 {
part_particles_create(Sname,obj_zombie.x+lengthdir_x(150,obj_zombie.image_angle),obj_zombie.y+lengthdir_y(150,obj_zombie.image_angle),particle3,100);

instance_create(x,y,obj_shake)

repeat(100){
with (instance_create(obj_zombie.x+lengthdir_x(150,obj_zombie.image_angle),obj_zombie.y+lengthdir_y(150,obj_zombie.image_angle),obj_onde)){
team = obj_zombie.teamnow
direction = other.dir-90+random(180)
speed = 50/ global.varfpsmax
}
}
alarm[0] = 10* global.varfpsmax
    obj_zombie.shootexo = 1
}
//part_particles_create(Sname,obj_zombie.x+lengthdir_x(130,obj_zombie.image_angle),obj_zombie.y+lengthdir_y(130,obj_zombie.image_angle),particle2,10);
}

if exomodel = 2 {//boule d'énergie
if alarm[0] &lt; 0 {
instance_create(x,y,obj_shake)
with (instance_create(obj_zombie.x, obj_zombie.y, obj_buble)) {
team = obj_zombie.teamnow
 audio_play_sound(snd_fusil,1,0)
    obj_buble.speed = 50/ global.varfpsmax
    direction = other.dir;

    
    }
    alarm[0] = 15* global.varfpsmax
    obj_zombie.shootexo = 1
}
}



if exomodel = 1 {//laser rapide
if alarm[0] &lt; 0 {
instance_create(x,y,obj_shake)
with (instance_create(obj_zombie.x, obj_zombie.y, obj_laser)) {
team = obj_zombie.teamnow

 audio_play_sound(snd_fusil,1,0)
    obj_laser.speed = 50/ global.varfpsmax
    direction = other.dir;

    
    }
    alarm[0] = 10* global.varfpsmax
    obj_zombie.shootexo = 1

}
}



}//rechargement = 0



}//exo = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
