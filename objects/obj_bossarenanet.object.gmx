<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc6</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//path = path_add();//suis le joueur

//path_start(pathboss1,5,path_action_restart,true)//fais sa ronde

if room = room64 or room = room65 or room = room66 or room = room67 or room = room68 or room = room69
or room = room74 or room = room75 or room = room80 or room = room78 or room = room79 {//ROOM DE RAID A RAJOUTER
}else{
instance_destroy();
}

//pr low lvl
dgtbonuslow = 0
if obj_zombie.level &lt; 5 {
dgtbonuslow = 6
}else if obj_zombie.level &lt; 10 {
dgtbonuslow = 4
}else if obj_zombie.level &lt; 15 {
dgtbonuslow = 3
}else if obj_zombie.level &lt; 20 {
dgtbonuslow = 1
}

//reglage difficulté
if obj_difficulty.difficulty = 1 {
statdiffucult = 1//difficulté de base
}else{
statdiffucult = obj_difficulty.difficulty*3
}


//bosshp = 10
tirrafale = 0

animwalk = 0
mode2 = 9
morttest = 0

dgt = (2.8) * (obj_zombie.level+20 / 80)

fpsmax = 1
//hpmobs = 70000

enemyspeed = 7

fonce = 0

coterattack = random(360)

/// blood system

partblood_sys = part_system_create();

//blood particle
partblood = part_type_create();
part_type_shape(partblood,pt_shape_disk);
part_type_size(partblood,0.20,0.20,-0.01,0);
part_type_color1(partblood,250);
part_type_alpha2(partblood,1,1);
part_type_speed(partblood,1,2,0,0);
part_type_direction(partblood,0,259,0,0);
part_type_gravity(partblood,0.3,270);
part_type_blend(partblood,1);
part_type_life(partblood,15,30);

//create emitter
partblood_emit = part_emitter_create(partblood_sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_lootbossarena)

if instance_exists(obj_incursioncontrol){
obj_incursioncontrol.kill = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation coup de couteau
coterattack = random(360)

if fonce = 1 {
fonce = 0
}else{
fonce = 1
alarm[3] = 100+random(300) //temps pour pouvoir réattaquerz
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_set(choose(random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360), random(360),random(360) ,360 ), enemyspeed/1.5/ fpsmax )

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//path_start(pathboss1,5,path_action_continue,false)//fais sa ronde
/*
image_angle=direction
    var mx = obj_zombie.x ;
var my = obj_zombie.y;
    if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
enemyspeed = 4.5

//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed / fpsmax , path_action_stop, 0);
    }}}
    alarm[1] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de l'enemi rajouter les collisions des balles

alarm[0] = 80 * global.varfpsmax

  player_x = obj_zombie.x;
player_y = obj_zombie.y;  
    collivision = obj_zombie


if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
          player_x = clientboss.x;
player_y = clientboss.y;  
    collivision = clientboss
  }else{

  }
  }

//player_x = obj_zombie.x;
//player_y = obj_zombie.y;
var dir2 = point_direction(x,y,player_x,player_y);
if abs(angle_difference(dir2,image_angle)) &lt;= 30 {
if (point_distance(x, y, player_x, player_y) &lt; 550)

{
///frequence de tir


if (!collision_line(x,y,collivision.x,collivision.y,obj_wall,1,1)) 



    &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tankneige,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_buisson1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rocher1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tronc,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape05,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_shape06,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate0,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate02,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crate03,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade1,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade2,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade3,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade4,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade5,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade6,1,1))
 &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade7,1,1))
  &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_house14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_eglise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tente4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_houseburn,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridge5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bridgebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etageafoin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_housebroke,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ascensseur,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_comptoir2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bibliotheque3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cuisiniere2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaise3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chaisetomber,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_cercueil,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tabletorture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_torture2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_statue,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablepoisson,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tableforgeron,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vaisselle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablefruit,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four,1,1)
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four2,1,1)))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablejeu,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_table11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagerevin,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crucifier2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tenteneige2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_brouette,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_machineculture,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debaras8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rock5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockblue7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_rockwhite7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest01,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest02,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest03,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest04,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest05,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_chest06,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wall4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_debris2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_spike3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_train5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_avion5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_turret2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule8,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule10,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule11,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule12,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule13,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule14,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule15,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule16,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule17,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule18,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule19,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule20,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule21,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule23,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule24,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule25,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule26,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicule27,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle28,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle29,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehicle30,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hangar2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_grillage,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tower,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tentemilitary,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_labotaryitem,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barricade9,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummer,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_hummerarmed,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_porche,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_policevehicle,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bus,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_barrel3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_arbre4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble1neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble2neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble22neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble3neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble4neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble5neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble6neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_immeuble7neige,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_etagere3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_ressource3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_bureau,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreau3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_canape,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit1,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit2,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_lit4,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tv,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wc,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_four3,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_evier,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_duvet,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_baignoire,1,1))
   &amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_doorbunker,1,1))
//le 30 / 10
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_frigo, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_barrel3,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lavabo,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banccity2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_banccity3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoirevide,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_arbreneige4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container3,1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_container4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_container5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_container6,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_crategrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_crategrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_crategrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, spr_crategrunge8, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_burreaugrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_armoiregrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_pianogrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_chaisegrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_fueltankgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_generatorgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_structuregrunge,   1,1))
//SL_global_cast_obj( 0, obj_shoppingbasketgrunge,   -1,    1, 1 );
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tobogangrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tobogansnow,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_sofagrunge2, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_sofagrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tabouretgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_balancoiresnow, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_tablegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_tvgrunge,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wcgrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_abribus,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_feucirculation,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_panneau1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_panneau3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_panneau4,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_poteauelectrique,  1,1))

&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_ambulancegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_ambulancegrunge2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_camionretournegrunge, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_busgrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge3, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_camiongrunge5, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_camiongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge4, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge5,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge6, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge7, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge8,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge9,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge10,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge11, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge12, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge13, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge14, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge15, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_vehiculegrunge16,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_vehiculegrunge17,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge3,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge4,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_wagongrunge5,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_wagongrunge6,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc1, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_banc2,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro1,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_cratemetro2,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_lampemetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_entremetro,  1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y, obj_lampadaire, 1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,  obj_plot,   1,1))
&amp;&amp; (not collision_line(x,y,collivision.x,collivision.y,obj_souche,  1,1))
{//alarm[4] = 75
///instance_create ( x+50,y+50,obj_bullet_enemy)



var ex, ey;


ex = instance_nearest(x, y, obj_zombie).x;
ey = instance_nearest(x, y, obj_zombie).y;
cibleoblig = obj_zombie
if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 500 )  {
  cibleoblig = clientboss
ex = clientboss.x;
ey = clientboss.y;
  }else{

  }
  }
  
if obj_zombie.hp &gt; 0 {
aleatgrenade = random(15)
if mode2 = 10 {}else{
with (instance_create(x+lengthdir_x(50,image_angle), y+lengthdir_y(50,image_angle),obj_firebulletenemy))
        {
        idcreateur = 0
        image_angle = other.image_angle;
        }
        
        with (instance_create(x+lengthdir_x(50,image_angle), y+lengthdir_y(50,image_angle),obj_tirfume))
        {
        idcreateur = 0
        image_angle = other.image_angle;
        }
        }
        //
        
          dir = image_angle
        if mode2 = 1 {
        
with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
   dgt = ((1.8+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
        audio_play_sound(snd_m16a1,0,0)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
        
         direction = other.dir;
      
         }}
         //BULLET SHOOTGUN
         if mode2 = 2 {
         audio_play_sound(snd_jackhammer,1,0)
   audio_sound_gain(snd_jackhammer, 0.5, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
   /*
   with (instance_create(x,y,obj_firebulletenemy))
        {
        image_angle = point_direction(x, y, ex, ey);
        }
   */
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
dgt = ((2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
    
   direction = other.dir+7;
   }
   ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
        dgt = ((2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir+4;
   }
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
        dgt = ((2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir;
   }
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
       dgt = ((2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir-4;
   }
   
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
        dgt = ((2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir-7;
   }
   alarm[0] = 90 * fpsmax
       
         
         
         
         }
         
         //BULLET ASSAUT
         if mode2 = 3 {
         with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
        audio_play_sound(snd_m16a1,0,0)
        dgt = ((1.8+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
         direction = other.dir;
        
         }
         
         alarm[0] = 22*fpsmax
         }
         //BULLET RAFALE
           if mode2 = 4 {
           
            audio_play_sound(snd_vector,1,0)
    audio_sound_gain(snd_vector, 1, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
      cibleoblig = other.cibleoblig
       dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
        
         direction = other.dir;
        
         }
         
         tirrafale += 1
         if tirrafale &lt; 3 {
         alarm[0] = 8 * fpsmax
         }else{
         tirrafale = 0
         alarm[0] = 60 * fpsmax
        
         }
         }//mode2 = 4
         
         //BULLET ASSAUT TANKGUYS M 240
         if mode2 = 5 {
        
         audio_play_sound(snd_m240G,1,0)
   audio_sound_gain(snd_m240G, 0.7, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
    cibleoblig = other.cibleoblig
        dgt = ((2.4+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
        
         direction = other.dir+random_range(-4,+4);
        
         }
         
         alarm[0] = 12*fpsmax
         }
         
          //BULLET IA AMELIORER BULLET GUN
         if mode2 = 6 {
         audio_play_sound(snd_coltm15,1,0)
   audio_sound_gain(snd_coltm15, 0.7, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
        cibleoblig = other.cibleoblig
        dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
         direction = other.dir+random_range(-4,+4);
        
         }
         
         alarm[0] = 26+random(2)*fpsmax
         }
         
           //BULLET IA AMELIORER BULLET ASSAUT
         if mode2 = 7 {
         
         audio_play_sound(snd_fnp90,1,0)
   audio_sound_gain(snd_fnp90, 0.7, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
   
   cibleoblig = other.cibleoblig
        dgt = ((1.8+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
        
         direction = other.dir+random_range(-4,+4);
        
         }
         
         alarm[0] = 13+random(1)*fpsmax
         }
         
         
         
           //BULLET IA AMELIORER BULLET SHOOTGUN
         if mode2 = 8 {
         audio_play_sound(snd_jackhammer,1,0)
   audio_sound_gain(snd_jackhammer, 0.7, 0);
        with (instance_create(x, y, obj_bullet_enemy))

   {
    cibleoblig = other.cibleoblig
   /*
   with (instance_create(x,y,obj_firebulletenemy))
        {
        image_angle = point_direction(x, y, ex, ey);
        }
   */
dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
    
   direction = other.dir+7;
   }
   ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
    dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
   direction = other.dir+4;
   }
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
    dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
   direction = other.dir;
   }
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
       dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir-4;
   }
   
   
    ///multi shoot
   
   with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
       dgt = ((2.2+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
   direction = other.dir-7;
   }
 
       
         
         
         
         
         
         alarm[0] = 50+random(2)*fpsmax
         }
         
         
         
         
           //BULLET IA AMELIORER BULLET TANKGUYS
         if mode2 = 9 {
         audio_play_sound(snd_m60,1,0)
   audio_sound_gain(snd_m60, 0.7, 0);
         with (instance_create(x, y, obj_bullet_enemy))

   {
   cibleoblig = other.cibleoblig
        dgt = ((2.5+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
move_towards_point(cibleoblig.x,cibleoblig.y,70/global.varfpsmax)
        
         direction = other.dir+random_range(-4,+4);
        
         }
         
         alarm[0] = 14+random(1)*fpsmax
         }
         
         
         
                    //IA LANCE FLAME
         if mode2 = 10 {
         //audio_play_sound(snd_m60,1,0)
   //audio_sound_gain(snd_m60, 0.7, 0);
   part_particles_create(Sname,x+lengthdir_x(130,image_angle),y+lengthdir_y(130,image_angle),particle1,10);
         with (instance_create(x, y, obj_flammeia)) {
         cibleoblig = other.cibleoblig
         dgt = ((1+other.dgtbonuslow) * (obj_zombie.level+20 / 80)) * (other.statdiffucult)
team = obj_zombie.teamnow
//move_towards_point(obj_zombie.x,obj_zombie.y,70/global.varfpsmax)
 //audio_play_sound(snd_fusil,1,0)
    speed = 35/ global.varfpsmax
    direction = other.dir;
    
    
    }
    alarm[0] = 5*global.varfpsmax
         
        // alarm[0] = 14+random(1)*fpsmax
         }
         
         
         
         
         //FINIBULLET
         
         
        
    
    with (instance_create(x+lengthdir_x(50,image_angle),y+lengthdir_y(50,image_angle),obj_light02)) {
    alarm[0] = 4
   // obj_light02.mode = 15
    //obj_light01.alarm[1] = 5
    }
  
   
   


}
   }

}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 fpsmax = obj_zombie.fpsmax

player_x = obj_zombie.x
player_y = obj_zombie.y

if bosshp &lt; 1 {
instance_destroy()
}
/*
if x = xprevious {
morttest += 1
if morttest &gt; 200 {
instance_destroy();
}
}else{
morttest = 0
}
*/
if alarm[0] &lt; 0 {
alarm[0] = 10
}
  
nouvel_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y) 
    
  


if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
nouvel_angle =  point_direction(x,y,clientboss.x,clientboss.y) 
    
  }
  }


image_angle += sin(degtorad(nouvel_angle - image_angle)) * (8/global.varfpsmax);
/*

///ne pas oublier de rajouter collision avec nvo murs
 fpsmax = obj_zombie.fpsmax
 
if hpmobs &lt; 0 {
instance_destroy()
}
 
  if x&gt;room_width x=room_width; if x&lt;0 x=0; if y&gt;room_height y=room_height; if y&lt;0 y=0;
  

        player_x = obj_zombie.x;
player_y = obj_zombie.y;

if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
          player_x = clientboss.x;
player_y = clientboss.y;  
    
  }
  }
  
  
  
   if (point_distance(x, y, player_x, player_y) &lt; 500 )  
  
 //nvo 
  {
   path_end();
   }else{


//var mx = (obj_zombie.x div 32)*32+16;//
//var my = (obj_zombie.y div 32)*32+16;//+16



var mx = obj_zombie.x ;
var my = obj_zombie.y;


if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
          var mx = clientboss.x;
var my = clientboss.y;  
    
  }
  }


if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
 
image_angle =  point_direction(x,y,obj_zombie.x,obj_zombie.y)

if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
image_angle =  point_direction(x,y,clientboss.x,clientboss.y) 
    
  }
  }

enemyspeed = 9
//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed / fpsmax , path_action_stop, 0);
    alarm[1] = -1
    
    
    
    }
    }
    }
    }
    
    
   
  
    
    
    
    // tir par rapport a la distance

 if (point_distance(x, y, player_x, player_y) &lt; 650) &amp;&amp; alarm[0] &lt; 1  //&amp;&amp; tir = 0 
 
 {
    alarm[0] = 30
    tir = 1
    }
    
    if (point_distance(x, y, player_x, player_y) &gt; 650)  {
    tir = 0
    }else{
    
tir = 1
    }
    
    //fonce sur le joueur
    if fonce =  0 {
    if (point_distance(x, y, player_x, player_y) &lt; 500 )  
  {
  
  var mx = obj_zombie.x+lengthdir_x(40,obj_zombie.image_angle+coterattack) ;
var my = obj_zombie.y+lengthdir_y(40,obj_zombie.image_angle+coterattack);

if instance_exists(oOtherClient){
clientboss = instance_nearest(x,y,oOtherClient)
    if (point_distance(x, y, clientboss.x, clientboss.y) &lt; 300 )  {
  
          var mx = clientboss.x;
var my = clientboss.y;  
    
  }
  }


if (mp_grid_path(global.grid, path, x, y, mx, my ,2)) {


if hpmobs &gt; 0 {
if obj_zombie.hp &gt; 0 {//test pour enemi rode apres mort du joueur
 patrol = 0
image_angle =  point_direction(x,y,player_x,player_y)
enemyspeed = 9
//if  (point_distance(x, y, player_x, player_y) &lt; 150) { } else {
    path_start(path, enemyspeed / fpsmax , path_action_stop, 0);
    alarm[1] = -1
    if alarm[3] &lt; 0 {
    alarm[3] = 100//temps pour parcourir chemin et anim
    }
    }}}
  }
 }
  
  //rester a certaines distance
  


image_angle=point_direction(x, y, player_x, player_y)
//move_outside_all(0,10)
move_bounce_solid(true)
if alarm[2] &lt; 0 {
alarm[2] = 15
}
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_laser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///degat de la balle - dura arme * max dmg ,min dmg

if hpmobs &gt; 0
{ hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 3 * (global.duraarme/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

   //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
    //alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletassaut">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletassautnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bulletnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shootnet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tir de loin

tirdeloin = 1
alarm[6] = 1000
/*
if hpmobs &lt; 0 {


alarm[2] = 1000
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if hpmobs &gt; 0
//{ //hpmobs -= irandom_range(obj_zombie.mindmg * obj_zombie.minarme,obj_zombie.maxdmg * obj_zombie.maxarme) / 5 * obj_zombie.weapon3dmg * (global.duraarme3/2)

part_emitter_region(partblood_sys,partblood_emit,x,x,y,y,1,1);
part_emitter_burst(partblood_sys,partblood_emit,partblood,20);
//}



// Amount of blood
var count = random_range(4, 32);

// Left-mouse click

      //  for (var i = 0; i &lt; count; i++) {
        // Spawn blood within an 8x8 square around the mouse cursor
        instance_create(x , y , oBlood);
  //   }
    
    // Screenshake
   // alarm[0] = 4;
    shake    = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
animwalk += 1
draw_sprite_ext(spr_walk,animwalk,x+1,y+8,0.85,0.85,image_angle,c_white,1)

if mode2 = 1 or mode2 = 6 or mode2 = 12 or mode2 = 13 or mode2 = 14{//GUN
sprite_index = spr_shadowmob
draw_sprite_ext(spr_mobfin1,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =2 or mode2 = 8 {//SHOOTGUN
sprite_index = spr_shadowmob
draw_sprite_ext(spr_mobfin4,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =3 or mode2 = 4 or mode2 = 7{//assaut
sprite_index = spr_shadowmob
draw_sprite_ext(spr_mobfin2,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}
if mode2 =5 or mode2 = 9 or mode2 = 15{//TANKGUYS
sprite_index = spr_shadowmob
draw_sprite_ext(spr_mobfin3,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}

if mode2 = 10{//LANCEFLAMME
sprite_index = spr_shadowmob
draw_sprite_ext(spr_mobfin5,animwalk,x,y,1.1,1.1,image_angle,c_white,1)
}


draw_set_font(fnt_little);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text(x,y-30,bosshp)
draw_text(x,y-50,"net")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
