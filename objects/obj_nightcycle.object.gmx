<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1501</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//SHADER
global.villageoisblabla = 0
global.stalkerblabla = 200
global.varrandomanglevilla = 0
cassettenow = ""

walkienow = ""
walkienowalarm = 400
modeblueprint3 = 1
modeblueprint4 = 1

global.loot = 0
global.lootbox2 = 0
//blabla aleatoire
gridblabla = ds_grid_create(500, 50); 
ds_grid_resize(gridblabla, 500, 50);

ds_grid_clear(gridblabla, "");

alarm[7] = 5



blablaphrases = ""
blablaquestnow = 0
timequest = 0
blablasplit[0] = ""
blablasplit[1] = ""
blablasplit[2] = ""
blablasplit[3] = ""
blablasplit[4] = ""
blablasplit[5] = ""
blablasplit[6] = ""
blablasplit[7] = ""
blablasplit[8] = ""
blablasplit[9] = ""
blablasplit[10] = ""
blablasplit[11] = ""
blablasplit[12] = ""
blablasplit[13] = ""
blablasplit[14] = ""
blablasplit[15] = ""
blablasplit[16] = ""
blablasplit[17] = ""
blablasplit[18] = ""
blablasplit[19] = ""
blablasplit[20] = ""
blablasplit[21] = ""
blablasplit[22] = ""
blablasplit[23] = ""
blablasplit[24] = ""
blablasplit[25] = ""
blablasplit[26] = ""
blablasplit[27] = ""
blablasplit[28] = ""
blablasplit[29] = ""
blablasplit[30] = ""
blablasplit[31] = ""
blablasplit[32] = ""
blablasplit[33] = ""
blablasplit[34] = ""
blablasplit[35] = ""
blablasplit[36] = ""
blablasplit[37] = ""
blablasplit[38] = ""
blablasplit[39] = ""
blablasplit[40] = ""
blablasplit[41] = ""
blablasplit[42] = ""
blablasplit[43] = ""
blablasplit[44] = ""
blablasplit[45] = ""
blablasplit[46] = ""
blablasplit[47] = ""
blablasplit[48] = ""
blablasplit[49] = ""
blablasplit[50] = ""


 var i;
 for (i = 0; i &lt; 101; i += 1)
    {
cassettesave[i] = ""}
splitquest = 0









modeblueprint2 = 1
modeblueprint = ds_grid_create(14, 60); 
ds_grid_resize(modeblueprint, 14, 200);//274 a 338
ds_grid_clear(modeblueprint, "");


//ds_grid_set(modeblueprint,1,1,274)
ds_grid_set(modeblueprint,0,1,280)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,1,6)//pierre

ds_grid_set(modeblueprint,0,2,279)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,2,11)//pierre

ds_grid_set(modeblueprint,0,3,281)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,3,16)//pierre

ds_grid_set(modeblueprint,0,4,278)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,4,21)//pierre

ds_grid_set(modeblueprint,0,5,283)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,5,6)//metal
ds_grid_set(modeblueprint,3,5,6)//metal

ds_grid_set(modeblueprint,0,6,284)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,6,11)//metal
ds_grid_set(modeblueprint,3,6,11)//metal

ds_grid_set(modeblueprint,0,7,285)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,7,16)//metal
ds_grid_set(modeblueprint,3,7,16)//metal

ds_grid_set(modeblueprint,0,8,282)//pierre//numero de l'objet
ds_grid_set(modeblueprint,2,8,21)//metal
ds_grid_set(modeblueprint,3,8,21)//metal

ds_grid_set(modeblueprint,0,9,316)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,9,3)//bois

ds_grid_set(modeblueprint,0,10,322)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,10,4)//bois

ds_grid_set(modeblueprint,0,11,333)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,11,5)//bois

ds_grid_set(modeblueprint,0,12,331)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,12,6)//bois

ds_grid_set(modeblueprint,0,13,330)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,13,7)//bois

ds_grid_set(modeblueprint,0,14,315)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,14,8)//bois

ds_grid_set(modeblueprint,0,15,311)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,15,9)//bois

ds_grid_set(modeblueprint,0,16,310)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,16,10)//bois

ds_grid_set(modeblueprint,0,17,309)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,17,11)//bois

ds_grid_set(modeblueprint,0,18,308)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,18,12)//bois

ds_grid_set(modeblueprint,0,19,307)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,19,13)//bois

ds_grid_set(modeblueprint,0,20,306)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,20,14)//bois

ds_grid_set(modeblueprint,0,21,305)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,21,15)//bois

ds_grid_set(modeblueprint,0,22,304)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,22,16)//bois

ds_grid_set(modeblueprint,0,23,276)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,23,17)//bois

ds_grid_set(modeblueprint,0,24,275)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,24,18)//bois

ds_grid_set(modeblueprint,0,25,277)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,25,19)//bois

ds_grid_set(modeblueprint,0,26,274)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,26,20)//bois

ds_grid_set(modeblueprint,0,27,290)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,27,21)//bois

ds_grid_set(modeblueprint,0,28,321)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,28,18)//bois

ds_grid_set(modeblueprint,0,29,4)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,29,4)//bois
ds_grid_set(modeblueprint,2,29,2)//bois
ds_grid_set(modeblueprint,10,29,3)//bois

ds_grid_set(modeblueprint,0,30,211)//bois//numero de l'objet
ds_grid_set(modeblueprint,5,30,3)//bois
ds_grid_set(modeblueprint,6,30,2)//bois

ds_grid_set(modeblueprint,0,31,209)//bois//numero de l'objet
ds_grid_set(modeblueprint,5,31,4)//bois
ds_grid_set(modeblueprint,6,31,3)//bois

ds_grid_set(modeblueprint,0,32,202)//bois//numero de l'objet
ds_grid_set(modeblueprint,5,32,5)//bois
ds_grid_set(modeblueprint,6,32,3)//bois

ds_grid_set(modeblueprint,0,33,204)//bois//numero de l'objet
ds_grid_set(modeblueprint,5,33,5)//bois
ds_grid_set(modeblueprint,6,33,4)//bois

ds_grid_set(modeblueprint,0,34,203)//bois//numero de l'objet
ds_grid_set(modeblueprint,5,34,6)//bois
ds_grid_set(modeblueprint,6,34,5)//bois

ds_grid_set(modeblueprint,0,35,597)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,35,3)//bois
ds_grid_set(modeblueprint,2,35,2)//bois
ds_grid_set(modeblueprint,12,35,5)//bois

ds_grid_set(modeblueprint,0,36,598)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,36,4)//bois
ds_grid_set(modeblueprint,2,36,3)//bois
ds_grid_set(modeblueprint,12,36,5)//bois

ds_grid_set(modeblueprint,0,37,599)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,37,5)//bois
ds_grid_set(modeblueprint,2,37,3)//bois
ds_grid_set(modeblueprint,12,37,6)//bois

ds_grid_set(modeblueprint,0,38,450)//bois//numero de l'objet
ds_grid_set(modeblueprint,13,38,16)//bois
ds_grid_set(modeblueprint,7,38,21)//bois

ds_grid_set(modeblueprint,0,39,5)//bois//numero de l'objet
ds_grid_set(modeblueprint,3,39,5)//bois
ds_grid_set(modeblueprint,4,39,10)//bois
ds_grid_set(modeblueprint,8,39,8)//bois
ds_grid_set(modeblueprint,9,39,4)//bois

ds_grid_set(modeblueprint,0,40,6)//bois//numero de l'objet
ds_grid_set(modeblueprint,3,40,5)//bois
ds_grid_set(modeblueprint,5,40,10)//bois
ds_grid_set(modeblueprint,11,40,3)//bois
ds_grid_set(modeblueprint,6,40,3)//bois

ds_grid_set(modeblueprint,0,40,338)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,40,11)//bois
ds_grid_set(modeblueprint,3,40,11)//bois
ds_grid_set(modeblueprint,4,40,11)//bois

ds_grid_set(modeblueprint,0,41,337)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,41,13)//bois
ds_grid_set(modeblueprint,3,41,13)//bois
ds_grid_set(modeblueprint,4,41,13)//bois

ds_grid_set(modeblueprint,0,42,336)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,42,14)//bois
ds_grid_set(modeblueprint,3,42,14)//bois
ds_grid_set(modeblueprint,4,42,14)//bois

ds_grid_set(modeblueprint,0,43,335)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,43,15)//bois
ds_grid_set(modeblueprint,3,43,15)//bois
ds_grid_set(modeblueprint,4,43,15)//bois

ds_grid_set(modeblueprint,0,44,334)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,44,18)//bois
ds_grid_set(modeblueprint,3,44,18)//bois
ds_grid_set(modeblueprint,4,44,18)//bois

ds_grid_set(modeblueprint,0,45,323)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,45,18)//bois
ds_grid_set(modeblueprint,5,45,18)//bois

ds_grid_set(modeblueprint,0,46,312)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,46,21)//bois
ds_grid_set(modeblueprint,5,46,21)//bois

ds_grid_set(modeblueprint,0,47,329)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,47,6)//bois
ds_grid_set(modeblueprint,4,47,26)//bois
ds_grid_set(modeblueprint,9,47,21)//bois

ds_grid_set(modeblueprint,0,48,286)//bois//numero de l'objet
ds_grid_set(modeblueprint,4,48,21)//bois
ds_grid_set(modeblueprint,2,48,8)//bois
ds_grid_set(modeblueprint,3,48,21)//bois

ds_grid_set(modeblueprint,0,49,289)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,49,41)//bois
ds_grid_set(modeblueprint,9,49,11)//bois
ds_grid_set(modeblueprint,7,49,26)//bois

ds_grid_set(modeblueprint,0,50,297)//bois//numero de l'objet
ds_grid_set(modeblueprint,10,50,51)//bois
ds_grid_set(modeblueprint,2,50,16)//bois
ds_grid_set(modeblueprint,4,50,36)//bois
ds_grid_set(modeblueprint,7,50,41)//bois

ds_grid_set(modeblueprint,0,51,292)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,51,61)//bois
ds_grid_set(modeblueprint,9,51,26)//bois
ds_grid_set(modeblueprint,7,51,41)//bois

ds_grid_set(modeblueprint,0,52,295)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,52,71)//bois
ds_grid_set(modeblueprint,9,52,36)//bois
ds_grid_set(modeblueprint,7,52,46)//bois
ds_grid_set(modeblueprint,8,52,51)//bois

ds_grid_set(modeblueprint,0,53,298)//bois//numero de l'objet
ds_grid_set(modeblueprint,10,53,80)//bois
ds_grid_set(modeblueprint,9,53,45)//bois
ds_grid_set(modeblueprint,1,53,55)//bois
ds_grid_set(modeblueprint,7,53,59)//bois

ds_grid_set(modeblueprint,0,54,288)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,54,86)//bois
ds_grid_set(modeblueprint,2,54,56)//bois
ds_grid_set(modeblueprint,7,54,71)//bois
ds_grid_set(modeblueprint,8,54,63)//bois
ds_grid_set(modeblueprint,9,54,21)//bois

ds_grid_set(modeblueprint,0,55,287)//bois//numero de l'objet
ds_grid_set(modeblueprint,1,55,91)//bois
ds_grid_set(modeblueprint,2,55,66)//bois
ds_grid_set(modeblueprint,7,55,86)//bois
ds_grid_set(modeblueprint,8,55,66)//bois
ds_grid_set(modeblueprint,9,55,21)//bois

ds_grid_set(modeblueprint,0,56,299)//bois//numero de l'objet
ds_grid_set(modeblueprint,10,56,96)//bois
ds_grid_set(modeblueprint,2,56,76)//bois
ds_grid_set(modeblueprint,13,56,91)//bois
ds_grid_set(modeblueprint,7,56,71)//bois

ds_grid_set(modeblueprint,0,57,296)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,57,101)//bois
ds_grid_set(modeblueprint,9,57,106)//bois
ds_grid_set(modeblueprint,7,57,126)//bois
ds_grid_set(modeblueprint,8,57,76)//bois

ds_grid_set(modeblueprint,0,58,293)//bois//numero de l'objet
ds_grid_set(modeblueprint,2,58,126)//bois
ds_grid_set(modeblueprint,9,58,116)//bois
ds_grid_set(modeblueprint,13,58,131)//bois
ds_grid_set(modeblueprint,7,58,81)//bois
ds_grid_set(modeblueprint,8,58,96)//bois


//COCKTAILS //172 //186
ds_grid_set(modeblueprint,0,60,193)//COCKTAILS
ds_grid_set(modeblueprint,1,60,3)//bois
ds_grid_set(modeblueprint,12,60,2)//bois
ds_grid_set(modeblueprint,13,60,2)//bois
ds_grid_set(modeblueprint,14,60,2)//bois
ds_grid_set(modeblueprint,13,60,6)//bois

ds_grid_set(modeblueprint,0,61,187)//COCKTAILS
ds_grid_set(modeblueprint,1,61,3)//bois
ds_grid_set(modeblueprint,2,61,2)//bois


ds_grid_set(modeblueprint,0,62,188)//COCKTAILS
ds_grid_set(modeblueprint,3,62,2)//bois
ds_grid_set(modeblueprint,4,62,4)//bois
ds_grid_set(modeblueprint,5,62,1)//bois
ds_grid_set(modeblueprint,6,62,1)//bois

ds_grid_set(modeblueprint,0,63,189)//COCKTAILS
ds_grid_set(modeblueprint,7,63,4)//bois
ds_grid_set(modeblueprint,8,63,3)//bois
ds_grid_set(modeblueprint,6,63,2)//bois


ds_grid_set(modeblueprint,0,64,190)//COCKTAILS
ds_grid_set(modeblueprint,4,64,4)//bois
ds_grid_set(modeblueprint,15,64,2)//bois
ds_grid_set(modeblueprint,6,64,2)//bois


ds_grid_set(modeblueprint,0,65,191)//COCKTAILS
ds_grid_set(modeblueprint,7,65,4)//bois
ds_grid_set(modeblueprint,5,65,2)//bois
ds_grid_set(modeblueprint,6,65,3)//bois
ds_grid_set(modeblueprint,9,65,4)//bois


ds_grid_set(modeblueprint,0,66,192)//COCKTAILS
ds_grid_set(modeblueprint,7,66,4)//bois
ds_grid_set(modeblueprint,10,66,2)//bois
ds_grid_set(modeblueprint,11,66,3)//bois


//BOUFFE //172 //186
ds_grid_set(modeblueprint,0,100,400)//
ds_grid_set(modeblueprint,1,100,3)//bois
ds_grid_set(modeblueprint,12,100,2)//bois
ds_grid_set(modeblueprint,13,100,2)//bois
ds_grid_set(modeblueprint,14,100,2)//bois
ds_grid_set(modeblueprint,13,100,6)//bois

ds_grid_set(modeblueprint,0,101,400)//
ds_grid_set(modeblueprint,1,101,3)//bois
ds_grid_set(modeblueprint,12,101,2)//bois
ds_grid_set(modeblueprint,13,101,2)//bois
ds_grid_set(modeblueprint,14,101,2)//bois
ds_grid_set(modeblueprint,13,101,6)//bois




global.arbreselection = 0



var i;
 for (i = 0; i &lt; 5000; i += 1)
    {
    arbretype[i] = choose(1,1,1,1,1,1,1,1,1,1,1,2,3,4)
    }


    
   
//u_resolution = shader_get_uniform(sh_blur2,"iResolution");
alphachat = 0
chatvar = ""


alphahud1 = 0
alphahud2 = 0
alphahud3 = 0
alphahud4 = 0

alphatxtroom = 1
view2 = 0
txtroom = ""
colorreloadbar = c_white

timenowreloadbar = 0


global.retmoisala = 0
movehud = -300 // 5
movehud2 = 1400 //1100
movehud3 = -500
movehud4 = 1300

modecolor = 1

statcolor0 = make_color_rgb(41,31,30)//fond
statcolor1 = make_color_rgb(214,204,199)//endu blanc
statcolor2 = make_color_rgb(151,45,4)//endu rouge
statcolor3 = make_color_rgb(214,204,199)//froid blanc
statcolor4 = make_color_rgb(59,192,225)//froid bleux
statcolor5 = make_color_rgb(115,9,11)//vie rouge
statcolor6 = make_color_rgb(80,42,29)//faim
statcolor7 = make_color_rgb(75,127,161)//soif
statcolor8 = make_color_rgb(148,80,30)//battery
//statcolor9 = make_color_rgb(108,101,99)//endu blanc

//cinder particle 

partcinder_sys = part_system_create();

partcinder = part_type_create();
part_type_shape(partcinder,pt_shape_flare);
part_type_size(partcinder,0.05,0.3,0,0);
part_type_colour3(partcinder,c_blue,c_orange,c_red);
part_type_alpha3(partcinder,1,1,1);
part_type_speed(partcinder,3,6,0,0);
part_type_direction(partcinder,-1000,1000,-1,0);
part_type_orientation(partcinder,300,360,0,2000,1);
/*part_type_direction(partcinder,-200,200,-2,0);
part_type_orientation(partcinder,-100,559,0,100,1);*/
part_type_blend(partcinder,1);
part_type_life(partcinder,3,64);



//particle emiter
//partfire_emit = part_emitter_create(partfire_sys);
partcinder_emit = part_emitter_create(partcinder_sys);
//part_emitter_region(partfire_sys,partfire_emit,x-13,x+13,y-13,y+13,ps_shape_ellipse,ps_distr_linear);
//part_system_depth(partfire,-900)
part_system_depth(partcinder,-900)


//vertstiler  colortext3 = make_color_rgb(61,66,27)
//colortext3 = make_color_rgb(66,55,35)//marron foncer
//colortext3 = make_color_rgb(108,101,99)//gris styler
//colortext3 = make_color_rgb(40,40,40)//noir sombre
//colortext3 = make_color_rgb(59,59,59)//noir clair
colortext3 = make_color_rgb(148,132,128)

colortext2 = make_color_rgb(150,135,131)

nbrminenow = 1


pourcentexoprotectfinal = 1000
pourcentexodurafinal = 10
/*

surface_reset_target();


//set variables
light = 0
jourtombe = 1
daysurvive = 0
alpha = 0;
torch = 0
ini_open("savefile.ini")
alpha = ini_read_real ("player","alpha",1);
daysurvive = ini_read_real ("player","daysurvive",0);
jourtombe = ini_read_real ("player","jourtombe",1);
ini_close();
daylength = 0.1;
nightlenght = 0.1;
if jourtombe = 1 {
alarm[0] = 20;
}

if jourtombe = 0 {
alarm[1] = 20;
}

//set surface
global.nightcyclesurf = surface_create(room_width, room_height);
//surface_set_target (global.nightcyclesurf);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///global.supercado
global.supercado = ""
global.supercado2 = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if global.language = 1 {
    
    //surprise
blabla[1] = "Hé toi !"
blabla[2] = "Ne bouge pas !"
blabla[3] = "Pas un geste !"
blabla[4] = "Ne bouge plus !"
blabla[5] = "Je te vois !"
blabla[6] = "Encore toi !!!"
blabla[7] = "Maudit !"
blabla[8] = "Stop !"
blabla[9] = "Ennemi !"
blabla[10] = "Ennemi !"
//who are u //why are u here
blabla[11] = "Qui vous a permis de venir dans notre région"
blabla[12] = "C'est dangereux d'y aller seul !"
blabla[13] = "Vous êtes au mauvais endroit"
blabla[14] = "Que fais-tu ici ?!"
blabla[15] = "Tu veux te battre ?"
blabla[16] = "Ne t'approche pas !"
blabla[17] = "Tu vas avoir des problèmes"
blabla[18] = "Baissez votre arme"
blabla[19] = "Vous êtes des lâches"
blabla[20] = "Je n'aime pas les gars comme toi"
// Je reviens tout de suite
blabla[21] = "sort de mon champ de vision"
blabla[22] = "Tourne tes talons"
blabla[23] = "Rentre chez toi si tu ne veux pas que je me fâche."
blabla[24] = "Tu n'as rien à faire ici."
blabla[25] = "Vous me faites perdre mon temps."
blabla[26] = "Je vais te tuer"
blabla[27] = "Tu ferais mieux de sortir d'ici."
blabla[28] = "Marche arrière maintenant"
blabla[29] = "Je vais te tuer."
blabla[30] = "Dernier avertissement. Va-t'en d'ici."
// déplacez maintenant ou mourez
blabla[31] = "Bougez maintenant ou mourez"
blabla[32] = "Tu ferais mieux de partir très vite."
blabla[33] = "Je m'impatiente"
blabla[34] = "Je t'aurais prévenu"
blabla[35] = "Plus de pitié"
blabla[36] = "Fuis pauvre fou"
blabla[37] = "Je vais me fâcher."
blabla[38] = "tu vas souffrir"
blabla[39] = "Tu es mort."
blabla[40] = "J'ai déjà attendu trop longtemps"

//STALKER
//surprise
blabla[41] = "Reste tranquille !"
blabla[42] = "Pas de mouvements brusques."
blabla[43] = "Que personne ne bouge"
blabla[44] = "Par les feux de l'enfer"
blabla[45] = "Retourne sur ton territoire."
blabla[46] = "Fuis et rien ne t'arrivera"
blabla[47] = "Ce n'est pas la première fois que je te tue."
blabla[48] = "Stop !"
blabla[49] = "Faucheur ! !"
blabla[50] = "Nihiliste !"
//who are u //why are u here
blabla[51] = "Nous sommes dans une impasse"
blabla[52] = "Ne fais rien de stupide."
blabla[53] = "Je ne reculerais pas"
blabla[54] = "Tu ne peux pas me faire partir."
blabla[55] = "La peur est partie avec la mort"
blabla[56] = "Ne t'approche pas"
blabla[57] = "Tu ne vaincras pas"
blabla[58] = "Ton peuple est dangereux"
blabla[59] = ""
blabla[60] = "Tu n'as pas le droit de me dire quoi faire."
// Je reviens tout de suite
blabla[61] = "Il n'y a rien qui puisse me faire dévier de mon chemin"
blabla[62] = "Qu'est-ce que tu vas faire ?"
blabla[63] = " Beaucoup ont essayé "
blabla[64] = "Je ne laisserais pas cela arriver."
blabla[65] = "Tu ne t'en sortiras pas si facilement."
blabla[66] = "Tu pourrais être déçu."
blabla[67] = "Nous protégeons ceux qui ne peuvent être protégés"
blabla[68] = "Marche arrière maintenant"
blabla[69] = "Tu vas payer pour tes erreurs"
blabla[70] = "Je resterais courageux"
// déplacez maintenant ou mourez
blabla[71] = "Qu'il en soit ainsi"
blabla[72] = "Que la mort te soit douce"
blabla[73] = "C'est idiot. Personne ne sortira."
blabla[74] = "Rien ne nous arrêtera"
blabla[75] = "Vous n'avez jamais entendu parler de clémence ?"
blabla[76] = "As-tu déjà montré du respect ?"
blabla[77] = "Ça ne durera pas longtemps"
blabla[78] = "La mort est miséricordieuse"
blabla[79] = "Rien ne saurait mourrir"
blabla[80] = "Seul le temps nous jugera"


    
    }else{
//surface_create(view_wview,view_hview);
//application_surface_draw_enable(false);
//PRAWLER
//surprise
blabla[1] = "Hey you !"
blabla[2] = "Dont move !"
blabla[3] = "Freeze !"
blabla[4] = "Don't make any more moves !"
blabla[5] = "I see you !"
blabla[6] = "You again !!"
blabla[7] = "Damn !"
blabla[8] = "Stop !"
blabla[9] = "Enemy !"
blabla[10] = "Enemy !"
//who are u //why are u here
blabla[11] = "Who allowed you to come into our area"
blabla[12] = "It's Dangerous To Go Alone !"
blabla[13] = "You're in the wrong place"
blabla[14] = "What are you doing here ?!"
blabla[15] = "You want to fight ?"
blabla[16] = "Don't come any closer !"
blabla[17] = "You're gonna get in trouble"
blabla[18] = "Lower your weapon"
blabla[19] = "You are cowards"
blabla[20] = "I don't like guys like you"
//just come back
blabla[21] = "Moves out of my field of vision"
blabla[22] = "Turn your heels"
blabla[23] = "Go home if you don't want me to get mad."
blabla[24] = "You have nothing to do here."
blabla[25] = "You're wasting my time."
blabla[26] = "I'm gonna kill you"
blabla[27] = "you better get out of here."
blabla[28] = "Reverse now"
blabla[29] = "I'm gonna shoot you."
blabla[30] = "Last warning. Get out of here."
//move now or die
blabla[31] = "Move now or die"
blabla[32] = "You'd better be gone real quick."
blabla[33] = "I'm getting impatient"
blabla[34] = "I would have warned you"
blabla[35] = "No more pity"
blabla[36] = "Fly poor fools"
blabla[37] = "I'm gonna get mad."
blabla[38] = "you're gonna suffer"
blabla[39] = "You're dead."
blabla[40] = "I've already waited too long"



//STALKER
//surprise
blabla[41] = "Stay still !"
blabla[42] = "No sudden moves."
blabla[43] = "That no one moves"
blabla[44] = "By the fires of hell"
blabla[45] = "Get back on your turf."
blabla[46] = "Run away and nothing will happen to you"
blabla[47] = "This isn't the first time I've killed you."
blabla[48] = "Stop !"
blabla[49] = "Reaper ! !"
blabla[50] = "Nihilistic !"
//who are u //why are u here
blabla[51] = "Here we are at a dead end"
blabla[52] = "Don't do anything stupid."
blabla[53] = "I wouldn't back down"
blabla[54] = "You can't get me to leave."
blabla[55] = "Fear went away with death"
blabla[56] = "Stay away"
blabla[57] = "You will not defeat"
blabla[58] = "Your people are dangerous"
blabla[59] = ""
blabla[60] = "You have no right to tell me what to do."
//just come back
blabla[61] = "There's nothing that's gonna make me deviate from my path"
blabla[62] = "What are you gonna do?"
blabla[63] = "Many have tried "
blabla[64] = "I wouldn't let that happen."
blabla[65] = "You won't get off that easy."
blabla[66] = "You might be disappointed."
blabla[67] = "We protect those who cannot be protected"
blabla[68] = "Reverse now"
blabla[69] = "You're gonna pay for your mistakes"
blabla[70] = "I would remain brave"
//move now or die
blabla[71] = "So be it"
blabla[72] = "That death be sweet to you"
blabla[73] = "That's silly. No one's getting out."
blabla[74] = "Nothing will stop us"
blabla[75] = "So you've never heard of clemency?"
blabla[76] = "Have you ever shown any respect?"
blabla[77] = "It won't last long"
blabla[78] = "Death is merciful"
blabla[79] = "Nothing would die"
blabla[80] = "Only time will judge us"

}
scr_blablapnj();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movehud2 droite
if movehud2 &gt; 1100 {
movehud2 -= 15
movehud4 -= 15
alarm[5] = 1
}



/*

light = 1

if jourtombe = 1 {
alarm[0] = 200;
}

if jourtombe = 0 {
alarm[1] = 200;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if light = 1 {
torch = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if light = 1 {
torch = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movehud gauche
if movehud &lt; 5 {
movehud += 15
movehud3 += 20
alarm[1] = 1
}





























/*

if obj_zombie.lowgpu = 1 {
if alpha &gt; 0.0 
{
alpha -= 0.1
alarm[1] = 10
jourtombe = 0

}
else if alpha &lt;= 0
{
jourtombe = 1
daysurvive +=1
ini_open("savefile.ini")
    ini_write_real("player","daysurvive",daysurvive);
    ini_close();
//durée du jour
alarm[0] = 70;

}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.retmoisala = 0 {
//instance_create(view_xview ,view_yview ,obj_menuleft)
//instance_create(view_xview +600,view_yview ,obj_menuright)
global.retmoisala = 1
}

















/*

if obj_zombie.lowgpu = 1 {
if alpha &lt; 0.95 
{
alpha += 0.1
alarm[0] = 10
jourtombe = 1

}
else if alpha &gt;=0.95
{
jourtombe = 0
//durée de la nuit noir
alarm[1] = 50;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///controller HUD ET REPOP ANIM
/*pourcenthp = obj_zombie.hp * 100
pourcenthpfinal = pourcenthp / obj_zombie.maxhp*/

if instance_exists(obj_repop){with(obj_repop){
if ephemere = 0 {
image_alpha -= 0.01
image_xscale = 0
image_yscale = image_xscale
if image_alpha &lt; 0 {instance_destroy();}
part_type_alpha1(other.partcinder, image_alpha); 
part_type_colour3(other.partcinder,colornano1,colornano2,colornano3);
part_emitter_region(other.partcinder_sys,other.partcinder_emit,x-50,x+50,y-50,y+50,ps_shape_ellipse,ps_distr_linear);
part_emitter_burst(other.partcinder_sys,other.partcinder_emit,other.partcinder,3);
part_system_depth(other.partcinder,0)
part_type_speed(other.partcinder,0.1/global.varfpsmax,1/global.varfpsmax,0,0);
}}}

if instance_exists(obj_repopstalker){with(obj_repopstalker){
image_alpha -= 0.01
image_xscale = 0
image_yscale = image_xscale
if image_alpha &lt; 0 {instance_destroy();}
part_type_alpha1(other.partcinder, image_alpha); 
part_type_colour3(other.partcinder,colornano1,colornano2,colornano3);
part_emitter_region(other.partcinder_sys,other.partcinder_emit,x-50,x+50,y-50,y+50,ps_shape_ellipse,ps_distr_linear);
part_emitter_burst(other.partcinder_sys,other.partcinder_emit,other.partcinder,3);
part_system_depth(other.partcinder,0)
part_type_speed(other.partcinder,0.1/global.varfpsmax,1/global.varfpsmax,0,0);
}}

if point_distance(mouse_x,mouse_y,view_xview+view_wview-20,view_yview+view_hview-20) &lt; 20 {
if keyboard_check_pressed(ord('E')) {if instance_exists(obj_hudtuto){if obj_hudtuto.stepnow = 3 {obj_hudtuto.stepnow = 4 }}
if global.hudactif1 = 0 {global.hudactif1 = 1}else{global.hudactif1 = 0}}
if alphahud1 &lt; 3 {alphahud1 += 0.5}}

if point_distance(mouse_x,mouse_y,view_xview+view_wview-20,view_yview+20) &lt; 20 {
if keyboard_check_pressed(ord('E')) {if instance_exists(obj_hudtuto){if obj_hudtuto.stepnow = 5 {obj_hudtuto.stepnow = 6 }}
if global.hudactif2 = 0 {global.hudactif2 = 1}else{global.hudactif2 = 0}}
if alphahud2 &lt; 3 {alphahud2 += 0.5}}

if point_distance(mouse_x,mouse_y,view_xview+20,view_yview+view_hview-20) &lt; 20 {
if keyboard_check_pressed(ord('E')) {if instance_exists(obj_hudtuto){if obj_hudtuto.stepnow = 6 {obj_hudtuto.stepnow = 7 }}
if global.hudactif3 = 0 {global.hudactif3 = 1}else{global.hudactif3 = 0}}
if alphahud3 &lt; 3 {alphahud3 += 0.5}}

if point_distance(mouse_x,mouse_y,view_xview+20,view_yview+20) &lt; 20 {
if keyboard_check_pressed(ord('E')) {if instance_exists(obj_hudtuto){if obj_hudtuto.stepnow = 4 {obj_hudtuto.stepnow = 5 }}
if obj_view.perma = 0 {obj_view.perma = 1}else{obj_view.perma = 0}}
}

if alphahud1 &gt; 0 {alphahud1 -= 0.01}//en bas a droite
if alphahud2 &gt; 0 {alphahud2 -= 0.01}//en haut a droite
if alphahud3 &gt; 0 {alphahud3 -= 0.01}//en bas a gauche
if alphahud4 &gt; 0 {alphahud4 -= 0.01}

pourcenthp = obj_zombie.hpvar9 * 100
pourcenthpfinal = pourcenthp / obj_zombie.maxhp
pourcenthp2 = obj_zombie.hp * 100
pourcenthpfinal2 = pourcenthp2 / obj_zombie.maxhp

key_hud = keyboard_check(ord("W"));
key_hud2 = keyboard_check(ord("C"));
if obj_zombie.chatlaunch = 0 &amp;&amp; obj_buttonguilde.chatlaunch2 = 0{
if not(key_hud) &amp;&amp; not(key_hud2) {
movehud = -200 // 5
movehud2 = 1400 //1100
movehud3 = -500
movehud4 = 1300

}
}
if (key_hud) {
alarm[1] = 1
alarm[5] = 1
}



if (key_hud2) {
alarm[1] = 1
alarm[5] = 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if modeblueprint2 &lt; 58 {modeblueprint2 += 1}
if modeblueprint3 &lt; 7 {modeblueprint3 += 1}
if modeblueprint4 &lt; 22 {modeblueprint4 += 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if modeblueprint2 &gt; 1 {modeblueprint2 -= 1}
if modeblueprint3 &gt; 1 {modeblueprint3 -= 1}
if modeblueprint4 &gt; 1 {modeblueprint4 -= 1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[9] = 5
draw_clear_alpha( c_white, 0);
global.arbreselection = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LIEU PAR ROOM
//le prix de certains objet augmente selon lieux ,ds obj_invbuttondraw l.455
//global.villageoisblabla = 0
if global.villageoisblabla &gt;= 30 {//200
global.villageoisblabla = 0
}
if global.stalkerblabla &gt;= 220 {//299
global.stalkerblabla = 200
}

scr_map(room);

alphatxtroom = 1
alarm[4] = 400*global.varfpsmax
alarm[9] = 5

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(partcinder);
part_emitter_destroy(partcinder_sys, partcinder_emit);
part_system_destroy(partcinder_sys);
ds_grid_clear(gridblabla, -1);
ds_grid_destroy(gridblabla);
ds_grid_clear(modeblueprint, -1);
ds_grid_destroy(modeblueprint);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EVENEMENT ALERTE
//draw_set_alpha(1)
//obj_zombie.level = 50
if room = Menu or room = room34 or room = room161 {

}else{ 




//display_set_gui_size(1024, 768); 
draw_set_valign(54)



if global.hudactif1 = 1 { alphahud1 = 1}
if global.hudactif2 = 1 { alphahud2 = 1}
if global.hudactif3 = 1 { alphahud3 = 1}
if global.hudactif4 = 1 { alphahud4 = 1}


//walkie en fin de mission ,relance une mission ,ne s affiche qu'une fois ,sauf si on fais une touche "rappel"
if walkienow = "" {


//CASSETTE
if cassettenow = "" {}else{//show_message(cassettenow)


blablaquestnow = 0

//if point_distance(x,y,mouse_x,mouse_y) &lt; 70 {
blablaquestnow = 1
image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
varstr = cassettenow
string_split2(varstr)
strlgt = string_length(blablasplit[splitquest])
if blablasplit[splitquest] = "" {}else{
if timequest &lt; strlgt*4 {timequest += 1}else{timequest = 0;splitquest += 1 }}
blablaphrases = blablasplit[splitquest]
if blablaphrases = "" {if walkienowalarm &gt; 0 {walkienowalarm -= 1}else{splitquest = 0 ;timequest = 0;walkienowalarm = 400;cassettenow = ""}}
//}



draw_set_font(fnt_little);
draw_set_halign(fa_left);
draw_set_color(colortext3)
draw_set_valign(fa_middle);
draw_text_outlinetaille( view_xview+90, view_yview+120+200, blablaphrases,c_black,390,fa_middle);
draw_sprite_ext(spr_walkie,0,view_xview+40,view_yview+150+180,1,1,0,colortext3,0.5)}



}else{
draw_set_font(fnt_little);
draw_set_halign(fa_left);
draw_set_color(colortext3);
draw_set_valign(fa_middle);


blablaquestnow = 0

if walkienow = "" {}else{//point_distance(x,y,mouse_x,mouse_y) &lt; 70 {
blablaquestnow = 1
image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
varstr = walkienow
string_split2(varstr)
strlgt = string_length(blablasplit[splitquest])
if blablasplit[splitquest] = "" {}else{
if timequest &lt; strlgt*4 {timequest += 1}else{timequest = 0;splitquest += 1 }}
blablaphrases = blablasplit[splitquest]
if blablaphrases = "" {if walkienowalarm &gt; 0 {walkienowalarm -= 1}else{splitquest = 0 ;timequest = 0;walkienowalarm = 400;walkienow = ""}
}
}




draw_text_outlinetaille(view_xview+90, view_yview+120+200, blablaphrases,c_black,400,fa_middle);
draw_sprite_ext(spr_walkie,0,view_xview+40,view_yview+150+180,1,1,0,colortext3,0.5)}










scr_trainhud();

if obj_economie.chatvisible = chatvar {}else{
alarm[6] = 500
chatvar = obj_economie.chatvisible}

if alarm[6] &gt; 0 {
draw_set_color(c_black);
draw_set_alpha(alphachat);
var x1,x2,y1,y2;



x1 = view_xview[0];
x2 = x1 + 300;//view_wview[0];
y1 = view_yview[0]+320;//370
y2 = y1 +290//-200 + (string_height(obj_economie.chatvisible)*3);//290
draw_rectangle(x1,y1,x2,y2,0);

draw_set_font(fnt_rlylittle);
if obj_economie.modechat = 1 { draw_set_color(colortext2);}
if obj_economie.modechat = 2 { draw_set_color(c_teal);}
if obj_economie.modechat = 3 { draw_set_color(c_green);}
if obj_economie.modechat = 4 { draw_set_color(c_navy);}
if obj_economie.modechat = 5 { draw_set_color(c_white);}
if obj_economie.modechat = 6 { draw_set_color(c_olive);}
draw_set_halign(300);
draw_set_valign(54);

if alphachat &gt; 0 {draw_set_alpha(1);
//if modechat = 0 {draw_text_ext(view_xview +20 ,view_yview +370 ,obj_economie.chatvisible,10,300)}
if obj_economie.modechat = 1 {draw_text_ext(view_xview +20 ,view_yview +320 ,"SERVER CHANNEL :  &lt; /all &gt;",10,300)}
if obj_economie.modechat = 2 {draw_text_ext(view_xview +20 ,view_yview +320 ,"TEAM CHANNEL :  &lt; /grp &gt;",10,300)}
if obj_economie.modechat = 3 {draw_text_ext(view_xview +20 ,view_yview +320 ,"JOBS CHANNEL :  &lt; /job &gt;",10,300)}
if obj_economie.modechat = 4 {draw_text_ext(view_xview +20 ,view_yview +320 ,"GUILDS CHANNEL :  &lt; /gld &gt;",10,300)}
if obj_economie.modechat = 5 {draw_text_ext(view_xview +20 ,view_yview +320 ,"QUEST HISTORY : ",10,300)}
if obj_economie.modechat = 6 {draw_text_ext(view_xview +20 ,view_yview +320 ,"STATISTICS : ",10,300)}
draw_text_ext(view_xview +20 ,view_yview +345 ,obj_economie.chatvisible,14,265)//300
}
alphachat = 0.4}else{
if alphachat &gt; 0 {alphachat -= 0.01}}
draw_set_alpha(1);


if instance_exists(obj_network){
if obj_network.hpmobsltnt &gt; 0 {

if obj_network.mode2ltnt = 5 {
draw_set_font(fnt_little);
draw_set_halign(fa_left);
draw_sprite_ext(spr_cadretext,0,view_xview+105,view_yview+172,0.25,0.18,0,c_white,0.7)
draw_text(view_xview+5 ,view_yview + 162,"Event in south field")
}

if obj_network.mode2ltnt = 3 {
draw_set_font(fnt_little);
draw_set_halign(fa_left);
draw_sprite_ext(spr_cadretext,0,view_xview+105,view_yview+172,0.25,0.18,0,c_white,0.7)
draw_text(view_xview+5 ,view_yview + 162,"Event in village")
}}}


//




//minage

if instance_exists(obj_fer2){
minageobjet = instance_nearest(obj_zombie.x,obj_zombie.y,obj_fer2)
if instance_exists(minageobjet){
if point_distance(minageobjet.x,minageobjet.y,obj_zombie.x,obj_zombie.y) &lt; 200 {
with(minageobjet){
if loadinglaunch = 1 {
draw_healthbar(obj_zombie.x-45 ,obj_zombie.y + 60,obj_zombie.x+45,obj_zombie.y + 62,loading,statcolor0,colorreloadbar,colorreloadbar,0,true,false)
}}}}}

if instance_exists(obj_arbreneige){
minageobjet = instance_nearest(obj_zombie.x,obj_zombie.y,obj_arbreneige)
if instance_exists(minageobjet){
if point_distance(minageobjet.x,minageobjet.y,obj_zombie.x,obj_zombie.y) &lt; 200 {
with(minageobjet){
if loadinglaunch = 1 {
draw_healthbar(obj_zombie.x-45 ,obj_zombie.y + 60,obj_zombie.x+45,obj_zombie.y + 62,loading,statcolor0,colorreloadbar,colorreloadbar,0,true,false)
}}}}}



 
/// hHUD


//RELOAD WEAPON
if view2 = 0 /// CHANGEMENT DE VIEW
{
if global.hud2 = 1 {if alphahud1 &gt; 0 &amp;&amp; obj_zombie.mainnue = 0 {
draw_sprite_ext( spr_fondweapon, image_index, view_xview+ 1366, view_yview+ 768, 1, 1, 0, c_white, alphahud1 );
}}


if obj_zombie.superweapon = 0 {//SUPER WEAPON
if obj_cursor.alarm[5] &gt; 0 {
timenowreloadbar = ( obj_cursor.alarm[5] / obj_zombie.timereloadbar ) * 100

if obj_cursor.alarm[5] &lt; (obj_zombie.timereloadbar / 5) *2{

//enrayer rechargement
with(obj_zombie){
key_reload = keyboard_check_pressed(ord("R"));
if(key_reload) {
if shootgun = 1 {
if not audio_is_playing(snd_reloadshootgun1){
audio_play_sound(snd_reloadshootgun1,0,0)}
    obj_zombie.animreload = 2;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
     }
if fusil = 1 {
if not audio_is_playing(snd_reloadgun){
audio_play_sound(snd_reloadgun,0,0)}
     obj_zombie.animreload = 1;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
}   
if assaut = 1 {
if not audio_is_playing(snd_reloadassaut){
audio_play_sound(snd_reloadassaut,0,0)}
     obj_zombie.animreload = 3;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
}  
     
     
timereloadbar = (140 * weapon1reload)*global.varfpsmax//temps de rechargement
timereloadbar2 = timereloadbar/5
obj_cursor.alarm[5] = timereloadbar
}

}
//enrayer rechargement

colorreloadbar = statcolor5
}else if obj_cursor.alarm[5] &gt; (obj_zombie.timereloadbar2 * 2 ) &amp;&amp; obj_cursor.alarm[5] &lt; (obj_zombie.timereloadbar2 * 3)  {
key_reload = keyboard_check_pressed(ord("R"));

if(key_reload) {
obj_cursor.alarm[5] = 1
}

colorreloadbar = statcolor1
}else if obj_cursor.alarm[5] &gt; (obj_zombie.timereloadbar2 * 3) &amp;&amp; obj_cursor.alarm[5] &lt; (obj_zombie.timereloadbar2 * 5)  {

//enrayer rechargement
with(obj_zombie){

key_reload = keyboard_check_pressed(ord("R"));
if(key_reload) {
if shootgun = 1 {
if not audio_is_playing(snd_reloadshootgun1){
audio_play_sound(snd_reloadshootgun1,0,0)}
    obj_zombie.animreload = 2;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
     }
if fusil = 1 {
if not audio_is_playing(snd_reloadgun){
audio_play_sound(snd_reloadgun,0,0)}
     obj_zombie.animreload = 1;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
}   
if assaut = 1 {
if not audio_is_playing(snd_reloadassaut){
audio_play_sound(snd_reloadassaut,0,0)}
     obj_zombie.animreload = 3;
     obj_zombie.animspeedreload = 100*global.varfpsmax;
}  
     
timereloadbar = (140 * weapon1reload)*global.varfpsmax//temps de rechargement
timereloadbar2 = timereloadbar/5
obj_cursor.alarm[5] = timereloadbar

}
}
//enrayer rechargement


colorreloadbar = statcolor5
}


if global.hud2 = 1 {if timenowreloadbar &gt; 0 {
draw_healthbar(obj_zombie.x-35 ,obj_zombie.y + 50,obj_zombie.x+35,obj_zombie.y + 52,timenowreloadbar,statcolor0,colorreloadbar,colorreloadbar,0,true,false)
}}
}
draw_set_alpha(1)
//COMPETENCE

if obj_zombie.minelaunch2 &gt; 50 {
draw_set_font(fnt_sfoldrepublic24);//draw_set_font(fnt_small);
draw_set_color(colortext3);
draw_set_halign(fa_right);
obj_zombie.piegenowname = ""
if obj_zombie.piegenow = 1 {
obj_zombie.piegenowname = "Mine"
nbrminenow = scr_itemcheck(220)
}
if obj_zombie.piegenow = 2 {
obj_zombie.piegenowname = "Grenade"
nbrminenow = scr_itemcheck(221)
}
if obj_zombie.piegenow = 3 {
obj_zombie.piegenowname = "C4"
nbrminenow = scr_itemcheck(222)
}
if obj_zombie.piegenow = 4 {
obj_zombie.piegenowname = "Trap"
nbrminenow = scr_itemcheck(223)
}

draw_text(view_xview + 1350,view_yview + 530,""+string(nbrminenow)+"  "+string(obj_zombie.piegenowname))

}



draw_set_alpha(alphahud1)
draw_set_font(fnt_sfoldrepublic24);//draw_set_font(fnt_small);
draw_set_color(colortext3);
if alphahud1 &gt; 0 &amp;&amp; obj_zombie.mainnue = 0 {
if obj_zombie.exo = 0 {
if instance_exists(obj_weapon){
//draw_healthbar(view_xview + 1250,view_yview + 603,view_xview + 1328,view_yview + 620,obj_cursor.timecomp,c_black,obj_nightcycle.colortext3,obj_nightcycle.colortext3,0,true,false)

draw_set_halign(fa_right);
if obj_cursor.complaunch &gt; 50 { 
if global.hud2 = 1 {
//draw_text(view_xview + 1350,view_yview + 590,""+string(obj_cursor.compname))
}
}
if obj_zombie.healgun = 0 {
if obj_zombie.stuffenprison = 0 {
if mouse_x &gt; view_xview + 1050 &amp;&amp; mouse_y &gt;   view_yview + 650 {
if global.hud2 = 1 {draw_set_valign(54)
draw_text(view_xview + 1350,view_yview + 655," "+string(obj_weapon.infoweapon))}}
//DESSIN DES ARMES
//draw_set_font(fnt_weapon1);//draw_set_font(fnt_small);
with(obj_weapon){
//draw_set_font(fnt_weapon1);//draw_set_font(fnt_small);
if obj_zombie.hudoff = 0 {
if obj_zombie.fusil = 1 {draw_sprite_ext( spr_ammosprite1, image_index, view_xview + 1100,view_yview + 720, 1, 1, 0, c_white, other.alphahud1)}
if obj_zombie.shootgun = 1 {draw_sprite_ext( spr_ammosprite2, image_index, view_xview + 1100,view_yview + 720, 1, 1, 0, c_white, other.alphahud1)}
if obj_zombie.assaut = 1 {draw_sprite_ext( spr_ammosprite3, image_index, view_xview + 1100,view_yview + 720, 1, 1, 0, c_white, other.alphahud1)}

}
if mouse_x &gt; view_xview + 1050 &amp;&amp; mouse_y &gt;   view_yview + 650  {}else{
if global.hud2 = 1 {
if obj_zombie.fusil = 1 {

if gun = 1 {draw_sprite_ext( spr_weaponfond24, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//24
if gun = 2 {draw_sprite_ext( spr_weaponfond50, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//50
if gun = 3 {draw_sprite_ext( spr_weaponfond51, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//51
if gun = 4 {draw_sprite_ext( spr_weaponfond49, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//49
if gun = 5 {draw_sprite_ext( spr_weaponfond25, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//25
if gun = 6 {draw_sprite_ext( spr_weaponfond30, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//30
if gun = 7 {draw_sprite_ext( spr_weaponfond31, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//31
if gun = 8 {draw_sprite_ext( spr_weaponfond32, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//32
if gun = 9 {draw_sprite_ext( spr_weaponfond42, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//42
if gun = 10 {draw_sprite_ext( spr_weaponfond46, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//46
if gun = 11 {draw_sprite_ext( spr_weaponfond47, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//47
if gun = 12 {draw_sprite_ext( spr_weaponfond40, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//40
if gun = 13 {draw_sprite_ext( spr_weaponfond27, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//27
}
if obj_zombie.shootgun = 1 {
if shoot = 1 {draw_sprite_ext( spr_weaponfond1, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//1
if shoot = 2 {draw_sprite_ext( spr_weaponfond4, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//4
if shoot = 3 {draw_sprite_ext( spr_weaponfond17, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//17
if shoot = 4 {draw_sprite_ext( spr_weaponfond8, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//8
if shoot = 5 {draw_sprite_ext( spr_weaponfond10, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//10
if shoot = 6 {draw_sprite_ext( spr_weaponfond11, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//11
if shoot = 7 {draw_sprite_ext( spr_weaponfond12, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//12
if shoot = 8 {draw_sprite_ext( spr_weaponfond14, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//14
if shoot = 9 {draw_sprite_ext( spr_weaponfond4, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//4
if shoot = 10{draw_sprite_ext( spr_weaponfond33, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//33
if shoot = 11{draw_sprite_ext( spr_weaponfond52, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//52
if shoot = 12{draw_sprite_ext( spr_weaponfond5, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//5
if shoot = 13{draw_sprite_ext( spr_weaponfond34, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//34
}
if obj_zombie.assaut = 1 {
if assaut = 1 {draw_sprite_ext( spr_weaponfond2, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//2
if assaut = 2 {draw_sprite_ext( spr_weaponfond19, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//19
if assaut = 3 {draw_sprite_ext( spr_weaponfond3, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//3
if assaut = 4 {draw_sprite_ext( spr_weaponfond36, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//36
if assaut = 5 {draw_sprite_ext( spr_weaponfond13, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//13
if assaut = 6 {draw_sprite_ext( spr_weaponfond16, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//16
if assaut = 7 {draw_sprite_ext( spr_weaponfond6, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//6
if assaut = 8 {draw_sprite_ext( spr_weaponfond18, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//18
if assaut = 9 {draw_sprite_ext( spr_weaponfond38, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//38
if assaut = 10{draw_sprite_ext( spr_weaponfond35, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//35
if assaut = 11{draw_sprite_ext( spr_weaponfond7, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//7
if assaut = 12{draw_sprite_ext( spr_weaponfond17, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//17 A CHANGER !
if assaut = 13{draw_sprite_ext( spr_weaponfond15, image_index, view_xview+ 1206, view_yview+ 658, 1, 1, 0, c_white, other.alphahud1 );}//15
}}
}
}


draw_set_font(fnt_sfoldrepublic24);//draw_set_font(fnt_small);
if global.hud2 = 1 {
draw_healthbar(view_xview + 1148,view_yview + 743,view_xview + 1328,view_yview + 750,obj_zombie.silencenow,c_black,colortext3,colortext3,0,true,false)
}
}
}else{
if obj_zombie.stuffenprison = 0 {
if global.hud2 = 1 {draw_set_valign(54)
draw_text(view_xview + 1350,view_yview + 635,"MEDIC GUN ")
draw_text(view_xview + 1350,view_yview + 705,""+string(round(obj_zombie.healload)))
}
}
}

}
if global.hud2 = 1 {
if obj_zombie.stuffenprison = 0 {
if global.hud2 = 1 {
if obj_zombie.fusil = 1 {draw_set_valign(54)
draw_text(view_xview + 1230,view_yview + 705," "+string(obj_zombie.ammo))
draw_text(view_xview + 1350,view_yview + 705," / "+string(obj_zombie.ammonow))
}
if obj_zombie.shootgun = 1 {draw_set_valign(54)
draw_text(view_xview + 1230,view_yview + 705," "+string(obj_zombie.ammo2))
draw_text(view_xview + 1350,view_yview + 705," / "+string(obj_zombie.ammonow2))
}

if obj_zombie.assaut = 1 {draw_set_valign(54)
draw_text(view_xview + 1230,view_yview + 705," "+string(obj_zombie.ammo3))
draw_text(view_xview + 1350,view_yview + 705," / "+string(obj_zombie.ammonow3))
}}
}
}

}else{//SUPERWEAPON

draw_set_alpha(alphahud1)
draw_healthbar(view_xview + 1148,view_yview + 703,view_xview + 1328,view_yview + 760,obj_zombie.superweapontime/10,c_black,colortext3,colortext3,0,true,false)
}
}//if alphahud1 &gt; 0 {


}

draw_set_color(colortext3);
//pour indiquer les possibilité d'interaction
if global.interacthud = "" {}else{
draw_set_halign(fa_center);
if obj_zombie.hudoff = 0 {
draw_text(view_xview + 658,view_yview + 687,""+string(global.interacthud))
}}





global.varriable1=round(global.temperature)
xxpos0 = 60
if global.hud3 = 1 {
if obj_zombie.freeze &lt; 5 or pourcenthpfinal &lt; 5 or obj_zombie.nowhunger &lt; 5 or obj_zombie.nowthirst &lt; 5 {
alphahud3 = 1}
if alphahud3 &gt; 0 {
draw_set_alpha(alphahud3)

draw_set_halign(fa_center);draw_set_valign(54)
draw_text(view_xview + 28,view_yview + 612,""+string(global.varriable1))
draw_text(view_xview + 85,view_yview + 612,"° C")

//if alphahud3 &gt; 1 {alphahud3 = 1}

draw_set_alpha(alphahud3);
draw_set_color(c_black);
//draw_circle(view_xview + xxpos0,view_yview + 720,37.5,false)
//if obj_zombie.endurencerun &lt; 100 {
sprHealthBar = spr_newbar1
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 10, view_yview+ 665);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.endurencerun/100)),view_xview+ 10, view_yview+ 665);

/*
rayon = 37.5 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.endurencerun,0,360,-1,statcolor1)
//draw_healthbar(view_xview + 8,view_yview + 678,view_xview + 128,view_yview + 685,obj_zombie.endurencerun,statcolor0,statcolor2,statcolor1,0,true,false)*/
}//}

if alphahud3 &gt; 0 {
//draw_healthbar(view_xview + 8,view_yview + 663,view_xview + 128,view_yview + 668,obj_zombie.danslalumiere,statcolor0,c_dkgray,c_yellow,0,true,false)


if obj_zombie.freeze &lt;= obj_zombie.freezevar9 {sprHealthBar = spr_newbar2
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 70, view_yview+ 660);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.freezevar9/100)),view_xview+ 70, view_yview+ 660);

/*
rayon = 22.5 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.freezevar9,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.freeze,0,360,-1,statcolor3)
//draw_healthbar(view_xview + 8,view_yview + 693,view_xview + 128,view_yview + 700,obj_zombie.freezevar9,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 693,view_xview + 128,view_yview + 700,obj_zombie.freeze,statcolor0,statcolor4,statcolor3,0,false,false)*/
}
if obj_zombie.freezevar9 &lt; obj_zombie.freeze {sprHealthBar = spr_newbar2
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 70, view_yview+ 660);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.freezevar9/100)),view_xview+ 70, view_yview+ 660);

/*
rayon = 22.5 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.freeze,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.freezevar9,0,360,-1,statcolor3)
//draw_healthbar(view_xview + 8,view_yview + 693,view_xview + 128,view_yview + 700,obj_zombie.freeze,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 693,view_xview + 128,view_yview + 700,obj_zombie.freezevar9,statcolor0,statcolor4,statcolor3,0,false,false)*/
}

if pourcenthpfinal2 &lt;= pourcenthpfinal {sprHealthBar = spr_newbar3
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 130, view_yview+ 665);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(pourcenthpfinal/100)),view_xview+ 130, view_yview+ 665);

/*
rayon = 30 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,pourcenthpfinal,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,pourcenthpfinal2,0,360,-1,statcolor5)
//draw_healthbar(view_xview + 8,view_yview + 708,view_xview + 128,view_yview + 716,pourcenthpfinal,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 708,view_xview + 128,view_yview + 716,pourcenthpfinal2,statcolor0,statcolor5,statcolor5,0,false,false)*/
}

if pourcenthpfinal &lt; pourcenthpfinal2 {sprHealthBar = spr_newbar3
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 130, view_yview+ 665);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(pourcenthpfinal/100)),view_xview+ 130, view_yview+ 665);

/*
rayon = 30 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,pourcenthpfinal2,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,pourcenthpfinal,0,360,-1,statcolor5)
//draw_healthbar(view_xview + 8,view_yview + 708,view_xview + 128,view_yview + 716,pourcenthpfinal2,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 708,view_xview + 128,view_yview + 716,pourcenthpfinal,statcolor0,statcolor5,statcolor5,0,false,false)*/
}

if obj_zombie.nowhunger &lt;= obj_zombie.nowhungervar9 {sprHealthBar = spr_newbar4
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 10, view_yview+ 720);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.nowhungervar9/100)),view_xview+ 10, view_yview+ 720);

/*
rayon = 15 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowhungervar9,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowhunger,0,360,-1,statcolor6)
//draw_healthbar(view_xview + 8,view_yview + 732,view_xview + 128,view_yview + 722,obj_zombie.nowhungervar9,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 732,view_xview + 128,view_yview + 722,obj_zombie.nowhunger,statcolor0,statcolor6,statcolor6,0,false,false)*/
}
if obj_zombie.nowhungervar9 &lt; obj_zombie.nowhunger {sprHealthBar = spr_newbar4
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 10, view_yview+ 720);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.nowhungervar9/100)),view_xview+ 10, view_yview+ 720);

/*
rayon = 15 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowhunger,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowhungervar9,0,360,-1,statcolor6)
//draw_healthbar(view_xview + 8,view_yview + 732,view_xview + 128,view_yview + 722,obj_zombie.nowhunger,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 732,view_xview + 128,view_yview + 722,obj_zombie.nowhungervar9,statcolor0,statcolor6,statcolor6,0,false,false)*/
}

if obj_zombie.nowthirst &lt;= obj_zombie.nowthirstvar9 {sprHealthBar = spr_newbar5
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 70, view_yview+ 715);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.nowthirstvar9/100)),view_xview+ 70, view_yview+ 715);

/*
rayon = 7.5 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowthirstvar9,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowthirst,0,360,-1,statcolor7)
//draw_healthbar(view_xview + 8,view_yview + 747,view_xview + 128,view_yview + 737,obj_zombie.nowthirstvar9,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 747,view_xview + 128,view_yview + 737,obj_zombie.nowthirst,statcolor0,statcolor7,statcolor7,0,false,false)*/
}
if obj_zombie.nowthirstvar9 &lt; obj_zombie.nowthirst {sprHealthBar = spr_newbar5
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 70, view_yview+ 715);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.nowthirstvar9/100)),view_xview+ 70, view_yview+ 715);

/*rayon = 7.5 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowthirst,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.nowthirstvar9,0,360,-1,statcolor7)*/
//draw_healthbar(view_xview + 8,view_yview + 747,view_xview + 128,view_yview + 737,obj_zombie.nowthirst,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 747,view_xview + 128,view_yview + 737,obj_zombie.nowthirstvar9,statcolor0,statcolor7,statcolor7,0,false,false)
}



if obj_zombie.pile &lt;= obj_zombie.pilevar9 {sprHealthBar = spr_newbar6
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 0, 0, 0, spriteWidth, spriteHeight,view_xview+ 130, view_yview+ 720);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.pilevar9/100)),view_xview+ 130, view_yview+ 720);
/*rayon = 0 //40
epaisseur = 7.5 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.pilevar9,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.pile,0,360,-1,statcolor8)*/
//draw_healthbar(view_xview + 8,view_yview + 762,view_xview + 128,view_yview + 753,obj_zombie.pilevar9,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 762,view_xview + 128,view_yview + 753,obj_zombie.pile,statcolor0,statcolor8,statcolor8,0,false,false)
}
if obj_zombie.pile &lt; obj_zombie.pile {sprHealthBar = spr_newbar6
var spriteWidth = sprite_get_width(sprHealthBar);
var spriteHeight = sprite_get_height(sprHealthBar);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight,view_xview+ 130, view_yview+ 720);
draw_sprite_part(sprHealthBar, 1, 0, 0, spriteWidth, spriteHeight-(spriteHeight*(obj_zombie.pilevar9/100)),view_xview+ 130, view_yview+ 720);
/*rayon = 0 //40
epaisseur = 10 //22
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.pile,0,360,-1,c_orange)
scr_health_ring(view_xview + xxpos0,view_yview + 720,rayon,epaisseur,100,obj_zombie.pilevar9,0,360,-1,statcolor8)*/

//draw_healthbar(view_xview + 8,view_yview + 762,view_xview + 128,view_yview + 753,obj_zombie.pile,statcolor0,c_orange,c_orange,0,true,false)
//draw_healthbar(view_xview + 8,view_yview + 762,view_xview + 128,view_yview + 753,obj_zombie.pilevar9,statcolor0,statcolor8,statcolor8,0,false,false)
}
draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
draw_set_color(colortext3);
draw_set_alpha(alphahud3);
/*if point_distance(mouse_x,mouse_y,view_xview+ 10, view_yview+ 660) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 682-10,"Endurence : "+string(floor(obj_zombie.endurencerun))+" / 100")}
if point_distance(mouse_x,mouse_y,view_xview+ 70, view_yview+ 660) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 696-10,"Freeze : "+string(floor(obj_zombie.freezevar9))+" / 100")}
if point_distance(mouse_x,mouse_y,view_xview+ 130, view_yview+ 660) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 712-10,"Life : "+string(floor(pourcenthpfinal))+" / 100")}
if point_distance(mouse_x,mouse_y,view_xview+ 10, view_yview+ 720) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 725-10,"Food : "+string(floor(obj_zombie.nowhungervar9))+" / 100")}
if point_distance(mouse_x,mouse_y,view_xview+ 70, view_yview+ 720) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 742-10,"Water : "+string(floor(obj_zombie.nowthirstvar9))+" / 100")}
if point_distance(mouse_x,mouse_y,view_xview+ 130, view_yview+ 720) &lt; 20 {draw_text(view_xview+ 139+80, view_yview+ 758-10,"Flashlight : "+string(floor(obj_zombie.pilevar9))+" / 100")}
*/

/*if obj_zombie.endurencerun &lt; 100 {
draw_sprite_ext( spr_bar1, image_index, view_xview+ 139, view_yview+ 682, 1, 1, 0, c_white, alphahud3 );
}
draw_sprite_ext( spr_bar2, image_index, view_xview+ 139, view_yview+ 696, 1, 1, 0, c_white, alphahud3 );
draw_sprite_ext( spr_bar3, image_index, view_xview+ 139, view_yview+ 712, 1, 1, 0, c_white, alphahud3 );
draw_sprite_ext( spr_bar4, image_index, view_xview+ 139, view_yview+ 725, 1, 1, 0, c_white, alphahud3 );
draw_sprite_ext( spr_bar5, image_index, view_xview+ 139, view_yview+ 742, 1, 1, 0, c_white, alphahud3 );
draw_sprite_ext( spr_bar6, image_index, view_xview+ 139, view_yview+ 758, 1, 1, 0, c_white, alphahud3 );*/
}}
draw_set_alpha(1)
draw_set_halign(300);
draw_set_valign(54);
draw_set_font(fnt_little);
draw_set_color(colortext3);
//draw_text(view_xview + 950,view_yview + 740,"More info :  "+string("'W'"))


//key_hud2 = keyboard_check(ord("C"));
if obj_zombie.chatlaunch = 0 &amp;&amp; obj_buttonguilde.chatlaunch2 = 0{


}















//key_hud = keyboard_check(ord("W"));
if obj_zombie.chatlaunch = 0 &amp;&amp; obj_buttonguilde.chatlaunch2 = 0{
/*if(key_hud) {
//if alarm[0] &lt; 0 {
//alarm[0] = 1
//}


draw_sprite_ext( spr_menugauche, image_index, view_xview+movehud3, view_yview, 1, 1, 0, c_white, 1 );
draw_sprite_ext( spr_menudroite, image_index, view_xview+movehud4, view_yview, 1, 1, 0, c_white, 1 );
draw_set_halign(300);
draw_set_valign(54);
draw_set_font(fnt_little);
draw_set_color(colortext2);
draw_text(view_xview + movehud2-70,view_yview + 72,"use/transfer water "+string("'1'"))
draw_text(view_xview + movehud2-70,view_yview + 92,"use/transfer food "+string("'2'"))
draw_text(view_xview + movehud2-70,view_yview + 112,"use/transfer heal "+string("'3'"))
draw_text(view_xview + movehud2-70,view_yview + 132,"use/transfer battery "+string("'4'"))
draw_text(view_xview + movehud2-70,view_yview + 152,"drop/transfer water "+string("'CTRL+1'"))
draw_text(view_xview + movehud2-70,view_yview + 172,"drop/transfer food "+string("'CTRL+2'"))
draw_text(view_xview + movehud2-70,view_yview + 192,"drop/transfer heal "+string("'CTRL+3'"))
draw_text(view_xview + movehud2-70,view_yview + 212,"drop/transfer battery "+string("'CTRL+4'"))
draw_text(view_xview + movehud2-70,view_yview + 232,"transfer weapon piece "+string("'L/I'"))
draw_text(view_xview + movehud2-70,view_yview + 252,"transfer armor piece "+string("'M/O'"))
draw_text(view_xview + movehud2-70,view_yview + 272,"use flashlight "+string("'F'"))
//draw_text(view_xview + 900,view_yview + 282,"drop/transfer battery "+string("'K'"))
//draw_text(view_xview + 900,view_yview + 282,"drop/transfer battery "+string("'K'"))
draw_text(view_xview + movehud2-70,view_yview + 292,"Weapon 1 "+string("'F1'"))
draw_text(view_xview + movehud2-70,view_yview + 312,"Weapon 2 "+string("'F2'"))
draw_text(view_xview + movehud2-70,view_yview + 332,"Weapon 3 "+string("'F3'"))
draw_text(view_xview + movehud2-70,view_yview + 352,"Change Graphic "+string("'F4'"))
draw_text(view_xview + movehud2-70,view_yview + 372,"inventory "+string("'TAB'"))
draw_text(view_xview + movehud2-70,view_yview + 392,"SaveGame "+string("'F5'"))
draw_text(view_xview + movehud2-70,view_yview + 412,"Fast SaveGame "+string("'F6'"))
draw_text(view_xview + movehud2-70,view_yview + 432,"Fast LoadGame "+string("'F7'"))
draw_text(view_xview + movehud2-70,view_yview + 452,"Change Weapon "+string("'Mouse wheel up/down'"))
draw_text(view_xview + movehud2-70,view_yview + 472,"Cut "+string("'Mouse middle press'"))
draw_text(view_xview + movehud2-70,view_yview + 492,"Skills "+string("'Stay Press T'"))
draw_text(view_xview + movehud2-70,view_yview + 512,"Skills launch "+string("'Tap T'"))


draw_text(view_xview + movehud,view_yview + 62,"netxpos1itemhouse = "+string(obj_zombie.netc1x))
draw_text(view_xview + movehud,view_yview + 82,"Karma = "+string(obj_zombie.karma))
draw_text(view_xview + movehud,view_yview + 102,"Karma negative = "+string(obj_zombie.karmaneg))
draw_text(view_xview + movehud,view_yview + 132,"Level = "+string(obj_zombie.level))
draw_text(view_xview + movehud,view_yview + 152,"MaxExp = "+string(obj_zombie.MAXEXP))
draw_text(view_xview + movehud,view_yview + 172,"Exp = "+string(obj_zombie.EXP))
draw_text(view_xview + movehud,view_yview + 192,"MaxDmg = "+string(obj_zombie.maxdmg))
draw_text(view_xview + movehud,view_yview + 212,"MinDmg = "+string(obj_zombie.mindmg))
draw_text(view_xview + movehud,view_yview + 232,"HP = "+string(obj_zombie.hp))
draw_text(view_xview + movehud,view_yview + 252,"Max Hp = "+string(obj_zombie.maxhp))


draw_text(view_xview + movehud,view_yview + 272,"alarm 5 fog = "+string(obj_fog.alarm[5]))
draw_text(view_xview + movehud,view_yview + 292,"alarm wind restant = "+string(global.alarmwindsave))
draw_text(view_xview + movehud,view_yview + 312,"freeze = "+string(obj_zombie.freeze))
if instance_exists(oOtherClient) {
draw_text(view_xview + movehud,view_yview + 332,"weapon3dmgenemy = "+string(oOtherClient.weapon3dmgnet))
draw_text(view_xview + movehud,view_yview + 352,"weapon3dura = "+string(oOtherClient.duraarme))

}

draw_text(view_xview + movehud,view_yview + 372,"battery = "+string(obj_zombie.pile))
//draw_text(view_xview + 5,view_yview + 392,"cold feel = "+string(torch))
draw_text(view_xview + movehud,view_yview + 412,"Armor durability = "+string(obj_zombie.duraarmure))
draw_text(view_xview + movehud,view_yview + 432,"Weapon 1 durability = "+string(global.duraarme))
draw_text(view_xview + movehud,view_yview + 452,"Weapon 2 durability = "+string(global.duraarme2))
draw_text(view_xview + movehud,view_yview + 472,"Weapon 3 durability = "+string(global.duraarme3))
draw_text(view_xview + movehud,view_yview + 492,"alarm1 = "+string(global.alarmpopobjet1))
draw_text(view_xview + movehud,view_yview + 512,"alarm2 = "+string(global.alarmpopobjet1))
draw_text(view_xview + movehud,view_yview + 532,"choix de competence = "+string(obj_zombie.pouvoir))
draw_text(view_xview + movehud,view_yview + 552,"room = "+string(obj_zombie.room))
draw_text(view_xview + movehud,view_yview + 572,"alarm copain = "+string(obj_controllerplayer.alarm[2]))
draw_text(view_xview + movehud,view_yview + 592,"Inventaire = "+string(obj_zombie.fullinv))
draw_text(view_xview + movehud,view_yview + 612,"nbr joueur ds la piece = "+string(global.roomplayernbr))
draw_text(view_xview + movehud,view_yview + 632,"myclientid = "+string(global.myclientid))
draw_text(view_xview + movehud,view_yview + 652,"nbr total joueur = "+string(global.totaljoueur))
draw_text(view_xview + movehud,view_yview + 672," Systeme lowgpu2= "+string(obj_zombie.lowgpu2))
draw_text(view_xview + movehud,view_yview + 692,"MaxDmg = "+string(obj_zombie.maxarme))
draw_text(view_xview + movehud,view_yview + 712,"MinDmg = "+string(obj_zombie.minarme))
if instance_exists(obj_exo) {
draw_text(view_xview + movehud,view_yview + 732,"Armor protect EXO = "+string(obj_exo.exoprotect))
draw_text(view_xview + movehud,view_yview + 752,"Armor durability EXO = "+string(obj_exo.exodura))
}
//draw_text(view_xview + 5,view_yview + 532,"SOUND NAME = "+string(global.infosound)) pas oubleir le son !



//draw_text(view_xview + 5,view_yview + 492,"alarm3 = "+string(obj_ammoend.alarm[1]))

draw_text(view_xview + 135,view_yview + 700,""+string("health"))
draw_text(view_xview + 135,view_yview + 718,""+string("hunger"))
draw_text(view_xview + 135,view_yview + 731,""+string("thirst"))
draw_text(view_xview + 135,view_yview + 746,""+string("battery"))
draw_text(view_xview + 135,view_yview + 684,""+string("freeze"))


}*/

}


if obj_zombie.freeze &lt; 30 {
draw_sprite_ext( spr_hudglace, image_index, view_xview, view_yview, 1, 1, 0, c_white, 0+(0.5-obj_zombie.freeze/60) );

}

if obj_zombie.hp &lt; obj_zombie.maxhp/2 { //4 a la place de 2
alphasang = 1 - (obj_zombie.hp /(obj_zombie.maxhp/2))//4 a la place de 2
varalphasang = ((obj_zombie.alarm[1]/300)/1)
if (varalphasang) &gt; alphasang/2 {varalphasang = alphasang /2}
//draw_sprite_ext( spr_sang1, image_index, view_xview, view_yview, 1, 1, 0, c_white, alphasang );
draw_sprite_ext( spr_sang2, image_index, view_xview, view_yview, 1, 1, 0, c_red, alphasang-varalphasang );
draw_sprite_ext( spr_sang3, image_index, view_xview, view_yview, 1, 1, 0, c_red, alphasang-varalphasang );
draw_sprite_ext( spr_sang4, image_index, view_xview, view_yview, 1, 1, 0, c_red, alphasang-varalphasang );}


}


if alarm[9] &lt; 0 {if obj_zombie.alphafonduroom &gt; 0 {if collision_point(obj_zombie.x,obj_zombie.y,obj_teleport1,true,true){}else{obj_zombie.alphafonduroom -= 0.05 }}}
if obj_zombie.alphafonduroom &gt; 0 {
draw_set_alpha(obj_zombie.alphafonduroom);
draw_rectangle_color(0,0,room_width,room_height,c_black,c_black,c_black,c_black,false);
draw_set_alpha(1)
}

if point_distance(mouse_x,mouse_y,view_xview+view_wview-20,view_yview+20) &lt; 100 {
draw_sprite_ext(spr_hud1,0,view_xview+view_wview-20,view_yview+20,1,1,0,colortext3,1)
}else
if global.hudactif2 = 0 &amp;&amp; alphahud2 = 0{
draw_sprite_ext(spr_hud1,0,view_xview+view_wview-20,view_yview+20,1,1,0,colortext3,1)
}

if point_distance(mouse_x,mouse_y,view_xview+20,view_yview+20) &lt; 100 {
draw_sprite_ext(spr_hud2,0,view_xview+20,view_yview+20,1,1,0,colortext3,1)
}else
if obj_view.alphatotal &lt;= 0 &amp;&amp; obj_view.perma = 0 {
draw_sprite_ext(spr_hud2,0,view_xview+20,view_yview+20,1,1,0,colortext3,1)
}

if point_distance(mouse_x,mouse_y,view_xview+view_wview-20,view_yview+view_hview-20) &lt; 100 {
draw_sprite_ext(spr_hud3,0,view_xview+view_wview-20,view_yview+view_hview-20,1,1,0,colortext3,1)
}else
if global.hudactif1 = 0 &amp;&amp; alphahud1 = 0 {
draw_sprite_ext(spr_hud3,0,view_xview+view_wview-20,view_yview+view_hview-20,1,1,0,colortext3,1)
}

if point_distance(mouse_x,mouse_y,view_xview+20,view_yview+view_hview-20) &lt; 100 {
draw_sprite_ext(spr_hud4,0,view_xview+20,view_yview+view_hview-20,1,1,0,colortext3,1)
}else
if global.hudactif3 = 0 &amp;&amp; alphahud3 = 0 {
draw_sprite_ext(spr_hud4,0,view_xview+20,view_yview+view_hview-20,1,1,0,colortext3,1)
}

}

scr_nameia();

if instance_exists(obj_bossnet){
with(obj_bossnet){//scr_nameia
if activeboss = 0 {
if blablaphrases = "" {if alphadecalstext &gt; 0 {alphadecalstext -= 0.05}}else{
if alphadecalstext &lt; 1 {alphadecalstext += 0.05}
var x1,x2,y1,y2;
x1 = view_xview[0];
x2 = x1 + view_wview;//view_wview[0];
y1 = view_yview[0]+550;
y2 = y1 + 150;
draw_set_color(c_black);
//draw_rectangle(view_xview+900,view_yview,x2,view_yview+750,0)
ypluss = -50
xpluss = 0
draw_set_alpha(alphadecalstext)

repeat(5){ypluss += 50;//xpluss += 50
draw_background(decalsnoir3,view_xview-200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+0+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+500+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+600+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+700+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+800+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+900+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1000+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+350+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+450+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+550+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+650+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+750+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+850+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+950+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1050+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1350+xpluss,view_yview+750-ypluss)
}
if quest = 2 {draw_sprite_ext(spr_portrait1,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 3 {draw_sprite_ext(spr_portrait3,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 4 {draw_sprite_ext(spr_portrait2,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 5 {draw_sprite_ext(spr_portrait4,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
}
draw_set_color(c_black);


 //obj_persoprincipaux

draw_set_color(obj_nightcycle.colortext3)
if alarm[0] &lt; 0 {

draw_set_font(fnt_sfoldrepublicbig);
draw_set_halign(fa_left);
 draw_set_valign(fa_middle);
 if blablaphrases = "" {}else{
scr_chathistory2(blablaphrases);
  draw_text_ext(view_xview+50,view_yview+700,blablaphrases,50,1050)}
  
}}}
  }
  


if instance_exists(obj_persoprincipaux){
with(obj_persoprincipaux){//scr_nameia
sprHealthBar = spr_quest;
draw_sprite_ext(sprHealthBar,0,x, y-70,1,1,0,obj_bigstats.colortext2,1)
if blablaphrases = "" {if alphadecalstext &gt; 0 {alphadecalstext -= 0.05}}else{
if alphadecalstext &lt; 1 {alphadecalstext += 0.05}
var x1,x2,y1,y2;
x1 = view_xview[0];
x2 = x1 + view_wview;//view_wview[0];
y1 = view_yview[0]+550;
y2 = y1 + 150;
draw_set_color(c_black);
//draw_rectangle(view_xview+900,view_yview,x2,view_yview+750,0)
ypluss = -50
xpluss = 0
draw_set_alpha(alphadecalstext)

repeat(5){ypluss += 50;//xpluss += 50
draw_background(decalsnoir3,view_xview-200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+0+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+500+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+600+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+700+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+800+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+900+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1000+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+350+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+450+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+550+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+650+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+750+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+850+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+950+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1050+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1350+xpluss,view_yview+750-ypluss)
}
if quest = 2 {draw_sprite_ext(spr_portrait1,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 3 {draw_sprite_ext(spr_portrait3,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 4 {draw_sprite_ext(spr_portrait2,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
if quest = 5 {draw_sprite_ext(spr_portrait4,0,x2,view_yview[0]+view_hview-10,1,1,0,c_white,alphadecalstext)}
}
draw_set_color(c_black);


}}
 //obj_persoprincipaux
if instance_exists(obj_persoprincipaux){
with(obj_persoprincipaux){
draw_set_color(obj_nightcycle.colortext3)
if alarm[0] &lt; 0 {
if questactivenow &gt; 0 {
draw_set_font(fnt_sfoldrepublicbig);
draw_set_halign(fa_left);
 draw_set_valign(fa_middle);
if blablaphrases = "" {}else{
// draw_text_outline(x,y-70,blablaphrases,c_black)}
scr_chathistory2(blablaphrases);
  draw_text_ext(view_xview+50,view_yview+700,blablaphrases,50,1050)}
   if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 200 &amp;&amp; point_distance(x,y,mouse_x,mouse_y) &lt; 70 {
   if name = "" {}else{
   draw_set_font(fnt_sfoldrepublic);
        draw_set_halign(fa_center);
    draw_set_valign(fa_top);
 draw_text_outline(x,y-50,name,c_black)}
 }
}else{
draw_set_font(fnt_sfoldrepublicbig);

if point_distance(x,y,obj_controllerplayer.x,obj_controllerplayer.y) &lt; 1300 {
 draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_left);
draw_set_color(obj_nightcycle.colortext3)
idme = id 

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 300 {
var i;
 for (i = 0; i &lt; proposition; i += 1)
    {color = c_white
    if point_distance(xx[i],yy[i],mouse_x,mouse_y) &lt; 17 {
    color = obj_nightcycle.colortext3
    }
    
    if blablaphrases = "" {
    if point_distance(x,y,mouse_x,mouse_y) &lt; 280  &amp;&amp; point_distance(x,y,mouse_x,mouse_y) &gt; 180  {if alphatuto2 &lt; 1 {alphatuto2 += 0.02}}
    if point_distance(x,y,mouse_x,mouse_y) &lt; 180 {if alphatuto1 &lt; 1 {alphatuto1 += 0.02}}
    if i &lt;= 10 {
    draw_set_alpha(alphatuto1);
     draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_text_outline(xx[i],yy[i]-35,obj_quest.propositionprincipal[quest,i],c_black)
    draw_sprite_ext(spr_questiontuto,image_index,xx[i],yy[i],1,1,0,color,alphatuto1)}
    /*if i &gt;= 10 {
    draw_set_alpha(alphatuto2);
    draw_text_outline(xx[i],yy[i]-35,obj_quest.proposition[i],c_black)
    draw_sprite_ext(spr_questiontuto,image_index,xx[i],yy[i],1,1,0,color,alphatuto2)}*/
    draw_set_alpha(1);

}}}
draw_set_font(fnt_sfoldrepublicbig);
 draw_set_valign(fa_middle);
 draw_set_halign(fa_left);
  if blablaphrases = "" {}else{
scr_chathistory2(blablaphrases);
 draw_text_ext(view_xview+50,view_yview+700,blablaphrases,50,1000)}
// draw_text_outline(x,y-70,blablaphrases,c_black)}
 }
 
 }
 }
 }}//}
 
 
 //obj_eliotsarel
if instance_exists(obj_eliotsarel){
with(obj_eliotsarel){
sprHealthBar = spr_quest;
draw_sprite_ext(sprHealthBar,0,x, y-70,1,1,0,obj_bigstats.colortext2,1)
if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 150 {
if blablaphrases = "" {if alphadecalstext &gt; 0 {alphadecalstext -= 0.05}}else{
if alphadecalstext &lt; 1 {alphadecalstext += 0.05}
var x1,x2,y1,y2;
x1 = view_xview[0];
x2 = x1 + view_wview;//view_wview[0];
y1 = view_yview[0]+550;
y2 = y1 + 150;
draw_set_color(c_black);
//draw_rectangle(view_xview+900,view_yview,x2,view_yview+750,0)
ypluss = -50
xpluss = 0
draw_set_alpha(alphadecalstext)

repeat(5){ypluss += 50;//xpluss += 50
draw_background(decalsnoir3,view_xview-200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+0+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+500+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+600+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+700+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+800+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+900+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1000+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1100+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1200+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1300+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1400+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview-50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+50+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+350+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+450+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+550+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+650+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+750+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+850+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+950+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1050+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1150+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1250+xpluss,view_yview+750-ypluss)
draw_background(decalsnoir3,view_xview+1350+xpluss,view_yview+750-ypluss)
}
draw_sprite_ext(spr_portrait7,0,x2,view_yview[0]+view_hview-10,0.8,0.8,0,c_white,alphadecalstext)

}

if point_distance(x,y,obj_controllerplayer.x,obj_controllerplayer.y) &lt; 1300 {
 draw_set_font(fnt_sfoldrepublic);
draw_set_halign(fa_center);
draw_set_color(obj_nightcycle.colortext3)
idme = id 

if obj_zombie.tutofinishedsure = 1 &amp;&amp;  point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 300 {
var i;
 for (i = 0; i &lt; proposition; i += 1)
    {color = c_white
    if point_distance(xx[i],yy[i],mouse_x,mouse_y) &lt; 17 {
    color = obj_nightcycle.colortext3
    }
    
    if blablaphrases = "" {
    if point_distance(x,y,mouse_x,mouse_y) &lt; 280  &amp;&amp; point_distance(x,y,mouse_x,mouse_y) &gt; 180  {if alphatuto2 &lt; 1 {alphatuto2 += 0.02}}
    if point_distance(x,y,mouse_x,mouse_y) &lt; 180 {if alphatuto1 &lt; 1 {alphatuto1 += 0.02}}
    if i &lt; 10 {
    draw_set_alpha(alphatuto1);
         draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_text_outline(xx[i],yy[i]-35,obj_quest.proposition[i],c_black)
    draw_sprite_ext(spr_questiontuto,image_index,xx[i],yy[i],1,1,0,color,alphatuto1)}
    if i &gt;= 10 {
    draw_set_alpha(alphatuto2);
         draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_text_outline(xx[i],yy[i]-35,obj_quest.proposition[i],c_black)
    draw_sprite_ext(spr_questiontuto,image_index,xx[i],yy[i],1,1,0,color,alphatuto2)}
    draw_set_alpha(1);

}}}
draw_set_font(fnt_sfoldrepublicbig);
  draw_set_valign(fa_middle);
 draw_set_halign(fa_left);
  if blablaphrases = "" {}else{
scr_chathistory2(blablaphrases);

 draw_text_ext(view_xview+50,view_yview+700,blablaphrases,50,1000)}
 }}}}


//BLUEPRINT ACQUIS
/* if instance_exists(obj_constructobjintrmap){with(obj_constructobjintrmap){
if point_distance(mouse_x,mouse_y,x,y) &lt; 80 {if craftnowobject = 13 or craftnowobject = 17 {
var x1,x2,y1,y2;
x1 = view_xview[0]+1000;
x2 = x1 + 466;//view_wview[0];
y1 = view_yview[0]+600;
y2 = y1 + 280;




draw_set_color(c_black);
draw_set_alpha(0.8);
draw_rectangle(x1,y1,x2,y2,0);
draw_set_alpha(1);


draw_text_ext(view_xview[0]+1040,view_yview[0]+660,ds_grid_get(other.modeblueprint,2,1),30,350)
draw_sprite_ext(spr_items,ds_grid_get(other.modeblueprint,1,1),view_xview[0]+1040,view_yview[0]+640,1,1,0,c_white,1)



}}}}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHANGER LA VUE !!!!
/*
if view2 = 0//view_visible[0] = true
{
view2 = 1
room_set_view(room,0,true,0,0,1920,1080,0,0,1920,1080,1024,768,-1,-1,obj_controllerplayer);
surface_resize(application_surface, 1920, 1080);
//view_visible[0] = false
//view_visible[1] = true
}
else
{
room_set_view(room,0,true,0,0,1366,768,0,0,1920,1080,1024,768,-1,-1,obj_controllerplayer);
surface_resize(application_surface, 1366, 768);

view2 = 0
//view_visible[0] = true
//view_visible[1] = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="34">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_buttonechap) {
if modecolor = 1 {colortext3 = make_color_rgb(61,66,27)}
if modecolor = 2 {colortext3 = make_color_rgb(66,55,35)}//marron foncer
if modecolor = 3 {colortext3 = make_color_rgb(108,101,99)}//gris styler
if modecolor = 4 {colortext3 = make_color_rgb(40,40,40)}//noir sombre
if modecolor = 5 {colortext3 = make_color_rgb(59,59,59)}//noir clair
if modecolor = 6 {colortext3 = make_color_rgb(86,71,65)}//marron clair
if modecolor = 7 {colortext3 = make_color_rgb(79,79,82)}//gris clair
if modecolor = 8 {colortext3 = make_color_rgb(139,131,115)}//noir clair
if modecolor = 9 {colortext3 = make_color_rgb(193,179,152)}//noir clair
if modecolor = 10 {colortext3 = make_color_rgb(97,115,28)}//noir clair
if modecolor = 11 {colortext3 = make_color_rgb(245,251,250)}//noir clair
if modecolor = 12 {colortext3 = make_color_rgb(212,202,184)}//noir clair
if modecolor = 13 {colortext3 = make_color_rgb(139,142,96)}//noir clair
//if modecolor = 5 {colortext3 = make_color_rgb(97,115,28)}//noir clair
//if modecolor = 5 {colortext3 = make_color_rgb(97,115,28)}//noir clair

if modecolor &gt; 1 {
modecolor -= 1
}else{
modecolor = 13
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="33">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_buttonechap) {
if modecolor = 1 {colortext3 = make_color_rgb(61,66,27)}
if modecolor = 2 {colortext3 = make_color_rgb(66,55,35)}//marron foncer
if modecolor = 3 {colortext3 = make_color_rgb(108,101,99)}//gris styler
if modecolor = 4 {colortext3 = make_color_rgb(40,40,40)}//noir sombre
if modecolor = 5 {colortext3 = make_color_rgb(59,59,59)}//noir clair
if modecolor = 6 {colortext3 = make_color_rgb(86,71,65)}//marron clair
if modecolor = 7 {colortext3 = make_color_rgb(79,79,82)}//gris clair
if modecolor = 8 {colortext3 = make_color_rgb(139,131,115)}//noir clair
if modecolor = 9 {colortext3 = make_color_rgb(193,179,152)}//noir clair
if modecolor = 10 {colortext3 = make_color_rgb(97,115,28)}//noir clair
if modecolor = 11 {colortext3 = make_color_rgb(245,251,250)}//noir clair
if modecolor = 12 {colortext3 = make_color_rgb(212,202,184)}//noir clair
if modecolor = 13 {colortext3 = make_color_rgb(139,142,96)}//noir clair
//if modecolor = 5 {colortext3 = make_color_rgb(97,115,28)}//noir clair
//if modecolor = 5 {colortext3 = make_color_rgb(97,115,28)}//noir clair

if modecolor &lt; 13 {
modecolor += 1
}else{
modecolor = 1
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
