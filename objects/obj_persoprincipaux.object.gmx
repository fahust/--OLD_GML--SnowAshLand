<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_npc2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
quest = 2//PERSO A PARTIR DE 2 SUR LE IMOBILE
alarm[0] = 2

name = ""
alphadecalstext = 0

//quest = 2 //sergeant stalker
//quest = 3 //

alphatuto1 = 0
alphatuto2 = 0
sprite_index = spr_npc3
headskin = 1

immobile = 0 // 1 = immobile 2 talkquest

questactivenow = 0

tuto = 0

blablasplit2 = ""
varstr2 = ""


mode2 = 7
blablaphrases = ""
animwalk = 0

path = path_add();

mx = 3776
my = 1568

blablaquestnow = 0
timequest = 0
blablasplit[0] = ""
blablasplit[1] = ""
blablasplit[2] = ""
blablasplit[3] = ""
blablasplit[4] = ""
blablasplit[5] = ""
blablasplit[6] = ""
blablasplit[7] = ""
blablasplit[8] = ""
blablasplit[9] = ""
blablasplit[10] = ""
blablasplit[11] = ""
blablasplit[12] = ""
blablasplit[13] = ""
blablasplit[14] = ""
blablasplit[15] = ""
blablasplit[16] = ""
blablasplit[17] = ""
blablasplit[18] = ""
blablasplit[19] = ""
blablasplit[20] = ""
blablasplit[21] = ""
blablasplit[22] = ""
blablasplit[23] = ""
blablasplit[24] = ""
blablasplit[25] = ""
blablasplit[26] = ""
blablasplit[27] = ""
blablasplit[28] = ""
blablasplit[29] = ""
blablasplit[30] = ""
blablasplit[31] = ""
blablasplit[32] = ""
blablasplit[33] = ""
blablasplit[34] = ""
blablasplit[35] = ""
blablasplit[36] = ""
blablasplit[37] = ""
blablasplit[38] = ""
blablasplit[39] = ""
blablasplit[40] = "" 
blablasplit[41] = ""
blablasplit[42] = ""
blablasplit[43] = ""
blablasplit[44] = ""
blablasplit[45] = ""
blablasplit[46] = ""
blablasplit[47] = ""
blablasplit[48] = ""
blablasplit[49] = ""
blablasplit[50] = "" 
splitquest = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//chargement du proposition // et talkquest et imobile //disparition si po present


iroom = 0
var i11;
 for (i11 = 0; i11 &lt; 700; i11 += 1){
 iroom += 1
 if room = ds_grid_get(obj_quest.questgrid,29, i11) {
 
if ds_grid_get(obj_quest.questgrid,22, i11) = quest {
if floor(ds_grid_get(obj_quest.questgrid,10, i11)) = 1 {
questactivenow = iroom-1
immobile = 1
i11 = 700
}}}

 if room = ds_grid_get(obj_quest.questgrid,16, i11)
 &amp;&amp; ds_grid_get(obj_quest.questgrid,13, i11) = 1 {
 
if ds_grid_get(obj_quest.questgrid,42, i11) = quest {
if floor(ds_grid_get(obj_quest.questgrid,10, i11)) = 1 {
questactivenow = iroom-1
immobile = 2
i11 = 700
}}
}

}

//empecher general de pop si pas sauver
if ds_grid_get(obj_quest.questgrid,10,264) &gt; 1 {}else{
if quest = 3 {
instance_destroy();
}
}

//disparaitre maire pour l'escort
if ds_grid_get(obj_quest.questgrid,10,253) = 1 {
if quest = 4 {
instance_destroy();
}
}

/*if mode2 = 1 {sprite_index = spr_mineur}
if mode2 = 2 {sprite_index = spr_mineur2}
if mode2 = 3 {sprite_index = spr_mineur3}
if mode2 = 4 {sprite_index = spr_bigprawler}
if mode2 = 5 {sprite_index = spr_prawler}
if mode2 = 6 {sprite_index = spr_npc2}
if mode2 = 7 {sprite_index = spr_npc3}
if mode2 = 8 {sprite_index = spr_npc4}
if mode2 = 9 {sprite_index = spr_npc5}
if mode2 = 10 {sprite_index = spr_npc6}
if mode2 = 11 {sprite_index = spr_npc7}
if mode2 = 12 {sprite_index = spr_npc9}
if mode2 = 13 {sprite_index = spr_npc10}*/

proposition = 0
if quest = 2 {name = "Marc Jakobsson";proposition = 9;headskin = 9;sprite_index = spr_npc3;}//sergent
if quest = 3 {name = "Jonas Rodland";proposition = 9;headskin = 3;sprite_index = spr_npc3;}//capitaine
if quest = 4 {name = "Aldian Salar";proposition = 9;headskin = 6;sprite_index = spr_npc2;}//maire des taudis
if quest = 5 {name = "Ragnar Aronsson";proposition = 9;headskin = 6;sprite_index = spr_npc4;}//major




proposition = 10
partage = 360/proposition
var i;
 for (i = 0; i &lt; proposition; i += 1)
    {
    //UN CERCLE MOIN DE 10 QUESTION
    if proposition &lt;= 10 {
    xx[i] = x+lengthdir_x(150,partage*i)
    yy[i] = y+lengthdir_y(150,partage*i)
    }else{
    //POUR AVOIR DEUX CERCLE
    if i &lt; 10 {
    xx[i] = x+lengthdir_x(150,(partage*2)*i)
    yy[i] = y+lengthdir_y(150,(partage*2)*i)
    }else{
    xx[i] = x+lengthdir_x(250,(partage*2)*i)
    yy[i] = y+lengthdir_y(250,(partage*2)*i)
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.6

if alphatuto1 &gt; 0 {alphatuto1 -= 0.01}
if alphatuto2 &gt; 0 {alphatuto2 -= 0.01}
if alarm[0] &lt; 0 {

//BLABLADE QUEST obj_immobile scr_nameia

if questactivenow &gt; 0 {


//TALKQUEST
if immobile = 2 {
blablaquestnow = 0
if is_undefined(ds_grid_get(obj_quest.questgrid,20, questactivenow)) {}else{
if ds_grid_get(obj_quest.questgrid,7, questactivenow) &lt;= obj_zombie.level 
{if ds_grid_get(obj_quest.questgrid,10, questactivenow) = 1 {
if point_distance(x,y,mouse_x,mouse_y) &lt; 70 {
blablaquestnow = 1
image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
//first = string_split2("/",ds_grid_get(obj_quest.questgrid,9, false)
varstr = ds_grid_get(obj_quest.questgrid,20, questactivenow)
//show_message(varstr)
string_split2(varstr)
strlgt = string_length(blablasplit[splitquest])
//blablanow = ds_grid_get(obj_quest.questgrid,9, idpoto)
//blablanow = splits[0]
if blablasplit[splitquest] = "" {}else{
if keyboard_check_pressed(ord("E")) {splitquest += 1;timequest = 0;}
if timequest &lt; strlgt*4 {timequest += 1}else{timequest = 0;splitquest += 1 }}
blablaphrases = blablasplit[splitquest]
//show_message(timequest)
//show_message(splitquest)
//show_message(blablasplit[splitquest])
if blablaphrases = "" {}
}

}}}

//draw_circle_colour(x,y,130,c_red,c_red,false)

if ds_grid_get(obj_quest.questgrid, 10, questactivenow) = 1 {//quete lancer et pas encore fini
if ds_grid_get(obj_quest.questgrid, 7, questactivenow) &lt;= obj_zombie.level {
if obj_zombie.karma &gt; 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, questactivenow) = 1 {


if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 &amp;&amp; blablaphrases = "" &amp;&amp;  point_distance(x,y,mouse_x,mouse_y) &lt; 70 {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check_pressed(ord("E")) {


splitquest = 0
questinfovar = ds_grid_get(obj_quest.questgrid,3,questactivenow)
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
finished = 1
quest = other.questactivenow
}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = ds_grid_get(obj_quest.questgrid,6, other.questactivenow)}

if ds_grid_get(obj_quest.questgrid,32, questactivenow) = "" {}else{
obj_nightcycle.walkienow = ds_grid_get(obj_quest.questgrid,32, questactivenow)}
obj_zombie.karma += ds_grid_get(obj_quest.questgrid,5, questactivenow)
ds_grid_set(obj_quest.questgrid, 10, questactivenow,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, questactivenow,4)//la mÃªttre dans les quetes fini

if ds_grid_get(obj_quest.questgrid, 30, questactivenow) = "" or ds_grid_get(obj_quest.questgrid, 30, questactivenow) &lt;= 0 {}else{ 
questinfovar = ds_grid_get(obj_quest.questgrid,3, ds_grid_get(obj_quest.questgrid, 30, questactivenow))
with(instance_create(x,y,obj_questinfo)){
nbrquestinfo = instance_number(obj_questinfo) 
alarm[1] = 1+(200*nbrquestinfo)
questinfovar = other.questinfovar
finished = 0
quest = other.questactivenow
}
ds_grid_set(obj_quest.questgrid, 10, ds_grid_get(obj_quest.questgrid, 30, questactivenow),1)
global.roomcible = ds_grid_get(obj_quest.questgrid,16, ds_grid_get(obj_quest.questgrid, 30, questactivenow))
global.roomdonneurdequest = ds_grid_get(obj_quest.questgrid,29, ds_grid_get(obj_quest.questgrid, 30, questactivenow))
}//ajouter la prochainequestprincipal
with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.questactivenow)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.questactivenow)))
alarmloot[1] = 800        }
splitquest = 0;timequest = 0;blablaphrases = "";questactivenow = 0;
blablasplit[0] = "";blablasplit[1] = "";blablasplit[2] = "";blablasplit[3] = "";blablasplit[4] = "";blablasplit[5] = "";blablasplit[6] = "";blablasplit[7] = "";blablasplit[8] = "";blablasplit[9] = ""
blablasplit[10] = "";blablasplit[11] = "";blablasplit[12] = "";blablasplit[13] = "";blablasplit[14] = "";blablasplit[15] = "";blablasplit[16] = "";blablasplit[17] = "";blablasplit[18] = "";blablasplit[19] = ""
blablasplit[20] = "";blablasplit[21] = "";blablasplit[22] = "";blablasplit[23] = "";blablasplit[24] = "";blablasplit[25] = "";blablasplit[26] = "";blablasplit[27] = "";blablasplit[28] = "";blablasplit[29] = ""
blablasplit[30] = "";blablasplit[31] = "";blablasplit[32] = "";blablasplit[33] = "";blablasplit[34] = "";blablasplit[35] = "";blablasplit[36] = "";blablasplit[37] = "";blablasplit[38] = "";blablasplit[39] = ""
blablasplit[40] = "" ;blablasplit[41] = "";blablasplit[42] = "";blablasplit[43] = "";blablasplit[44] = "";blablasplit[45] = "";blablasplit[46] = "";blablasplit[47] = "";blablasplit[48] = "";blablasplit[49] = "";
blablasplit[50] = "" }}

}else if obj_zombie.karma &lt;= 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, questactivenow) = 2 {

if ds_grid_get(obj_quest.questgrid, 10, questactivenow) = 1 {draw_sprite(spr_interoquest,0,x,y)}
if ds_grid_get(obj_quest.questgrid, 10, questactivenow) = 2 {draw_sprite(spr_validerquest,0,x,y)}

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 &amp;&amp; blablaphrases = "" &amp;&amp;  point_distance(x,y,mouse_x,mouse_y) &lt; 70   {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check_pressed(ord("E")){
ds_grid_set(obj_quest.questgrid, 10, questactivenow,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, questactivenow,4)//la mÃªttre dans les quetes fini

if ds_grid_get(obj_quest.questgrid, 30, questactivenow) = "" or ds_grid_get(obj_quest.questgrid, 30, questactivenow) &lt;= 0 {}else{ 
ds_grid_set(obj_quest.questgrid, 10, ds_grid_get(obj_quest.questgrid, 30, questactivenow),1)
global.roomcible = ds_grid_get(obj_quest.questgrid,16, ds_grid_get(obj_quest.questgrid, 30, questactivenow))
global.roomdonneurdequest = ds_grid_get(obj_quest.questgrid,29, ds_grid_get(obj_quest.questgrid, 30, questactivenow))
}//ajouter la prochainequestprincipal
obj_zombie.karma -= ds_grid_get(obj_quest.questgrid,5, other.questactivenow)
with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.questactivenow)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.questactivenow)))
alarmloot[1] = 800}
splitquest = 0;timequest = 0;blablaphrases = "";questactivenow = 0;
blablasplit[0] = "";blablasplit[1] = "";blablasplit[2] = "";blablasplit[3] = "";blablasplit[4] = "";blablasplit[5] = "";blablasplit[6] = "";blablasplit[7] = "";blablasplit[8] = "";blablasplit[9] = ""
blablasplit[10] = "";blablasplit[11] = "";blablasplit[12] = "";blablasplit[13] = "";blablasplit[14] = "";blablasplit[15] = "";blablasplit[16] = "";blablasplit[17] = "";blablasplit[18] = "";blablasplit[19] = ""
blablasplit[20] = "";blablasplit[21] = "";blablasplit[22] = "";blablasplit[23] = "";blablasplit[24] = "";blablasplit[25] = "";blablasplit[26] = "";blablasplit[27] = "";blablasplit[28] = "";blablasplit[29] = ""
blablasplit[30] = "";blablasplit[31] = "";blablasplit[32] = "";blablasplit[33] = "";blablasplit[34] = "";blablasplit[35] = "";blablasplit[36] = "";blablasplit[37] = "";blablasplit[38] = "";blablasplit[39] = ""
blablasplit[40] = "" ;blablasplit[41] = "";blablasplit[42] = "";blablasplit[43] = "";blablasplit[44] = "";blablasplit[45] = "";blablasplit[46] = "";blablasplit[47] = "";blablasplit[48] = "";blablasplit[49] = "";
blablasplit[50] = "" 
}}


}}}



}else{//immobile = 1
//IMOBILE

blablaquestnow = 0
if is_undefined(ds_grid_get(obj_quest.questgrid,20, questactivenow)) {}else{
if ds_grid_get(obj_quest.questgrid,7, questactivenow) &lt;= obj_zombie.level 
{//
if ds_grid_get(obj_quest.questgrid,10, questactivenow) = 1 {
if point_distance(x,y,mouse_x,mouse_y) &lt; 70 {

blablaquestnow = 1
image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
//first = string_split2("/",ds_grid_get(obj_quest.questgrid,9, false)
varstr = ds_grid_get(obj_quest.questgrid,9, questactivenow)
//show_message(varstr)
string_split2(varstr)
strlgt = string_length(blablasplit[splitquest])
//blablanow = ds_grid_get(obj_quest.questgrid,9, idpoto)
//blablanow = splits[0]
if blablasplit[splitquest] = "" {}else{
if keyboard_check_pressed(ord("E")) {splitquest += 1;timequest = 0;}
if timequest &lt; strlgt*4 {timequest += 1}else{timequest = 0;splitquest += 1 }}
blablaphrases = blablasplit[splitquest]
//show_message(timequest)
//show_message(splitquest)
//show_message(blablasplit[splitquest])

}

}}}



if ds_grid_get(obj_quest.questgrid, 10, questactivenow) = 1 {//quete lancer et pas encore fini
if obj_zombie.karma &gt; 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, questactivenow) = 1 {

//if ds_grid_get(obj_quest.questgrid, 10, quest) = 0 {draw_sprite(spr_exclaquest,0,x,y)}
//if ds_grid_get(obj_quest.questgrid, 10, quest) = 1 {draw_sprite(spr_interoquest,0,x,y)}
//if ds_grid_get(obj_quest.questgrid, 10, quest) = 2 {draw_sprite(spr_validerquest,0,x,y)}

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 &amp;&amp; blablaphrases = "" &amp;&amp;  point_distance(x,y,mouse_x,mouse_y) &lt; 70   {

if ds_grid_get(obj_quest.questgrid,28, questactivenow)  = "" or ds_grid_get(obj_quest.questgrid,28, questactivenow) &lt;= 0 {questactivenow = 0}else{
if scr_itemcheck(ds_grid_get(obj_quest.questgrid,28, questactivenow)) &lt;= 0 {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check_pressed(ord("E")){
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = ds_grid_get(obj_quest.questgrid,28, other.questactivenow)}
//scr_itempickup(ds_grid_get(obj_quest.questgrid,28, quest),ds_grid_get(obj_quest.questgrid,28, quest),floor(random_range(10,999999)),1,0,1);
}
}questactivenow = 0;splitquest = 0;timequest = 0;blablaphrases = "";
blablasplit[0] = "";blablasplit[1] = "";blablasplit[2] = "";blablasplit[3] = "";blablasplit[4] = "";blablasplit[5] = "";blablasplit[6] = "";blablasplit[7] = "";blablasplit[8] = "";blablasplit[9] = ""
blablasplit[10] = "";blablasplit[11] = "";blablasplit[12] = "";blablasplit[13] = "";blablasplit[14] = "";blablasplit[15] = "";blablasplit[16] = "";blablasplit[17] = "";blablasplit[18] = "";blablasplit[19] = ""
blablasplit[20] = "";blablasplit[21] = "";blablasplit[22] = "";blablasplit[23] = "";blablasplit[24] = "";blablasplit[25] = "";blablasplit[26] = "";blablasplit[27] = "";blablasplit[28] = "";blablasplit[29] = ""
blablasplit[30] = "";blablasplit[31] = "";blablasplit[32] = "";blablasplit[33] = "";blablasplit[34] = "";blablasplit[35] = "";blablasplit[36] = "";blablasplit[37] = "";blablasplit[38] = "";blablasplit[39] = ""
blablasplit[40] = "" ;blablasplit[41] = "";blablasplit[42] = "";blablasplit[43] = "";blablasplit[44] = "";blablasplit[45] = "";blablasplit[46] = "";blablasplit[47] = "";blablasplit[48] = "";blablasplit[49] = "";
blablasplit[50] = "" }}}}
}


}else{



//BLABLANORMAL AVEC QUESTION

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 300 {

if keyboard_check_pressed(ord("E")) {splitquest += 1;timequest = 0;}

if keyboard_check_pressed(ord('E')){
var i;
 for (i = 0; i &lt; proposition; i += 1)
    {if point_distance(mouse_x,mouse_y,xx[i],yy[i]) &lt; 17 &amp;&amp; blablaphrases = "" {
    splitquest = 0;timequest = 0;blablaphrases = "";
blablasplit[0] = "";blablasplit[1] = "";blablasplit[2] = "";blablasplit[3] = "";blablasplit[4] = "";blablasplit[5] = "";blablasplit[6] = "";blablasplit[7] = "";blablasplit[8] = "";blablasplit[9] = ""
blablasplit[10] = "";blablasplit[11] = "";blablasplit[12] = "";blablasplit[13] = "";blablasplit[14] = "";blablasplit[15] = "";blablasplit[16] = "";blablasplit[17] = "";blablasplit[18] = "";blablasplit[19] = ""
blablasplit[20] = "";blablasplit[21] = "";blablasplit[22] = "";blablasplit[23] = "";blablasplit[24] = "";blablasplit[25] = "";blablasplit[26] = "";blablasplit[27] = "";blablasplit[28] = "";blablasplit[29] = ""
blablasplit[30] = "";blablasplit[31] = "";blablasplit[32] = "";blablasplit[33] = "";blablasplit[34] = "";blablasplit[35] = "";blablasplit[36] = "";blablasplit[37] = "";blablasplit[38] = "";blablasplit[39] = ""
blablasplit[40] = "" ;blablasplit[41] = "";blablasplit[42] = "";blablasplit[43] = "";blablasplit[44] = "";blablasplit[45] = "";blablasplit[46] = "";blablasplit[47] = "";blablasplit[48] = "";blablasplit[49] = "";
blablasplit[50] = "" 
    
    
    
    
    string_split2(obj_quest.principal[quest,i])
    splitquest = 0;timequest = 0;blablaphrases = ""}}}


image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)

strlgt = string_length(blablasplit[splitquest])
if blablasplit[splitquest] = ""{
blablaphrases = ""
}else{

if timequest &lt; strlgt*4 {timequest += 0.5}else{timequest = 0;splitquest += 1 }
blablaphrases = blablasplit[splitquest]}



}else{splitquest = 0;timequest = 0;blablaphrases = "";
blablasplit[0] = "";blablasplit[1] = "";blablasplit[2] = "";blablasplit[3] = "";blablasplit[4] = "";blablasplit[5] = "";blablasplit[6] = "";blablasplit[7] = "";blablasplit[8] = "";blablasplit[9] = ""
blablasplit[10] = "";blablasplit[11] = "";blablasplit[12] = "";blablasplit[13] = "";blablasplit[14] = "";blablasplit[15] = "";blablasplit[16] = "";blablasplit[17] = "";blablasplit[18] = "";blablasplit[19] = ""
blablasplit[20] = "";blablasplit[21] = "";blablasplit[22] = "";blablasplit[23] = "";blablasplit[24] = "";blablasplit[25] = "";blablasplit[26] = "";blablasplit[27] = "";blablasplit[28] = "";blablasplit[29] = ""
blablasplit[30] = "";blablasplit[31] = "";blablasplit[32] = "";blablasplit[33] = "";blablasplit[34] = "";blablasplit[35] = "";blablasplit[36] = "";blablasplit[37] = "";blablasplit[38] = "";blablasplit[39] = ""
blablasplit[40] = "" ;blablasplit[41] = "";blablasplit[42] = "";blablasplit[43] = "";blablasplit[44] = "";blablasplit[45] = "";blablasplit[46] = "";blablasplit[47] = "";blablasplit[48] = "";blablasplit[49] = "";
blablasplit[50] = "" }

}

}

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &gt; 300 {
splitquest = 0;timequest = 0;blablaphrases = "";}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//obj_zombie.tutofinishedsure = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();



//image_speed = 0.5+random(0.3)/global.varfpsmax

//if mode = 1 {visible = false}//faire disparaitre si objet interaction
//obj_nightcycle//scr_nameia

/*if mode2 = 1 {sprite_index = spr_mineur}
if mode2 = 2 {sprite_index = spr_mineur2}
if mode2 = 3 {sprite_index = spr_mineur3}
if mode2 = 4 {sprite_index = spr_bigprawler}
if mode2 = 5 {sprite_index = spr_prawler}
if mode2 = 6 {sprite_index = spr_npc2}
if mode2 = 7 {sprite_index = spr_npc3}
if mode2 = 8 {sprite_index = spr_npc4}
if mode2 = 9 {sprite_index = spr_npc5}
if mode2 = 10 {sprite_index = spr_npc6}
if mode2 = 11 {sprite_index = spr_npc7}
if mode2 = 12 {sprite_index = spr_npc9}
if mode2 = 13 {sprite_index = spr_npc10}*/
image_xscale = 1
image_yscale = 1
//image_index = animwalk/2
draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,c_white,image_alpha)

if mode2 &lt; 6 {
if headskin = 1 {
draw_sprite_ext(spr_head1,image_index,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 2 {
draw_sprite_ext(spr_head2,image_index,x,y,0.8,0.8,image_angle,c_white,image_alpha)}
if headskin = 3 {
draw_sprite_ext(spr_head3,image_index,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 4 {
draw_sprite_ext(spr_head4,image_index,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 5 {
draw_sprite_ext(spr_head5,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 6 {
draw_sprite_ext(spr_head6,image_index,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 7 {
draw_sprite_ext(spr_head7,image_index,x,y,0.6,0.6,image_angle,c_white,image_alpha)}
if headskin = 8 {
draw_sprite_ext(spr_head8,image_index,x,y,0.7,0.7,image_angle,c_white,image_alpha)}
if headskin = 9 {
draw_sprite_ext(spr_head9,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 10 {
draw_sprite_ext(spr_head10,image_index,x,y,0.75,0.75,image_angle,c_white,image_alpha)}
if headskin = 11 {
draw_sprite_ext(spr_head11,image_index,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 12 {
draw_sprite_ext(spr_head12,image_index,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 13 {
draw_sprite_ext(spr_head13,image_index,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
if headskin = 14 {
draw_sprite_ext(spr_head14,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 15 {
draw_sprite_ext(spr_head15,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 16 {
draw_sprite_ext(spr_head16,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 17 {
draw_sprite_ext(spr_head17,image_index,x,y,0.65,0.65,image_angle,c_white,image_alpha)}
if headskin = 18 {
draw_sprite_ext(spr_head18,image_index,x,y,0.70,0.70,image_angle,c_white,image_alpha)}
}

/*blablaquestnow = 0
if is_undefined(ds_grid_get(obj_quest.questgrid,20, quest)) {}else{
if ds_grid_get(obj_quest.questgrid,7, quest) &lt;= obj_zombie.level 
{//
if ds_grid_get(obj_quest.questgrid,10, quest) = 1 {
if point_distance(x,y,mouse_x,mouse_y) &lt; 70 {

blablaquestnow = 1
image_angle = point_direction(x,y,obj_zombie.x,obj_zombie.y)
//first = string_split2("/",ds_grid_get(obj_quest.questgrid,9, false)
varstr = ds_grid_get(obj_quest.questgrid,20, quest)
string_split2(varstr)
strlgt = string_length(blablasplit[splitquest])
if blablasplit[splitquest] = "" {}else{
if keyboard_check_pressed(ord("E")) {splitquest += 1;timequest = 0;}
if timequest &lt; strlgt*4 {timequest += 1}else{timequest = 0;splitquest += 1 }}
blablaphrases = blablasplit[splitquest]
if blablaphrases = "" {
}
}

}}}

//draw_circle_colour(x,y,130,c_red,c_red,false)
if ds_grid_get(obj_quest.questgrid, 10, quest) = 1 {//quete lancer et pas encore fini
if ds_grid_get(obj_quest.questgrid, 7, quest) &lt;= obj_zombie.level {
if obj_zombie.karma &gt; 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 1 {


if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 &amp;&amp; blablaphrases = "" &amp;&amp;  point_distance(x,y,mouse_x,mouse_y) &lt; 70  {
if scr_itemcheck(ds_grid_get(obj_quest.questgrid,21,quest)) &gt;= ds_grid_get(obj_quest.questgrid,17,quest) {
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
}else{
if global.language = 1 {obj_cursor.infoall = "Vous n'avez pas rempli les conditions"}else
if global.language = 2 {obj_cursor.infoall = "You did not achieved the conditions"}
}

//if keyboard_check_pressed(ord("E")) {show_message(ds_grid_get(obj_quest.questgrid,21,quest))}
if keyboard_check_pressed(ord("E")) &amp;&amp; scr_itemcheck(ds_grid_get(obj_quest.questgrid,21,quest)) &gt;= ds_grid_get(obj_quest.questgrid,17,quest) {
repeat(ds_grid_get(obj_quest.questgrid,17,quest)) {scr_itemdrop(ds_grid_get(obj_quest.questgrid,21,quest))}
obj_zombie.karma += ds_grid_get(obj_quest.questgrid,5, quest)
if ds_grid_get(obj_quest.questgrid,32, quest) = "" {}else{
obj_nightcycle.walkienow = ds_grid_get(obj_quest.questgrid,32, quest)}
with(instance_create(obj_zombie.x,obj_zombie.y,obj_lootobj)){itemloot = ds_grid_get(obj_quest.questgrid,6, other.quest)}
ds_grid_set(obj_quest.questgrid, 10, quest,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, quest,4)//la mÃªttre dans les quetes fini
if ds_grid_get(obj_quest.questgrid, 30, quest) = "" or ds_grid_get(obj_quest.questgrid, 30, quest) &lt;= 0 {}else{ 
ds_grid_set(obj_quest.questgrid, 10, ds_grid_get(obj_quest.questgrid, 30, quest),1)}//ajouter la prochainequestprincipal
with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.quest)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.quest)))
alarmloot[1] = 800
/*ds_map_add(lootinfods,string(2),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,6, other.quest)))
alarmloot[2] = 800*/
    
    //}
/*if obj_quest.questactivenow[mode] = 1 {
if instance_exists(obj_enemy2){}else{if mode = 1 {obj_quest.questask[mode] = 100}}
if mode = 2 {obj_quest.questask[mode] = 100}
}*///on active qd il est proche
/*}}

}else if obj_zombie.karma &lt;= 0 &amp;&amp; ds_grid_get(obj_quest.questgrid, 18, quest) = 2 {

//if ds_grid_get(obj_quest.questgrid, 10, quest) = 1 {draw_sprite(spr_interoquest,0,x,y)}
//if ds_grid_get(obj_quest.questgrid, 10, quest) = 2 {draw_sprite(spr_validerquest,0,x,y)}

if point_distance(x,y,obj_zombie.x,obj_zombie.y) &lt; 130 {
if instance_exists(obj_questinfo){}else{
splitquest = 0
questinfovar = ds_grid_get(obj_quest.questgrid,3,quest)
with(instance_create(x,y,obj_questinfo)){
questinfovar = other.questinfovar
finished = 1
}
if global.language = 1 {obj_cursor.infoall = "Appuie sur 'E' pour interagir"}else
if global.language = 2 {obj_cursor.infoall = "Push 'E' to interact"}
if keyboard_check_pressed(ord("E")) &amp;&amp; scr_itemcheck(ds_grid_get(obj_quest.questgrid,21,quest)) &gt;= ds_grid_get(obj_quest.questgrid,17,quest) {
repeat(ds_grid_get(obj_quest.questgrid,17,quest)) {scr_itemdrop(ds_grid_get(obj_quest.questgrid,21,quest))}
ds_grid_set(obj_quest.questgrid, 10, quest,2)//VALIDER LA QUETE
ds_grid_set(obj_quest.questgrid, 19, quest,4)//la mÃªttre dans les quetes fini
if ds_grid_get(obj_quest.questgrid, 30, quest) = "" or ds_grid_get(obj_quest.questgrid, 30, quest) &lt;= 0 {}else{ 
ds_grid_set(obj_quest.questgrid, 10, ds_grid_get(obj_quest.questgrid, 30, quest),1)}//ajouter la prochainequestprincipal
obj_zombie.karma -= ds_grid_get(obj_quest.questgrid,5, other.quest)
with(obj_infoloot){//ET EN DONNER L INFO
ds_map_add(lootinfods,string(0),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,3, other.quest)))
alarmloot[0] = 800
ds_map_add(lootinfods,string(1),"Reward K : "
+string(ds_grid_get(obj_quest.questgrid,5, other.quest)))
alarmloot[1] = 800
/*ds_map_add(lootinfods,string(2),"Quest finished : "
+string(ds_grid_get(obj_quest.questgrid,6, other.quest)))
alarmloot[2] = 800*/
    
  /*  }

}}}


}}}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
